*PROCESS USING(WARN(15)),SUPRWARN(324,420,436,437)             @Z07LASM 00005000
         ACONTROL CPAT(NOSYSL,NOCASE),FLAG(PAGE0)              @R10LFP0 00006000
CNVT     TITLE 'HASP JCL CONVERSION MODULE -- PROLOG (MODULE COMMENT BLC00010000
               OCK)'                                                    00020000
* **PROPRIETARY STATEMENT********************************************** 00020700
*                                                                     * 00021600
*   LICENSED MATERIALS-PROPERTY OF IBM                                * 00022500
*   THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                      * 00023400
*   5650-ZOS Copyright IBM Corp. 1983, 2019                           * 00024300
*                                                                     * 00026100
*   STATUS = HJE77C0                                                  * 00027000
*                                                                     * 00027900
* **END-OF-PROPRIETARY-STATEMENT*************************************** 00028800
*********************************************************************** 00030000
*                                                                     * 00040000
* MODULE NAME = HASJES20 ( HASPCNVT CSECT )                           * 00050000
*                                                                     * 00060000
* DESCRIPTIVE NAME = HASPCNVT CSECT OF JES2 MAIN MODULE               * 00070000
*                                                                     * 00130000
* FUNCTION = THE HASPCNVT CSECT CONTAINS THE JES2 JCL CONVERSION      * 00160000
*            PROCESSOR.  THIS PROCESSOR PUTS JOBS THROUGH             * 00170000
*            JCL CONVERSION.                                          * 00180000
*                                                                     * 00200000
* NOTES = SEE BELOW                                                   * 00210000
*                                                                     * 00220000
*    DEPENDENCIES = NONE                                              * 00230000
*                                                                     * 00240000
*    RESTRICTIONS = NONE                                              * 00250000
*                                                                     * 00260000
*    REGISTER CONVENTIONS = SEE ENTRY POINT DOCUMENTATION             * 00270000
*                                                                     * 00280000
*    PATCH LABEL = $PATCHSP in the HCT (R11 addressability)    @430P270 00282000
*                                                                     * 00285000
* MODULE TYPE = PROCEDURE, TABLE ( CSECT TYPE )                       * 00290000
*                                                                     * 00300000
*    PROCESSOR = IBM High Level Assembler/MVS 1.5.0            @Z07LASM 00315000
*                                                                     * 00320000
*    MODULE SIZE = SEE $MODEND MACRO EXPANSION AT END OF ASSEMBLY     * 00330000
*                                                                     * 00340000
*    ATTRIBUTES = JES2-REENTRANT, RMODE ANY, AMODE 31,         @Z07LBLD 00350000
*                 supervisor state, code/tasks in key 1        @430P270 00355000
*                                                                     * 00360000
* ENTRY POINT =    HA$PCNVT - INITIAL ENTRY TO JCL CONVERSION AND     * 00370000
*                             AUTHORIZATION CHECK PROCESSOR           * 00380000
*                                                                     * 00410000
*    PURPOSE = SEE FUNCTION                                           * 00420000
*                                                                     * 00430000
*    LINKAGE = SEE ENTRY POINT DOCUMENTATION                          * 00440000
*                                                                     * 00450000
*    INPUT = SEE ENTRY POINT DOCUMENTATION                            * 00460000
*                                                                     * 00470000
*    OUTPUT = SEE ENTRY POINT DOCUMENTATION                           * 00480000
*                                                                     * 00490000
*    EXIT-NORMAL = SEE ENTRY POINT DOCUMENTATION                      * 00500000
*                                                                     * 00510000
*    EXIT-ERROR = SEE ENTRY POINT DOCUMENTATION                       * 00520000
*                                                                     * 00530000
* EXTERNAL REFERENCES = SEE BELOW                                     * 00540000
*                                                                     * 00550000
*    ROUTINES = NONE                                                  * 00560000
*                                                                     * 00570000
*    DATA AREAS = SEE $MODULE MACRO SPECIFICATION                     * 00580000
*                                                                     * 00590000
*    CONTROL BLOCKS = SEE $MODULE MACRO SPECIFICATION                 * 00600000
*                                                                     * 00610000
* TABLES = SEE $MODULE MACRO SPECIFICATION                            * 00620000
*                                                                     * 00630000
* MACROS = JES2 - $ACTIVE, $AMODE, $ARMODE, $BLDMSG, $CALL, $CBIO,    * 00640000
*                 $CPOOL, $DISTERR, $DOGCAT, $DOGJQE, $DORMANT,       * 00650000
*                 $DTEDYN, $ENTRY, $ENVIRON, $ESTAE, $EXIT, $FREEBUF, * 00660000
*                 $FREMAIN, $GETMAIN, $GETWORK, $JCTXGET, $JZDN,      * 00670000
*                 $MODEND, $MODULE, $MQTRCNV, $MSG, $PCETERM, $POST,  * 00680000
*                 $POSTXEQ, $QGET, $QJQE, $QMOD, $QPUT, $QSUSE,       * 00690000
*                 $QZJC, $RETURN, $RETWORK, $RUSE, $SAVE, $SETRP,     * 00700000
*                 $STIMER, $STORE, $SUBIT, $TTIMER, $WAIT, $WTO,      * 00710000
*                 $XECBSRV, $XMPOST                                   * 00720000
*                                                                     * 00730000
* MACROS = MVS  - CALLRTM, DETACH, ENQ, ESTAEX, MODESET, NIL, OIL,    * 00740000
*                 POST, SETLOCK, SYSSTATE, VRADATA, WAIT              * 00745000
*                                                                     * 00746000
* CHANGE ACTIVITY                                                     * 00750000
*                                                                     * 00760000
*        @133     MVS/SP-JES2 RELEASE 3 LEVEL 3 (SP1.3.3, HJE2329)    * 00800000
*        @133XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 1.3.3   * 00810000
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00820000
*        @134XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 1.3.4   * 00821000
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00822000
*        @136     MVS/SP-JES2 VERSION 1 RELEASE 3 LEVEL 6             * 00823000
*                 (SP1.3.6, HJE1367)                                  * 00824000
*        @136XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 1.3.6   * 00824100
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00824400
*        @215     MVS/SP-JES2 VERSION 2 RELEASE 1 LEVEL 5             * 00825000
*                 (SP2.1.5, HJE2215)                                  * 00826000
*        @220     MVS/SP-JES2 VERSION 2 RELEASE 2 LEVEL 0             * 00826200
*                 (SP2.2.0, HJE2221)                                  * 00826400
*        @220XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 2.2.0   * 00826600
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00826800
*        @311     MVS/SP-JES2 VERSION 3 RELEASE 1 LEVEL 1             * 00827000
*                 (SP3.1.1, HJE3311)                                  * 00827200
*        @311XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 3.1.1   * 00827400
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00827600
*        @313XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 3.1.3   * 00827800
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00828000
*        @420XX   MAINTENANCE MERGED INTO MVS/SP-JES2 RELEASE 4.2.0   * 00828200
*                 (MODULE HASPDOC DOCUMENTS THE APAR NUMBERS)         * 00828400
*                                                                     * 00828600
* $313LELV=ELV      HJE3313 880417 LJO:  Early verify                 * 00828800
* $313P023=PTM      HJE3313 880815 LJO:  Fail job if SYSIN auth fails * 00829000
* $313P137=PTM      HJE3313 890616 SAA:  Remove old log function      * 00829200
* $313LBLD=BUILD    HJE3313 890916 SAA:  Driver build                 * 00829400
*                                                                     * 00829600
* $410LBUF=BUF      HJE4410 890409 T_C1: BUFFER VSCR                  * 00829800
* $410LUPS=ENT_II   HJE4410 890420 TYT:  USER PROCLIB SUPPORT         * 00830000
* $410LVSC=VSCR     HJE4410 890430 T_C1: $CBIO                        * 00830900
* $410LVSC=VSCR     HJE4410 890501 CLW:  $CBIO                        * 00833900
* $410P270=PTM      HJE4410 891120 CLW:  PTM PGL0270                  * 00835000
* $410P269=PTM      HJE4410 891117 CLW:  PTM PGL0269                  * 00835200
* $410P342=PTMS     HJE4410 900103 RKK:  PTM PGL0342 - HASP396 fix    * 00835500
* $410P413=PTM      HJE4410 900126 CLW:  PTM PGL0413                  * 00835600
* $410P463=PTMS     HJE4410 900306 RAC1: PGL0463 SMF opts from CAT    * 00835900
* $410P460=PTM      HJE4410 900319 RAH:  PGL0460 Converter abend fix  * 00836200
*                                                                     * 00836500
* $420LTST=APPC     HJE4420 890518 :     Init Start/Term              * 00837100
* $420D007=DCR07    HJE4420 900710 A_D:  EXIT44  USER REQUIREMENT     * 00837700
* $420P076=DCR07    HJE4420 900716 A_D:  PTM PIL0076                  * 00838300
* $420P123=PTM      HJE4420 901115 A_D:  PTM PIL0123 EXIT 44 fix      * 00838900
* $420P190=PTM      HJE4420 901119 A_D:  PTM PIL0190 EXIT 44 fix      * 00839500
* $420P252=10X      HJE4420 901130 GLT:  PIL0252 - Bad Indicator      * 00840100
*                                                                     * 00840700
* $430P306=10X      HJE4430 920603 J_K2: Accounting info -> SMF26     * 00841300
* $430P618=10X      HJE4430 920713 J_K2: CNVT $WAIT forever           * 00841900
* $430P270=10X      HJE4430 920719 HGF:  $MODULE, ENVIRON, RMODE      * 00842500
* $430P515=10X      HJE4430 920803 W_C1: SMF Buffer Queueing          * 00843100
*                                                                     * 00843700
* $510LAFF=HPCS     HJE5510 910930 MAA:  Support 32-Way MAS           * 00844300
* $510LRBS=MERGE    HJE5510 921015 SAA:  Rebase 510 on 430            * 00844900
* $510LRBS=MERGE    HJE5510 921028 SAA:  Code review comments         * 00845500
* $510LSCR=RDRCR    HJE5510 930324 CLW:  $GETNHB, $FRENHB, $CPOOL     * 00846100
* $510LSCR=RDRCR    HJE5510 930324 CLW:  Storage constraint relief    * 00846700
* $510LSCR=RDRCR    HJE5510 930329 CLW:  Storage constraint relief    * 00847300
* $510P154=HPCS     HJE5510 930707 J_K2: Zero memory fields when rd   * 00847500
* $520LJQV=QVERIFY  HJE5520 940208 W_C1: Queue Verification           * 00847900
* $520P108=QVERIFY  HJE5520 940826 CLW:  $QBUSY/$#BUSY ACTION=TEST    * 00848300
* $520P060=SPXJ2    HJE5520 940827 J_K2: MTTR in disterr SYMREC       * 00848700
* $520P109=SPXJ2    HJE5520 940827 J_K2: $DISTERR Serviceability      * 00849100
* $520LHLA=BASEQ    HJE5520 941008 GMD:  Change HASM to HLASM         * 00849500
*                                                                     * 00849900
* $R01P010=PTM      HJE6601 950217 JMO:  PTM PQJ0012                  * 00850300
* $R01LASM=BASEQ    HJE6601 950825 CLW:  High Level Assembler change  * 00850700
*                                                                     * 00851100
* $R04LCMD=WLM      HJE6604 960913 CLW:  Job Commands                 * 00851500
* $R04LWLM=ENHPSO   HJE6604 960913 J_K2: Classification               * 00851900
* $R04P096=WLM      HJE6604 970331 J_K2: TYPRUN=JCLHOLD, JS           * 00852300
* $R04P103=WLM      HJE6604 970429 J_K2: Time of convert algorithm    * 00853000
* $R04P596=WLM      HJE6604 970429 J_K2: SCHENV -> SMF 26             * 00854000
* $R04P172=WLM      HJE6604 970716 J_K2: ABEND 158-15F                * 00855200
* $R04P167=WLM      HJE6604 970716 CLW:  $TSPOOLDEF,SPOOLNUM          * 00856000
*                                                                     * 00856500
* $R07P007=BUILD    HJE6607 980811 CEM:  PVX0007 JCLLIB Support       * 00856700
* $R07P025=PTMS     HJE6607 981001 CEM:  JCLLIB Support Cleanup       * 00856900
*                                                                     * 00857100
* $R10LBLD=BUILD    HJE7703 990413 TJW:  Driver build                 * 00857300
* $R10LADR=WLM      HJE7703 000128 TJW:  Addressability fixes         * 00857500
* $R10LFP0=WLM      HJE7703 000128 TJW:  Enable FLAG(PAGE0)           * 00857700
* $R10P004=PTMS     HJE7703 000301 TJW:  Ensure JCT written in CNVT   * 00857900
*                                                                     * 00858100
* $Z02P007=PROCLIB  HJE7705 000605 TJW:  Dynamic PROCLIB              * 00858300
* $Z02LG64=G64KJOBS HJE7705 000806 JMS:  >64k jobs support            * 00858500
* $Z02LLRJ=LRJOB    HJE7705 000919 J_K2: Long Running Job Support     * 00858700
* $Z02P064=LRJ      HJE7705 001221 J_K2: JESLOG=SPIN for all jobs     * 00858900
*                                                                     * 00859100
* $Z04LHIO=HAMIO    HJE7707 010914 TJW:  HAM I/O performance          * 00859300
* $Z04LEOM=EOM      HJE7707 011112 J_K2: EOM Support                  * 00859500
*                                                                     * 00859700
* $Z07LTCP=NJETCP   HJE7720 030703 CLW:  NETSRV addrspc init          * 00859900
* $Z07LBLD=NJETCP   HJE7720 031201 CLW:  RMODE ANY                    * 00860100
* $Z07LASM=NJETCP   HJE7720 050203 CLW:  HLASM 5.0 support            * 00860300
* $Z07LTPR=NJETCP   HJE7720 050305 TJW:  Trace performance code       * 00860500
*                                                                     * 00860700
* $Z08LWLM=WLMBAL   HJE7730 051101 J_K2:                              * 00860900
* $Z08D040=WLMBAL   HJE7730 060214 J_K2: CATQAFF not initialized      * 00861100
*                                        MG06869                      * 00861300
*                                                                     * 00861500
* $Z09LCAN=BASEQ    HJE7740 060619 TJW:  $C job in job select         * 00861700
* $Z09LTRA=TRCFILTR HJE7740 060810 TJW:  $TRACE filtering             * 00861900
*                                                                     * 00862100
* $Z11LSSF=SDSFASST HJE7760 080709 CLW:  ENF changes                  * 00862300
*                                                                     * 00862500
* $Z12LMQT=MISC     HJE7770 091125 KJK:  Spool control block convert  * 00862700
*                                                                     * 00862900
* $Z13LIST=INSTPROC HJE7780 100726 MLN:  INSTPROC - instream data     * 00863100
* $Z13LJBR=JOBRC    HJE7780 100917 TJW:  JOBRC support                * 00863300
*                                                                     * 00863500
* $Z21LENQ=DSENQSHR HJE7790 110721 TJW:  DSN ENQ downgrade support    * 00863700
* $Z21LSYM=JCLSYM   HJE7790 110830 ALP:  Job symbol table             * 00863900
* $Z21LCOR=JOBCOR   HJE7790 110923 BWT:  Job Correlator - Symbol supp * 00864100
* $Z21LCLS=CLASS8   HJE7790 111127 SJS:  8 character jobclass         * 00864300
* $MG17057=JOBCLS   HJE7790 120106 KJK:  HASPCNVT QSUSE fix           * 00864500
*                                        MG17057                      * 00864700
* $Z21LCOR=JOBCOR   HJE7790 120119 BWT:  JOBCORR CNVT BCP level fix   * 00864900
* $Z21LSYM=JCLSYM   HJE7790 120206 ALP:  BCP level for SYMBOLS        * 00865100
* $Z21LSYM=JCLSYM   HJE7790 120207 ALP:  BCP level for SYMBOLS        * 00865300
* $Z21LCLS=JOBCLASS HJE7790 120208 SJS:  Jobclass not found at conver * 00865500
* $Z21LCOR=JOBCOR   HJE7790 120327 BWT:  JOBCORR JQXMAXRC maintenance * 00865700
* $Z21D103=BASEQ    HJE7790 120402 ALP:  JCL symbolics various        * 00865900
*                                        MG17505                      * 00866100
* $Z21LBAS=BASEQ    HJE7790 120514 ALP:  Pre-conversion JCT           * 00866300
* $Z21LCLS=JOBCLS   HJE7790 120606 KJK:  8Char JC - Cleanup           * 00866500
* $Z21LCLS=JOBCLS   HJE7790 120910 KJK:  8Char JC - rework            * 00866700
* $Z21LCJL=COMJCL   HJE7790 121011 J_K2: Common JCL                   * 00866900
* $TW0LCNV=JES2CI   HJE7790 121115 TJW:  Back to back C/I             * 00867100
* $Z21LCNV=JES2CI   HJE7790 121205 TJW:  Back to back C/I fix         * 00867300
* $Z21D143=JES2CI   HJE7790 130102 TJW:  Cancel job in CNVT problems  * 00867500
*                                        MG18432                      * 00867700
* $Z21D144=JES2CI   HJE7790 130102 TJW:  $D06 ABENDs                  * 00867900
*                                        MG18433                      * 00868100
* $Z21D169=JES2CI   HJE7790 130223 TJW:  DFSMS IDAX processing bypass * 00868300
*                                        MG18645                      * 00868500
*                                                                     * 00868700
* $Z22D021=JES2CI   HJE77A0 130522 TJW:  Add DCNVJCTA back to DTE     * 00868900
*                                        MG18933                      * 00869100
* $Z22LCNV=JES2CI   HJE77A0 130604 TJW:  Bad jobclass from exit       * 00869300
* $Z22D034=JES2CI   HJE77A0 130624 TJW:  BERT lock not released       * 00869500
*                                        MG19014                      * 00869700
* $Z22D003=CLASS8   HJE77A0 130822 TJW:  Default JOBCLASS             * 00869900
*                                        MG17298                      * 00870100
* $Z22LDLS=DEADLINE HJE77A0 140324 ALP:  STARTBY/HOLDUNTL stage 1     * 00870300
* $Z22D064=JES2CI   HJE77A0 140522 TJW:  Jobs hung in conversion      * 00870500
*                                        MG19480                      * 00870700
* $Z22LDEP=DEPJOB   HJE77A0 140616 KJK:  Dep Job Control 1 - CHANGES  * 00870900
* $Z22LCKP=64BCKPT  HJE77A0 140821 TJW:  Use MVS IOB DSECT            * 00871100
* $Z22D093=DEPJOB   HJE77A0 141123 SJS:  HASP305                      * 00871300
*                                        MG20008                      * 00871500
*                                                                     * 00871700
* $Z23D161=DJC      HJE77B0 150513 ALP:  WITH= in a job group         * 00871900
*                                        MG20411                      * 00872100
* $Z23D177=BASEQ    HJE77B0 150723 ALP:  Circular WITH= dependency    * 00872300
*                                        MG20446                      * 00872500
* $Z23D172=DEPJOB   HJE77B0 150802 SJS:  FIX GROUP JOBID/GROUP NAME   * 00872700
*                                        MG20439                      * 00872900
* $Z23D187=DEPJOB   HJE77B0 151021 SJS:  ABEND0F7 RC1C8 UNDER JQRP PC * 00873100
*                                        MG20460                      * 00873300
* $Z23LEC2=JEC2     HJE77B0 160204 SJS:  JES2 OUTPUT CARD             * 00873500
* $Z23D198=EMNOTIFY HJE77B0 160512 ALP:  HOLDUNTL and TYPRUN=HOLD     * 00873700
*                                        S115701                      * 00873900
* $Z23LEC2=MISC     HJE77B0 160518 KJK:  SCHED BEFORE/AFTER/DELAY #1  * 00874100
* $Z23LSFD=TSMFDEF  HJE77B0 160523 TJW:  $TSMFDEF,BUFNUM support      * 00874300
* $Z23LEC2=BASEQ    HJE77B0 160615 SJS:  DJC next round               * 00874500
* $Z23LRES=BASEQ    HJE77B0 160627 SJS:  Review rework                * 00874700
* $Z23LEC2=NET      HJE77B0 161021 KJK:  //*NET SUPPORT - RUNTIME     * 00874900
* $S161934=NET      HJE77B0 170312 SJS:  COMMON CRITERIA PLUS         * 00875100
*                                        S161934                      * 00875300
* $Z24D057=NET      HJE77B0 170530 SJS:  Job Grps changes             * 00875500
*                                        S176935                      * 00875700
* $Z24D067=NET      HJE77B0 170611 SJS:  Delete wrong ZOD             * 00875900
*                                        S180181                      * 00876100
* $Z24D005=BASEQ    HJE77B0 170614 TJW:  $HASP101 issued too early    * 00876300
*                                        S121627                      * 00876500
* $Z24D068=NET      HJE77B0 170623 SJS:  Logging job race             * 00876700
*                                        S180924                      * 00876900
* $Z24D027=NET      HJE77B0 170703 SJS:  PRIV PCE                     * 00877100
*                                        S165980                      * 00877300
* $Z24LBLD=BASEQ    HJE77B0 170905 TJW:  Release setup part 2         * 00877500
*                                                                     * 00877700
* $Z24LDRD=DISKRDR  HJE77C0 180923 TJW:  Submit command function      * 00877900
* $Z24D156=DISKRDR  HJE77C0 190314 TJW:  Convert JCLLIB to SUBMITLIB  * 00878100
*                                        S306394                      * 00878300
* $Z24LPCY=JES2PLCY HJE77C0 190315 ALP:  Policy stage 5               * 00878500
*                                                                     * 00878550
* $S306943=JES2PLCY HJE77D0 190403 ALP:  Change PLCYLIB to POLICYLIB  * 00878600
*                                        S306943                      * 00878650
* $S307294=JES2PLCY HJE77D0 190508 ALP:  Policy stage 6               * 00878660
*                                        S307294                      * 00878670
* $S315873=JES2PLCY HJE77D0 190703 ALP:  Policy stage 7               * 00878680
*                                        S315873                      * 00878690
* $TWCLPCN=JES2PLCY HJE77D0 190731 TJW:  $P CNVT                      * 00878695
*                                                                     * 00878700
* A000000-999999    CREATED FOR JES2 1.3.3                         @133 00878900
*********************************************************************** 00879100
         TITLE 'HASP JCL CONVERSION MODULE -- PROLOG ($HASPGBL)'        00879300
         COPY  $HASPGBL            COPY HASP GLOBALS                    00879500
         TITLE 'HASP JCL CONVERSION MODULE -- PROLOG ($MODULE)'         00879700
HASPCNVT $MODULE ENVIRON=JES2,                                 @430P270C00879900
               IBMJES2=BASE,                                   @430P270C00880100
               RMODE=ANY,                                      @Z07LBLDC00885000
               TITLE='HASP JCL CONVERSION MODULE',                     C00890000
               ASEO,               Generate MVS ASEO DSECT     @Z21LCNVC00895000
               ASCB,               Generate MVS ASCB DSECT     @Z07LTCPC00900000
               CNPRM,              GENERATE MVS CONVERTER PARM DSECT   C00916000
               CVT,                GENERATE MVS CVT DSECT        @R01AXC00917000
               DEB,                GENERATE MVS DEB DSECT              C00930000
               ECB,                GENERATE MVS ECB DSECT        @R01AXC00940000
               HWTJ,               Generate JSON parser DSECTs @Z24LPCYC00941000
               IOB,                Generate MVS IOB DSECT      @Z22LCKPC00942000
               ITSPP,              Generate MVS ITSPP DSECT    @Z21LCNVC00945000
               JICA,               Generate MVS JICA DSECT     @Z21D169C00946000
               JMRE,               GENERATE MVS JMR DSECT      @Z21LCORC00950000
               NEL,                Generate MVS NEL DSECT      @Z21LCNVC00960000
               PPL,                GENERATE MVS PPL DSECT              C00970000
               PSA,                GENERATE MVS PSA DSECT      @430P306C00975000
               QMPA,               Generate MVS SDWA DSECT     @Z21LCNVC00976000
               SDWA,               Generate MVS QMPA DSECT     @Z21LCNVC00977000
               SSCT,               GENERATE MVS SSCT DSECT             C00980000
               WPL,                GENERATE MVS WPL DSECT              C01000000
               $BUFFER,            GENERATE HASP BUFFER DSECT          C01010000
               $BLDMSGL,           GENERATE HASP BLDMSGL DSECT   @Z10ANC01012000
               $CADDR,             GENERATE HASP CADDR DSECT           C01015000
               $CAT,               GENERATE HASP CAT DSECT             C01020000
               $CICB,              Generate HASP CICB DSECT    @Z21LCNVC01021000
               $CIPARM,            Generate HASP CIPARM DSECT  @Z21LCNVC01022000
               $CIWORK,            Generate HASP CIWORK DSECT  @Z21LCNVC01023000
               $CMB,               GENERATE HASP CMB DSECT     @Z13LISTC01025000
               $CNVWORK,           GENERATE HASP CNVWORK DSECT         C01030000
               $CPINDEX,           Generate HASP CPINDEX DSECT @Z07LTCPC01035000
               $CRTSYSN,           Create Sysin PDDB parms     @Z13LISTC01035300
               $CSPLOPN,           Generate $CSPLOPN data area @Z13LISTC01035600
               $DAS,               GENERATE HASP DAS DSECT     @Z12LMQTC01036000
               $DTE,               GENERATE HASP DTE DSECT             C01040000
               $DTECNV,            GENERATE HASP CONVERSION DTE DSECT  C01050000
               $ERA,               GENERATE HASP ERA DSECT             C01060000
               $HASB,              Generate HASP HASB DSECT    @Z07LTCPC01070000
               $HASPEQU,           GENERATE HASP EQUATES               C01090000
               $HASXB,             Generate HASP HASXB DSECT   @Z07LTCPC01092000
               $HCCT,              GENERATE HASP HCCT DSECT            C01095000
               $HCT,               GENERATE HASP HCT DSECT             C01100000
               $HFAME,             GENERATE HASP HFAME DSECT           C01105000
               $IOT,               GENERATE HASP IOT DSECT             C01110000
               $JCT,               GENERATE HASP JCT DSECT             C01130000
               $JCTX,              Generate HASP JCTX dsect    @Z02LLRJC01134000
               $JESLOG,            Generate HASP JESLOG dsect  @Z02LLRJC01140000
               $JQE,               GENERATE HASP JQE DSECT             C01150000
               $JRW,               GENERATE HASP JRW DSECT     @Z13LISTC01160000
               $MIT,               GENERATE HASP MIT DSECT             C01170000
               $MITETBL,           Generate HASP MTE dsect     @430P270C01172000
               $PADDR,             GENERATE HASP PADDR DSECT           C01192000
               $PARMLST,           GENERATE HASP EXITPL DSECT          C01195000
               $PAD,               Generate HASP PAD DSECT     @Z02P007C01196000
               $PCE,               GENERATE HASP PCE DSECT             C01200000
               $PCYINTR,           Generate HASP PCYIN DSECTs  @Z24LPCYC01202000
               $PCYWORK,           Generate HASP PCYWORK DSECT @Z24LPCYC01204000
               $PERFCB,            Generate HASP PERFCB DSECT  @S315873C01205000
               $POLICY,            Generate HASP PCY DSECTs    @Z24LPCYC01206000
               $PRE,               GENERATE HASP PRE DSECT     @420P123C01210000
               $PREBERT,           Generate HASP PREBERT DSECT @Z09LTRAC01211000
               $PSV,               GENERATE HASP PCE DSECT             C01225000
               $QGET,              GENERATE HASP QGET PARM LIST        C01230000
               $QSE,               GENERATE HASP QSE DSECT     @510LAFFC01235000
               $SAFINFO,           GENERATE HASP SAFINFO DSECT @Z13LISTC01236000
               $SBMT,              Generate HASP SBMT DSECT    @Z24LDRDC01238000
               $SCAT,              GENERATE HASP SCAT DSECT            C01240000
               $SJB,               Generate HASP SJB DSECT       @Z04DMC01250000
               $SMF,               GENERATE HASP SMF DSECT             C01270000
               $SQD,               Generate HASP SQD DSECT     @Z02P007C01272000
               $TAB,               GENERATE HASP TAB DSECT             C01275000
               $TQE,               GENERATE HASP TQE DSECT             C01280000
               $TRCA,              GENERATE HASP TRCA DSECT            C01300000
               $TRE,               Generate HASP TRE dsect     @Z02LLRJC01305000
               $TRX,               Generate HASP TRX DSECT     @Z07LTCPC01306000
               $XECB,              GENERATE HASP XECB DSECT            C01310000
               $XFATAB,            Generate HASP XFATAB DSECT  @Z24LPCYC01315000
               $XIT,               GENERATE HASP XIT DSECT             C01320000
               $XPL,               Generate HASP XPL DSECT     @Z23D161C01325000
               $ZJC                Generate HASP ZJC DSECT     @S315873 01325500
CNVTDATA LOCTR ,                   Define CNVT data area       @R10LADR 01326000
         DS    0D                  Ensure on a doubleword bdy  @R10LADR 01327000
HASPCNVT LOCTR ,                   Reset CNVT Location counter @R10LADR 01328000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- INITIAL ENTRY POINT'   01330000
*********************************************************************** 01340000
*                                                                     * 01350000
* PROCESSOR NAME -- HASPCNVT                                          * 01360000
*                                                                     * 01370000
* DESCRIPTIVE NAME -- JES2 JCL CONVERSION PROCESSOR                   * 01380000
*                                                                     * 01390000
* FUNCTION -- INTERFACE WITH OS/VS2 JCL CONVERTER TO PROVIDE JCL      * 01400000
*             CONVERSION FOR JOBS PRIOR TO THEIR SELECTION FOR        * 01410000
*             EXECUTION.                                              * 01420000
*                                                                     * 01430000
* NOTES -- 1)  BECAUSE A JES2 PROCESSOR IS NOT ALLOWED TO DIRECTLY    * 01440000
*              ISSUE AN OS WAIT, HASPCNVT ATTACHES A SUB-TASK TO      * 01450000
*              PERFORM THOSE FUNCTIONS REQUIRING WAITS.  THE SUB-TASK,* 01460000
*              HOSCNVT, PERFORMS OS OPENS AND CLOSES OF PROCLIB AND   * 01470000
*              CALLS THE OS/VS2 JCL CONVERTER TO CONVERT A JOB'S JCL  * 01480000
*              INTO INTERNAL TEXT.                                    * 01490000
*                                                                     * 01500000
*          2)  AN EXIT ROUTINE, CODED AS PART OF THE SUB-TASK IS      * 01510000
*              PROVIDED TO THE OS/VS2 JCL CONVERTER.  THIS EXIT       * 01520000
*              ROUTINE, BEGINNING AT XTXTEXIT -                       * 01530000
*                                                                     * 01540000
*              A)  PROVIDES DSNAMES FOR SUB-SYSTEM DATA SETS          * 01550000
*              B)  SUPPORTS THE USE OF 'SYSOUT=*' OR 'SYSOUT=$'       * 01560000
*              C)  PROVIDES, IF NECESSARY, A DEFAULT PERFORMANCE      * 01570000
*                  GROUP                                              * 01580000
*                                                                     * 01590000
*          3)  TO IMPROVE THE PERFORMANCE OF THIS PROCESSOR -         * 01600000
*                                                                     * 01610000
*              A)  JCT and IOT buffers are reused.  The buffers are   * 01620000
*                  freed only when the converter is forced to $WAIT   * 01630000
*                  for another job.                                   * 01640000
*              B)  IN THE SUB-TASK, HOSCNVT, AN ATTEMPT IS MADE TO    * 01670000
*                  KEEP PROCLIB OPENED BETWEEN JOBS.  ONLY WHEN A JOB * 01680000
*                  REQUIRES A PROCLIB OTHER THAN THE ONE CURRENTLY    * 01690000
*                  OPENED, OR WHEN THE PREVIOUS JOB ENCOUNTERED AN    * 01700000
*                  I/O ERROR DURING JCL CONVERSION, IS PROCLIB CLOSED.* 01710000
*                                                                     * 01720000
* REGISTER CONVENTIONS -- R0  -- WORK REGISTER                        * 01730000
*                         R1  -- WORK REGISTER                        * 01740000
*                         R2  -- IOT ADDRESS                          * 01750000
*                         R3  -- WORK REGISTER                        * 01760000
*                         R4  -- WORK REGISTER                        * 01770000
*                         R5  -- JQE ADDRESS                          * 01780000
*                         R6  -- WORK/LINK REGISTER                   * 01790000
*                         R7  -- WORK/LINK REGISTER                   * 01800000
*                         R8  -- HOSCNVT DTE address           @Z02P007 01810000
*                         R10 -- JCT ADDRESS                          * 01820000
*                                                                     * 01830000
*********************************************************************** 01840000
         EJECT                                                          01850000
*********************************************************************** 01860000
*                                                                     * 01870000
*        H A S P C N V T   I N I T I A L   E N T R Y   P O I N T      * 01880000
*                                                                     * 01890000
*********************************************************************** 01900000
         SPACE 2                                                        01910000
         USING JQA,R5              PROVIDE JQE ADDRESSABILITY  @Z21LCLS 01930000
         USING CNVTDATA,R12        Est CNVT data area adr'blty @R10LADR 01945000
         SPACE 2                                                        01950000
HA$PCNVT $ENTRY BASE=NONE          Est processor entry point   @R10LADR 01960000
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @Z09LCAN 01964000
         EJECT ,                                               @Z21LCNV 01964400
************************************************************** @Z21LCNV 01964800
*                                                            * @Z21LCNV 01965200
*        Get the parameter area used to pass data to the     * @Z21LCNV 01965600
*        converter subtask.  Common storage is used in case  * @Z21LCNV 01966000
*        the interpreter processing in a subtask will be     * @Z21LCNV 01966400
*        performed                                           * @Z21LCNV 01966800
*                                                            * @Z21LCNV 01967200
************************************************************** @Z21LCNV 01967600
         SPACE 1                                               @Z21LCNV 01968000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC01968400
               SYSSTATE=SET                                    @Z21LCNV 01968800
         SPACE 1                                               @Z21LCNV 01969200
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 01969600
         SPACE 1                                               @Z21LCNV 01970000
         L     R3,$HCCT            Get HCCT address            @Z21LCNV 01970400
         LAE   R3,CCTCIP-HCCT-(CIPCIPA-CIPARM)(R3,0)  0th CIP  @Z21LCNV 01970800
XJCCIPLP LT    R3,CIPCIPA          Get 1st/next CIPARM         @Z21LCNV 01971200
         JZ    XJCNWCIP              None, get new CIPARM      @Z21LCNV 01971600
         LAM   AR3,AR3,$PSOTOK     Set CIP/PSO ALET            @Z21LCNV 01972000
         CLC   CIPSEQ,PCESEQ       Found our CIPARM?           @Z21LCNV 01972400
         JNE   XJCCIPLP              No, loop through CIPs     @Z21LCNV 01972800
         J     XJCFNCIP            Process found CIP           @Z21LCNV 01973200
         SPACE 1                                               @Z21LCNV 01973600
XJCNWCIP $CPOOL ACTION=GET,TYPE=PAD,CELL=(R3)  Get new CIP     @Z21LCNV 01974000
         SPACE 1                                               @Z21LCNV 01974400
         MVC   CIPID,=CL8'CIPARM'  Set eyecatcher              @Z21LCNV 01974800
         MVI   CIPVER,CIPVERN      Set version                 @Z21LCNV 01975200
         MVC   CIPSEQ,PCESEQ       Set sequence number         @Z21LCNV 01975600
         L     R1,$HCCT            Get HCCT address            @Z21LCNV 01976000
         LAE   R1,0(R1)              and ensure AR1 is zero    @Z21LCNV 01976400
         MVC   CIPCIPA,CCTCIP-HCCT(R1)  Add new CIPARM         @Z21LCNV 01976800
         ST    R3,CCTCIP-HCCT(,R1)       to HCCT chain         @Z21LCNV 01977200
XJCFNCIP ST    R13,CIPPCE          Set PCE address             @Z21LCNV 01977600
         ST    R3,JPCECIP          Save CIPARM in PCE          @Z21LCNV 01978000
         LA    R0,JPCECECB         Point CIPARM to             @Z21LCNV 01978400
         ST    R0,CIPCECBA           completion ECB            @Z21LCNV 01978800
         EJECT ,                                               @Z21LCNV 01979600
*------------------------------------------------------------*   @R03AB 01980000
*                                                            *   @R03AB 01990000
*        Odd-numbered PCEs will be marked as NOT able to     *   @R03AB 02000000
*        wait for OS CNVT.  Flag JPCENCWT in the PCE work-   *   @R03AB 02010000
*        area will be set on for those PCEs.                 *   @R03AB 02020000
*                                                            *   @R03AB 02030000
*        A CNVT PCE may have to wait for OS CNVT because     *   @R03AB 02040000
*        certain resources are not available - for example,  *   @R03AB 02050000
*        a JCLLIB data set may be archived and OS CNVT has   *   @R03AB 02060000
*        to wait for the recall of the data set before       *   @R03AB 02070000
*        converting the job.  PCEs marked as not waitable    *   @R03AB 02080000
*        will requeue the job for a converter PCE that can   *   @R03AB 02090000
*        wait and will then go on to the next available job. *   @R03AB 02100000
*                                                            *   @R03AB 02110000
*        If for some reason all of the PCEs that happened    *   @R03AB 02120000
*        to be marked as not waitable were to abnormally     *   @R03AB 02130000
*        end, then the hang situation addressed by APAR      *   @R03AB 02140000
*        OW10919 could still occur.                          *   @R03AB 02150000
*                                                            *   @R03AB 02160000
*------------------------------------------------------------*   @R03AB 02170000
         SPACE 1                                                 @R03AB 02180000
         NI    JPCESTAT,FF-JPCENCWT  Clear no wait indicator     @R03AB 02190000
         TM    PCESEQ,X'01'        Even-numbered PCE?            @R03AB 02200000
         JNO   XCJIDON              Yes, this one can wait     @Z21LCNV 02210000
         OI    JPCESTAT,JPCENCWT    No, show PCE can't wait      @R03AB 02220000
         SPACE 1                                               @Z21LCNV 02232000
XCJIDON $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z21LCNV 02238000
         SPACE 1                                               @Z21LCNV 02244000
         DROP  R3                  Drop CIPARM                 @Z21LCNV 02250000
         EJECT ,                                               @Z21LCNV 02256000
************************************************************** @Z21LCNV 02262000
*                                                            * @Z21LCNV 02268000
*        Get a SQD for use creating and deleting JES2CI      * @Z21LCNV 02274000
*        subtasks                                            * @Z21LCNV 02280000
*                                                            * @Z21LCNV 02286000
************************************************************** @Z21LCNV 02292000
         SPACE 1                                               @Z21LCNV 02298000
         USING SQD,R1              Est SQD addressability      @Z21LCNV 02304000
         SPACE 1                                               @Z21LCNV 02310000
         LT    R1,JPCESQD          Is there a SQD?             @Z21LCNV 02316000
         JNZ   XCNHVSQD              Yes, don't get another    @Z21LCNV 02322000
         SPACE 1                                               @Z21LCNV 02328000
        $GETMAIN RU,LV=SQDLEN,     Get a SQD work area         @Z21LCNVC02334000
               LOC=(31,64),ZEROSTOR=YES                        @Z21LCNV 02340000
         SPACE 1                                               @Z21LCNV 02346000
         ST    R1,JPCESQD          Save addr in work area      @Z21LCNV 02352000
         MVC   SQDID,=CL4'SQD'      Set SQD id                 @Z21LCNV 02358000
         MVI   SQDLEVEL,SQDVERSN     and version               @Z21LCNV 02364000
         SPACE 1                                               @Z21LCNV 02370000
XCNHVSQD J     XCJGET              Start CNVT processing       @Z21LCNV 02376000
         SPACE 1                                               @Z21LCNV 02382000
         DROP  R1                  Drop SQD                    @Z21LCNV 02410000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- MAIN JOB WAIT'         02420000
**************************************************************   @Z04DM 02430000
*                                                            *   @Z04DM 02440000
*        Free JCT buffer and CAT if either exists            * @Z21LCNV 02450000
*                                                            *   @Z05DB 02468000
**************************************************************   @Z04DM 02470000
         SPACE 1                                                        02480000
XCPGRLSE LT    R1,JPCEJCTA         Do we have a JCT?           @Z21LCNV 02490000
         JZ    XCPNOJCT              No, skip the free         @Z21LCNV 02500000
         XC    JPCEJCTA,JPCEJCTA   Indicate JCT Freed          @410LVSC 02510000
         SPACE 1                                               @410LVSC 02515000
        $FREEBUF (R1)              Free up JCT                 @Z21LCNV 02520000
         SPACE 1                                               @410LVSC 02521000
XCPNOJCT LT    R1,JPCECAT          Get the CAT address         @Z21LCNV 02522000
         JZ    XCPNOCAT              None, skip free           @Z21LCNV 02524000
         XC    JPCECAT,JPCECAT     Indicate CAT freed          @Z21LCNV 02526000
         SPACE 1                                               @Z21LCNV 02528000
        $DOGCAT ACTION=RETURN,CAT=(R1)  Return the CAT         @Z21LCNV 02530000
         SPACE 1                                               @Z21LCNV 02532000
XCPNOCAT DS    0H                  CAT/JCT processing done     @Z21LCNV 02534000
         EJECT                                                     @136 02540000
*********************************************************************** 02550000
*                                                                     * 02560000
*        W A I T   F O R   A   J O B                                  * 02570000
*                                                                     * 02580000
*********************************************************************** 02590000
         SPACE 1                                                        02600000
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 02601000
         SPACE 1                                               @Z21LCNV 02602000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC02603000
               SYSSTATE=SET                                    @Z21LCNV 02604000
         SPACE 1                                               @Z21LCNV 02605000
         L     R3,JPCECIP          Get CIPARM address          @Z21LCNV 02606000
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z21LCNV 02607000
         XC    CIPINPCL,CIPINPCL   Clear input fields          @Z21LCNV 02608000
         XC    CIPINOCL,CIPINOCL   Clear input/output fields   @Z23LRES 02608500
         SPACE 1                                               @Z21LCNV 02609000
        $WAIT  CNVT,INHIBIT=NO     $WAIT FOR CNVT JOB TO BE QUEUED @136 02610000
         EJECT ,                                               @TWCLPCN 02610200
************************************************************** @TWCLPCN 02610400
*                                                            * @TWCLPCN 02610600
*        If conversion has been stopped ($PCNVT) then ensure * @TWCLPCN 02610800
*        subtasks detached (if any)                          * @TWCLPCN 02611000
*                                                            * @TWCLPCN 02611200
************************************************************** @TWCLPCN 02611400
         SPACE 1                                               @TWCLPCN 02611600
XCJGET   TM    $STATUS3,$STOPCNV   $PCNVT in effect            @TWCLPCN 02611800
         JNO   XCJSTART              No, start normal process  @TWCLPCN 02612000
         SPACE 1                                               @TWCLPCN 02612200
        $CALL  CNVDETCH            Go detach the converters    @TWCLPCN 02612400
         SPACE 1                                               @TWCLPCN 02612600
*------------------------------------------------------------* @TWCLPCN 02612800
*        Once all coverters are drained, issue the HASP2223  * @TWCLPCN 02613000
*        message (but only once).                            * @TWCLPCN 02613200
*------------------------------------------------------------* @TWCLPCN 02613400
         SPACE 1                                               @TWCLPCN 02613600
T        USING CIPARM,R1           Est CIPARM addressability   @TWCLPCN 02613800
         SPACE 1                                               @TWCLPCN 02614000
         TM    $STATUS3,$STCNMSG   HASP2223 message issued?    @TWCLPCN 02614200
         JO    XCPGRLSE              Yes, loop to $WAIT        @TWCLPCN 02614400
         SPACE 1                                               @TWCLPCN 02614600
         LLGT  R1,$HCCT            Get HCCT address            @TWCLPCN 02614800
         LAE   R1,CCTCIP-HCCT-(CIPCIPA-CIPARM)(R1,0)  0th CIP  @TWCLPCN 02615000
XJCPRMLP LT    R1,T.CIPCIPA        Get 1st/next CIPARM         @TWCLPCN 02615200
         JZ    XJCALLDR              None, all drained         @TWCLPCN 02615400
         LAM   AR1,AR1,$PSOTOK     Set CIP/PSO ALET            @TWCLPCN 02615600
         CLFHSI T.CIPCICB,0        JES2CI subtask active?      @TWCLPCN 02615800
         JNE   XCPGRLSE              Yes, not all drained      @TWCLPCN 02616000
         CLFHSI T.CIPDTEA,0        JES2 subtask active?        @TWCLPCN 02616200
         JNE   XCPGRLSE              Yes, not all drained      @TWCLPCN 02616400
         J     XJCPRMLP            Not active, loop            @TWCLPCN 02616600
         SPACE 1                                               @TWCLPCN 02616800
XJCALLDR $WTO  XDRANMSG,L'XDRANMSG,    Issue HASP2223 CNVT     @TWCLPCNC02617000
               JOB=NO,ROUTE=$LOG+$MAIN,  drained message       @TWCLPCNC02617200
               CLASS=$NORMAL,PRI=$ST                           @TWCLPCN 02617400
         SPACE 1                                               @TWCLPCN 02617600
         OI    $STATUS3,$STCNMSG   Ind HASP2223 issued         @TWCLPCN 02617800
         SPACE 1                                               @TWCLPCN 02618000
         J     XCPGRLSE            Loop to $WAIT               @TWCLPCN 02618200
         SPACE 1                                               @TWCLPCN 02618400
         DROP  T                   Drop temp CIPARM            @TWCLPCN 02618600
         EJECT ,                                               @TWCLPCN 02618800
************************************************************** @TWCLPCN 02619000
*                                                            * @TWCLPCN 02619200
*        Normal top of processing loop                       * @TWCLPCN 02619400
*                                                            * @TWCLPCN 02619600
************************************************************** @TWCLPCN 02619800
         SPACE 1                                               @TWCLPCN 02620000
XCJSTART NI    JPCESTAT,JPCENCWT   Clear PCE stat except NCWT  @TWCLPCN 02622000
         MVI   JPCEXRSP,0          Ensure no exit 44 residue     @Z24AN 02623000
         SPACE 1                                                 @R03AB 02625000
         XC    PCEJQE,PCEJQE       CLEAR PCE JQE ADDRESS       @420P190 02630000
         XC    PCEASID,PCEASID       and related ASID          @Z09LTRA 02630300
         EJECT ,                                               @Z21LCNV 02630600
*------------------------------------------------------------* @Z21LCNV 02630900
*        Check if current PROCLIB should be closed and POST  * @Z21LCNV 02631200
*        subtask if so.                                      * @Z21LCNV 02631500
*------------------------------------------------------------* @Z21LCNV 02631800
         SPACE 1                                               @Z21LCNV 02632100
         USING PAD,R2              Est PAD addressability      @Z21LCNV 02632400
         SPACE 1                                               @Z21LCNV 02632700
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC02633000
               SYSSTATE=SET                                    @Z21LCNV 02633300
         SPACE 1                                               @Z21LCNV 02633600
         L     R3,JPCECIP          Get CIPARM address          @Z21LCNV 02633900
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z21LCNV 02634200
         XC    CIPINPCL,CIPINPCL   Clear input fields          @Z21LCNV 02634500
         LT    R2,CIPOPAD          Get current PAD             @Z21LCNV 02634800
         JZ    XCJDOQGT              None, go do QGET          @Z21LCNV 02635100
         LAM   AR2,AR2,$PSOTOK     Set PAD/PSO ALET            @Z21LCNV 02635400
         TM    PADFLAG1,PAD1DEL    PAD deleted?                @Z21LCNV 02635700
         JNO   XCJDOQGT              No, go do QGET            @Z21LCNV 02636000
         OIL   CIPFLG1,CIP1CPRC,   Ind close PROCLIBs          @Z21LCNVC02636300
               REF=CIPARM,WREGS=(R14,R15,R1)                   @Z21LCNV 02636600
         EJECT ,                                               @Z21LCNV 02636900
         L     R1,PSAAOLD-PSA(,0)  Get ASCB                    @Z21LCNV 02637200
         LAE   R1,0(R1)            Ensure AR1 is zero          @Z21LCNV 02637500
         L     R4,CIPWECBA         Point to the work ECB       @Z21LCNV 02637800
         CLC   CIPASID,ASCBASID-ASCB(R1)  Same address space?  @Z21LCNV 02638100
         JNE   XCJXMPST                     No, use XMPOST     @Z21LCNV 02638400
        $ARMODE OFF                Back to primary mode        @Z21LCNV 02638700
         SPACE 1                                               @Z21LCNV 02640000
         POST  (4)                 Post subtask for work       @Z21LCNV 02640400
         J     XCJDOQGT            Go do QGET                  @Z21LCNV 02640800
         SPACE 1                                               @Z21LCNV 02641200
XCJXMPST MVC   JPCETTKN,CIPTTOKN   Copy TTOKEN to primary      @Z21LCNV 02641600
        $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z21LCNV 02642000
         SPACE 1                                               @Z21LCNV 02642400
         $XMPOST (R4),             XMPOST the waiting task     @Z21LCNVC02642800
               TTOKEN=JPCETTKN,    Owning TCB address          @Z21LCNVC02643200
               TERM_TCB=NOPOST,    Don't post terminating TCB  @Z21LCNVC02643600
               ERRET=XCJDOQGT      Ignore any error            @Z21LCNV 02644000
         SPACE 1                                               @Z21LCNV 02644400
         DROP  R2,R3               Drop PAD, CIPARM            @Z21LCNV 02645000
         EJECT ,                                               @Z21LCNV 02645100
*------------------------------------------------------------* @Z21LCOR 02645600
*        Use $QGET to select a job to convert. $QGET will    * @Z21LCOR 02646400
*        return an update mode JQA.                          * @Z21LCOR 02647200
*------------------------------------------------------------* @Z21LCOR 02647400
         SPACE 1                                               @Z21LCOR 02647600
XCJDOQGT $ARMODE OFF               Ensure in primary mode      @Z22D064 02647800
         EJECT ,                                               @Z24D027 02648000
*------------------------------------------------------------* @Z24D027 02648200
*        If a privilege PCE then check for SPOOl shortage.   * @Z24D027 02648400
*         -- If shortage then just reset timestamp in work   * @Z24D027 02648600
*            area. Continue onto QGET.                       * @Z24D027 02648800
*         -- If no shortage and timestamp is not set then -  * @Z24D027 02649000
*            set time, POST CNVT and wait.                   * @Z24D027 02649200
*         -- If no shortage and timestamp set - then         * @Z24D027 02649400
*            determine if 5 minutes have lapsed. If so --    * @Z24D027 02649600
*            PCETERM this PCE. Before doing so - free up any * @Z24D027 02649800
*            acquired resource and POST CNVT.                * @Z24D027 02650000
*------------------------------------------------------------* @Z24D027 02650200
         SPACE 1                                               @Z24D027 02650400
         TM    PCEFLGCS,PCEPRIVI   If not a privileged PCE     @Z24D027 02650600
         JNO   XCPQWAIT             then go QGET               @Z24D027 02650800
         SPACE 1                                               @Z24D027 02651000
         L     R1,$HCCT            Get the HCCT address        @Z24D027 02651200
         TM    CCTRESIL-HCCT(R1),CCTRESPL If a SPOOL (TG)      @Z24D027 02651400
         JO    XCPSPSHO             shortage then handle       @Z24D027 02651600
         SPACE 1                                               @Z24D027 02651800
*------------------------------------------------------------* @Z24D027 02652000
*        No SPOOL shortage - determine if PCETERM is in      * @Z24D027 02652200
*        order.                                              * @Z24D027 02652400
*------------------------------------------------------------* @Z24D027 02652600
         SPACE 1                                               @Z24D027 02652800
         LTG   R14,JPCPRTIM        If timestamp not set then   @Z24D027 02653000
         JZ    XCPSETTI             go set and wait            @Z24D027 02653200
         L     R0,JPCPRTIM         Obtain HI half of           @Z24D027C02653400
                                    timestamp                  @Z24D027 02653600
         AHI   R0,JPCPWAIT         Add 5 minutes to it         @Z24D027 02653800
         STCKF $DOUBLE             Fetch current time          @Z24D027 02654000
         CL    R0,$DOUBLE          If 5 minutes not passed -   @Z24D027 02654200
         JNL   XCPGRLSE             Go wait on chance -        @Z24D027C02654400
                                    there may be another       @Z24D027C02654600
                                    shortage.                  @Z24D027 02654800
         SPACE 1                                               @Z24D027 02655000
        $CALL  RTNCNVRS            Shutdown subtask and free   @Z24D027C02655200
                                    up storage related to PCE  @Z24D027 02655400
        $POST $HASPECF,CNVT        Post CNVT on this system    @Z24D027 02655600
        $PCETERM ,                 Get rid of this PCE -       @Z24D027C02655800
                                    control is not returned    @Z24D027 02656000
         SPACE 1                                               @Z24D027 02656200
XCPSETTI STCKF JPCPRTIM            Set timestamp               @Z24D027 02656400
         J     XCPGRLSE            Go $WAIT                    @Z24D027 02656600
         SPACE 1                                               @Z24D027 02656800
*------------------------------------------------------------* @Z24D027 02657000
*        SPOOL shortage                                      * @Z24D027 02657200
*------------------------------------------------------------* @Z24D027 02657400
         SPACE 1                                               @Z24D027 02657600
XCPSPSHO DS    0H                                              @Z24D027 02657800
         XC    JPCPRTIM,JPCPRTIM   Zero timestamp and proceed  @Z24D027C02658000
                                    to QGET                    @Z24D027 02658200
XCPQWAIT MVC   JPCELST,XCQPRM      Move in QGET parameter list @Z24D027 02658400
         SPACE 1                                               @Z21LCNV 02658600
        $QGET  NONE=XCPGRLSE,MF=(EX,JPCELST) TRY TO GET A JOB      @136 02658800
         SPACE 1                                                   @311 02659000
         L     R5,QGTJQE-QGT(,R1)  SAVE JQA ADDRESS            @Z21LCOR 02660000
         ST    R5,PCEJQE           SAVE JQA ADDRESS IN PCE     @Z21LCOR 02670000
         MVC   PCEASID,JQASID      Set related ASID in case    @Z09LTRAC02671000
                                     this is a STC/TSU         @Z09LTRA 02672000
         SPACE 1                                               @S315873 02672500
         LR    R15,R13             Get address of the PCE      @S315873 02673000
         SH    R15,$PPBSIZE          performance block         @S315873 02673500
         L     R15,PPBPTPB-PPB(,R15)  Get PTPB address         @S315873 02674000
         ALSI  PTPBJOBC-PTPB(R15),1 Update PCE type job count  @S315873 02674500
         SPACE 1                                                   @311 02675000
        $ACTIVE                    INDICATE PROCESSOR ACTIVE            02680000
         SPACE 1                                               @Z21LCNV 02690000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC02700000
               SYSSTATE=SET                                    @Z21LCNV 02710000
         SPACE 1                                               @Z21LCNV 02740000
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 02830000
         SPACE 1                                               @Z21LCNV 02830200
         LLGT  R3,JPCECIP          Get CIPARM address          @S307294 02830500
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z21LCNV 02831000
         SPACE 1                                               @Z21LCNV 02831100
         MVC   JPCECLAS,JQXJCLAS   Save original job class     @Z21LCNV 02831400
         MVC   JPCEPRIO,JQEPRIO    Save original priority        @420DJ 02832000
         MVC   CIPJBKEY,JQEJBKEY   Save job key                @Z21LCNV 02832200
         SPACE 1                                                 @420DJ 02833000
         NI    JQEFLAG6,FF-JQE6PRAG-JQE6PRT   Reset PRIO flags   @420DJ 02836000
         NI    JPCESTAT,FF-JPCEHJOB  Reset hold job flag       @Z24D005 02836500
         EJECT ,                                                 @Z22DZ 02837000
        $DOGJQE ACTION=CKPT,CBADDR=JQE  Rewrite the JQE        @R04LWLM 02838000
         ST    R1,JPCJQEA          Save real JQE address       @Z24D005 02838100
         EJECT ,                                               @Z21LCNV 02838200
************************************************************** @Z21LCNV 02838400
*                                                            * @Z21LCNV 02838600
*        Locate the CAT for the job class associated with    * @Z21LCNV 02838800
*        the job.                                            * @Z21LCNV 02839000
*                                                            * @Z21LCNV 02839200
*        As of release 2.1 classes may be deleted. This fact * @Z21LCNV 02839400
*        opens a small timing window where the class may     * @Z21LCNV 02839600
*        not be found.  If encountered - actions taken are:  * @Z21LCNV 02839800
*                                                            * @Z21LCNV 02840100
*         -- Set bit in $DTECNV informing converter subtask  * @Z21LCNV 02840400
*            so proper messages may be cut.                  * @Z21LCNV 02840700
*                                                            * @Z21LCNV 02841000
*         -- $DOGCAT default job class - subtask needs a     * @Z22D003 02841300
*            CAT.                                            * @Z21LCNV 02841600
*                                                            * @Z21LCNV 02841900
************************************************************** @Z21LCNV 02842200
         SPACE 1                                               @Z21LCNV 02842500
         MVC   $DWORK,JQXJCLAS     Prime class from the JQA.   @Z21LCNV 02842800
         MVC   CIPJCLAS,JQXJCLAS   Pass JOBCLASS to CNVS       @Z21LCNV 02843100
         SPACE 1                                               @Z21LCNV 02843400
XCCFIND $DOGCAT ACTION=(FETCH,READ),  Get a read only          @Z21LCNVC02843700
               GETCOPY=YES,             copy of the            @Z21LCNVC02844000
               JOBCLASS=$DWORK,         associated             @Z21LCNVC02844300
               OKRET=XCCATGOT           CAT.                   @Z21LCNV 02844600
         SPACE 1                                               @Z21LCNV 02844900
         OI    CIPOFLAG,CIPNOCLS   Inform subtask to cut msg   @Z22D003 02845200
         LAE   R1,0                Ensure AR1 is zero          @Z22D003 02845500
         LLGT  R1,$HCCT            Get HCCT address            @Z22D003 02845800
         MVC   CIPJCLAS,CCTDEFCL-HCCT(R1)  Pass default class  @Z22D003 02846100
         MVC   $DWORK,CIPJCLAS     Copy to primary for $DOGCAT @Z22D003 02846400
         J     XCCFIND             Find again                  @Z21LCNV 02846700
         SPACE 1                                               @Z21LCNV 02847000
XCCATGOT ST    R1,JPCECAT          Save CAT addr in PCE        @Z21LCNV 02847300
         EJECT ,                                               @Z23LEC2 02847600
************************************************************** @Z23LEC2 02847900
*        If this is a DJC job (not logging) - then denote so * @Z23LEC2 02848200
*        in $CIPARM and record Job Group name. This will     * @Z23LEC2 02848500
*        be used in CNVS to perform security checks.         * @Z23LEC2 02848800
************************************************************** @Z23LEC2 02849100
         SPACE 1                                               @Z23LEC2 02849400
         TM    JQXFLAG3,JQX3JBGR   Continue if this is a       @Z23LEC2 02849700
         JO    XCCCNVT              logging job                @Z23LEC2 02850000
         SPACE 1                                               @Z23LEC2 02850300
         TM    JQEFLAGA,JQEANET    If not part of a DJC then   @Z23LEC2 02850600
         JNO   XCCCNVT              just continue              @Z23LEC2 02850900
         SPACE 1                                               @Z23LEC2 02851200
         CLC   JQXZNAME,$ZEROES    If no logging job then      @Z24LPCY 02851500
         JE    XCCCNVT              just continue              @Z24LPCY 02851800
         SPACE 1                                               @Z23LEC2 02852100
         MVC   CIPJOBGR,JQXZNAME   Set logging job name        @Z24LPCY 02852400
         OI    CIPOFLAG,CIPDJC     Denote logging job name     @Z23LEC2C02852700
                                    is input to subtask        @Z23LEC2 02853000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- READ THE JCT' @Z21LCNV 02853300
************************************************************** @Z21LCNV 02853600
*                                                            * @Z21LCNV 02853900
*        The main task needs the JCT to locate the proper    * @Z21LCNV 02854200
*        PROCLIB to use.  It will be read here and then      * @Z21LCNV 02854500
*        passed to the subtask in the CIPARM work area       * @Z21LCNV 02854800
*                                                            * @Z21LCNV 02855100
************************************************************** @Z21LCNV 02855400
         SPACE 1                                               @Z21LCNV 02855700
XCCCNVT $MQTRCNV MTTR=JQETRAK      Convert JQETRAK to MQTR.    @Z23LEC2C02856000
                                     MQTR is returned in R0.   @Z23LEC2 02856300
         SPACE 1                                               @Z21LCNV 02856600
         STCMH R0,B'0011',JPCEJCTK    Save the the JCT track   @Z21LCNV 02856900
         STCM  R0,B'1111',JPCEJCTK+2    address (MQTR).        @Z21LCNV 02857200
         EJECT ,                                               @Z21LCNV 02857500
        $CBIO  TYPE=READ,MQTR=JPCEJCTK,VERIFY=JCT,             @Z12LMQTC02857800
               BUFAD=JPCEJCTA,KEY=JQEJBKEY,ERRET=XREADJCT      @Z21LCNV 02860000
         LLGTR R10,R1              Copy JCT address            @Z24LPCY 02870000
         ST    R10,JPCEJCTA        Save JCT address            @410LVSC 02880000
         SPACE 1                                               @Z21LCNV 02888000
         USING JCT,R10             Est JCT addressability      @Z21LCNV 02896000
         SPACE 1                                                 @Z22EZ 02896200
*------------------------------------------------------------*   @Z22EZ 02896800
*        If JCTSCHEN not already set, initialize to the same *   @Z22EZ 02897400
*        initial value as JQASCHEN (blanks)                  *   @Z22EZ 02898000
*------------------------------------------------------------*   @Z22EZ 02898600
         SPACE 1                                                 @Z22EZ 02899200
         TM    JCTSCHEN,FF-C' '    Br if JCT SCHENV field        @Z22EZ 02899800
         JNZ   XCCSCHEN              is initialized              @Z22EZ 02900400
         MVI   JCTSCHEN,C' '       Initialize field to           @Z22EZ 02901000
         MVC   JCTSCHEN+1(L'JCTSCHEN-1),JCTSCHEN  blanks         @Z22EZ 02901600
XCCSCHEN DS    0H                  Finished SCHENV init          @Z22EZ 02902200
         TITLE 'HASP JCL Conversion Processor -- Sub-Task Attach'       02904000
************************************************************** @Z21LCNV 02912000
*                                                            * @Z21LCNV 02920000
*        Determine if we should call the interpreter and     * @Z21LCNV 02928000
*        ensure the proper subtasks are attached.            * @Z21LCNV 02936000
*                                                            * @Z21LCNV 02944000
************************************************************** @Z21LCNV 02952000
         SPACE 1                                               @Z21LCNV 02960000
         NI    CIPOFLAG,FF-CIPOINTR  Assume just convert       @Z21LCNV 02968000
         TM    $RJOBOPT,$OPTINTR   Back to back C/I            @Z21LCNV 02976000
         JNO   XCNCILOC              No, skip interperter      @Z21LCNV 02984000
         SPACE 1                                               @Z21LCNV 03015000
         OI    CIPOFLAG,CIPOINTR   Do both C and I             @Z21LCNV 03024000
         SPACE 1                                               @Z21LCNV 03033000
         CLI   $CIPERAS,0          Do C/I in JES2 addr space?  @Z21LCNV 03042000
         JE    XCNCILOC              Yes, ensure subtask is OK @Z21LCNV 03051000
         EJECT ,                                               @Z21LCNV 03060000
************************************************************** @Z21LCNV 03069000
*                                                            * @Z21LCNV 03078000
*        Since we are running in the JES2 C/I address space, * @Z21LCNV 03087000
*        ensure that there isn't a converter subtask in the  * @Z21LCNV 03096000
*        JES2 address space for this converter.              * @Z21LCNV 03105000
*                                                            * @Z21LCNV 03114000
************************************************************** @Z21LCNV 03123000
         SPACE 1                                               @Z21LCNV 03132000
         USING DTE,R8              Est DTE addressability      @Z21LCNV 03141000
         SPACE 1                                               @Z21LCNV 03150000
         LT    R8,JPCEDTE          Pick up HOSCNVT DTE address @Z21LCNV 03159000
         JZ    XGCISTRT              None, ensure JESCI there  @Z21LCNV 03168000
         LAE   R8,0(R8)            Ensure AR8 is zero          @Z21LCNV 03177000
         SPACE 1                                               @Z21LCNV 03186000
         TM    DTETXECB,ECBPOST    Subtask already dead?       @Z21LCNV 03195000
         JO    XCGCIDET              Yes, just $DTEDYN DETACH  @Z21LCNV 03204000
        $ARMODE OFF,SYSSTATE=SET   Ensure primary mode for SVC @Z21LCNV 03213000
         OI    DTEFLAG1,DTE1TERM   Set to terminate subtask    @Z21LCNV 03222000
         SPACE 1                                               @Z21LCNV 03231000
         POST  DTEWECB             Post HOSCNVT to shutdown    @Z21LCNV 03240000
         EJECT ,                                               @Z21LCNV 03249000
*------------------------------------------------------------* @Z21LCNV 03258000
*        Wait for subtask termination or a 10 second timer   * @Z21D144 03267000
*------------------------------------------------------------* @Z21LCNV 03276000
         SPACE 1                                               @Z21LCNV 03285000
         LAE   R1,JPCETQE          Get address of PCE TQE      @Z21LCNV 03294000
         LHI   R0,10               Set time interval           @Z21LCNV 03303000
         ST    R0,TQETIME(,R1)      in TQE                     @Z21LCNV 03312000
         ST    R13,TQEPCE(,R1)     Store PCE address in TQE    @Z21LCNV 03321000
         SPACE 1                                               @Z21LCNV 03330000
        $STIMER (R1)               Chain this TQE              @Z21LCNV 03339000
         SPACE 1                                               @Z21LCNV 03348000
        $WAIT  WORK,XECB=DTETXECB  Wait for time or POST       @Z21LCNV 03357000
         SPACE 1                                               @Z21LCNV 03366000
         LAE   R1,JPCETQE          Get address of PCE TQE      @Z21LCNV 03375000
        $TTIMER (R1),CANCEL        Ensure timer stopped        @Z21LCNV 03384000
         SPACE 1                                               @Z21LCNV 03393000
         TM    DTETXECB,ECBPOST    Subtask already dead?       @Z21LCNV 03402000
         JO    XCGCIDET              Yes, just $DTEDYN DETACH  @Z21LCNV 03411000
         SPACE 1                                               @Z21LCNV 03420000
         DETACH DTETCB,STAE=YES    Force subtask shutdown      @Z21LCNV 03429000
         EJECT ,                                               @Z21LCNV 03438000
*------------------------------------------------------------* @Z21LCNV 03447000
*        Task is no longer running, clean up DTE etc.        * @Z21LCNV 03456000
*------------------------------------------------------------* @Z21LCNV 03465000
         SPACE 1                                               @Z21LCNV 03474000
XCGCIDET $ARMODE ON,SYSSTATE=SET   Back to AR mode             @Z21LCNV 03483000
         SPACE 1                                               @Z21LCNV 03492000
         $XECBSRV XECB=DTETXECB,FUNCTION=CLEAR  Dechain XECB   @Z21LCNV 03501000
         XC    JPCEDTE,JPCEDTE     Clear DTE ptr               @Z21LCNV 03510000
         XC    CIPDTEA,CIPDTEA       in PCE and DTEPARM        @Z21LCNV 03512000
         XC    CIPASID,CIPASID     Clear ASID and                @Z22BR 03514000
         XC    CIPTTOKN,CIPTTOKN     token address               @Z22BR 03516000
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=NO             @Z21LCNVC03519000
                                   Detach ABENDed sub-task     @Z21LCNV 03528000
         SPACE 1                                               @Z21LCNV 03537000
         DROP  R8                  Drop DTE                    @Z21LCNV 03546000
         EJECT ,                                               @Z21LCNV 03555000
************************************************************** @Z21LCNV 03564000
*                                                            * @Z21LCNV 03573000
*        Need to run converter and interprester in a         * @Z21LCNV 03582000
*        separate address space, ensure it is set up.        * @Z21LCNV 03591000
*                                                            * @Z21LCNV 03600000
************************************************************** @Z21LCNV 03609000
         SPACE 1                                               @Z21LCNV 03618000
         USING CICB,R4             Est CICB addressability     @Z22D064 03620000
         USING ASEO,CCBODA         Est ASEO addressability     @Z22D064 03622000
         SPACE 1                                               @Z22D064 03624000
XGCISTRT LT    R4,CIPCICB          Subtask in a JES2CI AS?     @Z22D064 03627000
         JZ    XCNGCIAS              No, go build one          @Z22D064 03636000
         CLC   CIPTTOKN,$ZEROS     Is there really a subtask?    @Z22BR 03639000
         JE    XCNGCIAS              No, go build one            @Z22BR 03642000
         TM    CIPFLG1,CIP1SHTD+CIP1TERM  Subtask dead?        @Z22D064 03643000
         JNZ   XCRGSDEL              Yes, clean up corpse      @Z22D064 03644000
         LLC   R1,CIPSEQ           Get subtask sequence number @Z22D064 03645000
         LLC   R14,$CIPERAS        Get subtasks per addr space @Z22D064 03646000
         LHI   R0,0                Prepare for divide          @Z22D064 03647000
         DR    R0,R14              Calc addr space/subt seq #s @Z22D064 03648000
         CLM   R1,B'0001',CCBSEQ   Correct address space seq?  @Z22D064 03649000
         JNE   XCRGSDEL              No, delete old subtask    @Z22D064 03654000
         CLM   R1,B'0001',CIPASSEQ Correct address space seq?  @Z22D064 03655000
         JNE   XCRGSDEL              No, delete old subtask    @Z22D064 03656000
         CLM   R0,B'0001',CIPSTSEQ Correct subtask sequence #? @Z22D064 03657000
         JE    XCRGPROC              Yes, go use it            @Z22D064 03658000
         SPACE 1                                               @Z21LCNV 03663000
         DROP  R4                  Drop CICB                   @Z22D064 03664000
         USING SQD,R4              Est SQD addressability      @Z21LCNV 03672000
         SPACE 1                                               @Z22D064 03673000
XCRGSDEL L     R4,JPCESQD          Get SQD address             @Z22D064 03674000
         LAE   R4,0(R4)              and ensure AR4 is zero    @Z22D064 03675000
        $SUBIT DELJ2CI,PARM0=0,    Shut down JES2CI subtask    @Z22D064C03676000
               PARM1=CIPARM,                                   @Z22D064C03681000
               SQDADDR=SQD                                     @Z22D064 03684000
         EJECT ,                                               @Z22D064 03687000
XCNGCIAS L     R4,JPCESQD          Get SQD address             @Z21LCNV 03690000
         LAE   R4,0(R4)              and ensure AR4 is zero    @Z21LCNV 03699000
        $SUBIT GETJ2CI,            Set up JES2CI subtask       @Z21LCNVC03708000
               PARM1=CIPARM,                                   @Z21LCNVC03717000
               SQDADDR=SQD                                     @Z22D064 03726000
         SPACE 1                                               @Z21LCNV 03735000
         AL    R15,SQDRRTN         Combine return codes        @Z21LCNV 03744000
         LTR   R15,R15             Did it fail?                @Z21LCNV 03753000
         JZ    XCRGPROC              No, go do CI              @Z21LCNV 03762000
         EJECT ,                                               @Z21LCNV 03789000
************************************************************** @Z21LCNV 03798000
*                                                            * @Z21LCNV 03807000
*        Need to run converter in the JES2 address space.    * @Z21LCNV 03816000
*        First ensure that there isn't a subtask in a C/I    * @Z21LCNV 03825000
*        address space.                                      * @Z21LCNV 03834000
*                                                            * @Z21LCNV 03843000
************************************************************** @Z21LCNV 03852000
         SPACE 1                                               @Z21LCNV 03861000
XCNCILOC CLC   CIPCICB,$ZEROS      Subtask in a JES2CI AS?     @Z21LCNV 03870000
         JE    XCNOINTR              No, we are set            @Z21LCNV 03879000
         SPACE 1                                               @Z21LCNV 03888000
         L     R4,JPCESQD          Get SQD address             @Z21LCNV 03897000
         LAE   R4,0(R4)              and ensure AR4 is zero    @Z22D064 03906000
        $SUBIT DELJ2CI,PARM0=0,    Shut down JES2CI subtask    @Z21LCNVC03915000
               PARM1=CIPARM,                                   @Z21LCNVC03924000
               SQDADDR=SQD                                     @Z22D064 03933000
         SPACE 1                                               @Z22D064 03940000
         DROP  R4                  Drop SQD                    @Z22D064 03950000
         EJECT ,                                               @Z21LCNV 03978000
************************************************************** @Z21LCNV 03987000
*                                                            * @Z21LCNV 03996000
*        Verify that there is a subtask in our address space * @Z21LCNV 04005000
*        to perform the conversion.                          * @Z21LCNV 04014000
*                                                            * @Z21LCNV 04023000
************************************************************** @Z21LCNV 04070000
         SPACE 1                                               @Z21LCNV 04075000
         USING DTE,R8              Est DTE addressability      @Z02P007 04076000
         SPACE 1                                               @Z02P007 04077000
XCNOINTR LT    R8,JPCEDTE          Pick up HOSCNVT DTE address @Z21LCNV 04080000
         JZ    XCATTACH            BRANCH IF NEVER ATTACHED        @136 04090000
         LAE   R8,0(R8)            Ensure AR8 is zero          @Z21LCNV 04095000
         TM    DTEFLAG1,DTE1ACTV   Subtask active?             @Z02P007 04100000
         JNO   XCDETACH              No, detach and start new    @Z11AY 04110000
         SPACE 1                                                 @Z11AY 04110400
         TM    DTETXECB,ECBPOST    Subtask is dead?              @Z11AY 04110800
         JNO   XCRGPROC              No, go get PROCLIB        @Z21LCNV 04111200
         SPACE 1                                                 @Z11AY 04111600
*------------------------------------------------------------*   @Z11AY 04112000
*        Subtask died with active flag on - it means         *   @Z11AY 04112400
*        that cleanup has not run.                           *   @Z11AY 04112800
*        Do some cleanup and restart the task.               *   @Z11AY 04113200
*------------------------------------------------------------*   @Z11AY 04113600
         SPACE 1                                                 @Z11AY 04114000
        $XECBSRV XECB=DTETXECB,FUNCTION=CLEAR  Dechain XECB    @Z21LCNV 04116400
         XC    JPCEDTE,JPCEDTE     Clear DTE ptr                 @Z11AY 04116800
         XC    CIPDTEA,CIPDTEA       in PCE and DTEPARM        @Z21LCNV 04117000
         XC    CIPASID,CIPASID     Clear ASID and                @Z22BR 04117200
         XC    CIPTTOKN,CIPTTOKN     token address               @Z22BR 04117400
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=NO               @Z11AYC04117600
                                   Detach ABENDed sub-task       @Z11AY 04117800
         SLR   R8,R8               Clear DTE base reg            @Z11AY 04118000
         J     XCATTACH            Arrange for a new task        @Z11AY 04118400
         EJECT ,                                                 @Z22BR 04120000
*********************************************************************** 04130000
*                                                                     * 04140000
*        D E T A C H   H O S C N V T   ( A B E N D E D )              * 04150000
*                                                                     * 04160000
*********************************************************************** 04170000
         SPACE 1                                                   @136 04180000
XCDETACH $XECBSRV XECB=DTETXECB,FUNCTION=CLEAR  Dechain XECB   @Z21LCNV 04205000
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=XECB           @Z02P007C04210000
                                   Detach ABENDed sub-task     @Z02P007 04220000
         SPACE 1                                                   @311 04225000
         XC    JPCEDTE,JPCEDTE     CLEAR DTE ADDR. OF CONVERTER    @136 04230000
         XC    CIPDTEA,CIPDTEA       in PCE and DTEPARM        @Z21LCNV 04240000
         XC    CIPASID,CIPASID     Clear ASID and                @Z22BR 04242000
         XC    CIPTTOKN,CIPTTOKN     token address               @Z22BR 04245000
         EJECT ,                                                 @Z22BR 04250000
*********************************************************************** 04260000
*                                                                     * 04270000
*        ( R E ) - A T T A C H   H O S C N V T                        * 04280000
*                                                                     * 04290000
*********************************************************************** 04300000
         SPACE 1                                                        04310000
XCATTACH LLGT  R3,JPCECIP          Get CIPARM area             @S307294 04320000
        $DTEDYN ATTACH,ID=DTEIDCNV,  Attach HOSCNVT            @Z21LCNVC04330000
               WAIT=XECB,PARM=(R3)                             @Z21LCNV 04340000
         LTR   R15,R15             Did the attach work?        @Z21LCNV 04341000
         JZ    XCATTOK               Yes, continue             @Z04LHIO 04342000
         SPACE 1                                               @Z04LHIO 04343000
         LAE   R1,JPCETQE          Get address of PCE TQE      @Z21LCNV 04344000
         LHI   R0,30               Set time interval           @Z21LCNV 04345000
         ST    R0,TQETIME(,R1)      in TQE                     @Z04LHIO 04346000
         ST    R13,TQEPCE(,R1)     Store PCE address in TQE    @Z04LHIO 04347000
         SPACE 1                                               @Z04LHIO 04348000
        $STIMER (R1)               Chain this TQE              @Z04LHIO 04349000
         SPACE 1                                               @Z04LHIO 04350000
        $WAIT  WORK                Wait for interval to elapse @Z04LHIO 04351000
         J     XCATTACH            Try attach again            @Z04LHIO 04352000
         EJECT ,                                                 @Z22DZ 04355000
XCATTOK  ST    R1,JPCEDTE          STORE SUBTASK DTE ADDRESS   @Z04LHIO 04360000
         ST    R1,CIPDTEA            in PCE and DTEPARM        @Z21LCNV 04362000
         LAE   R8,0(R1)            Set DTE address             @Z21LCNV 04365000
         MVC   XECBECB-XECB+DTEIXECB,$ZEROS Clear              @Z02P007C04370000
                                             communication ECB @Z02P007 04380000
        $XECBSRV XECB=DTETXECB,FUNCTION=SETUP  Convert ECB       @Z11AY 04392000
         SPACE 1                                               @Z21LCNV 04393000
         DROP  R8                  Drop DTE                    @Z21LCNV 04394000
         TITLE 'HASP JCL Conversion Processor -- Select PROCLIB to Use C04395000
               for Job'                                        @Z21LCNV 05310600
************************************************************** @Z02P007 05311000
*                                                            * @Z02P007 05311400
*        Determine the DDNAME of the procedure library for   * @Z02P007 05311800
*        this job.  Scan the chain of PADs for a matching    * @Z02P007 05312200
*        DDNAME and pass it to the subtask if found.         * @Z02P007 05312600
*                                                            * @Z02P007 05313000
************************************************************** @Z02P007 05313400
         SPACE 1                                               @Z02P007 05313800
         USING CAT,R1              Est CAT addressability      @Z21LCNV 05314200
         SPACE 1                                               @Z21LCNV 05314600
XCRGPROC L     R1,JPCECAT          Get CAT addr from PCE       @Z21LCNV 05315000
         LAE   R1,0(R1)            Ensure AR1 is zero          @Z21LCNV 05315400
         SPACE 1                                               @Z21LCNV 05315800
         TM    JCTPROCN,FF-C' '    PROCLIB set from /*JOBPARM  @Z02P007 05316200
         JNZ   XCNVPROT              Yes, used it              @Z13LJBR 05316600
         MVC   JCTPROCN,=CL8'PROC'   No, build DDNAME          @Z02P007 05317000
         MVC   JCTPROCN+4(2),CATPROCN  from the CAT            @Z02P007 05317400
XCNVPROT DS    0H                  End building DDNAME         @Z02P007 05317800
         SPACE 1                                               @Z02P007 05318200
         DROP  R1                  Drop the CAT                @Z21LCLS 05318600
         SPACE 1                                               @Z02P007 05319600
************************************************************** @Z02P007 05319800
*                                                            * @Z02P007 05320000
*        Process PAD requirements for this job.  There are   * @Z02P007 05320200
*        up to 2 PADs passed to the subtask.  One for the    * @Z02P007 05320400
*        PROCLIB associated with the job, and one associated * @Z02P007 05320600
*        with the PROC00 PROCLIB DD.  The PROC00 DD is used  * @Z02P007 05320800
*        if there is a problem with the DD the job           * @Z02P007 05321000
*        requested.                                          * @Z02P007 05321200
*                                                            * @Z02P007 05321400
************************************************************** @Z02P007 05321600
         SPACE 1                                               @Z02P007 05321800
         USING PAD,R4              Est PAD addressability      @Z02P007 05322000
         SPACE 1                                               @Z02P007 05322200
*------------------------------------------------------------* @Z02P007 05322400
*        If the current PROC00 DD was deleted, clear the     * @Z02P007 05322600
*        pointer in DTE to it.                               * @Z02P007 05322800
*------------------------------------------------------------* @Z02P007 05323000
         SPACE 1                                               @Z02P007 05323200
         LT    R4,CIPPAD0          Get current PROC00          @Z21LCNV 05323400
         JZ    XCNVSTPL              None, go start PAD scan   @Z02P007 05323600
         LAM   AR4,AR4,$PSOTOK     Get PAD/PSO ALET            @Z21LCNV 05323700
         TM    PADFLAG1,PAD1DEL    PAD deleted?                @Z02P007 05323800
         JNO   XCNVSTPL              No, go start PAD scan     @Z02P007 05324000
         XC    CIPPAD0,CIPPAD0     Clear PROC00 pointer        @Z21LCNV 05324200
         SPACE 1                                               @Z02P007 05324400
         L     R15,PADUSE          Decrement                   @Z02P007 05324600
XCNVPDC0 LR    R14,R15               PROC00                    @Z02P007 05324800
         AHI   R14,-1                  PAD use                 @Z21LCNV 05325000
         CS    R15,R14,PADUSE            count                 @Z02P007 05325200
         JNE   XCNVPDC0            Problem, try again          @Z02P007 05325400
         EJECT ,                                               @Z02P007 05325600
*------------------------------------------------------------* @Z02P007 05325800
*        Loop through the PADs to find both the PAD          * @Z02P007 05326000
*        requested by the DD and PAD for PROC00.             * @Z02P007 05326200
*------------------------------------------------------------* @Z02P007 05326400
         SPACE 1                                               @Z02P007 05326600
XCNVSTPL XC    CIPJPAD,CIPJPAD     Assume no PAD needed        @Z21LCNV 05326800
         L     R4,$HCCT            Get HCCT address            @Z21LCNV 05327000
         LAE   R4,CCTPAD-HCCT-(PADPAD-PAD)(R4,0)  Get 0th PAD  @Z21LCNV 05327100
XCNVPADL LT    R4,PADPAD           Get next PAD                @Z21LCNV 05327200
         JZ    XCNVNPAD              None, no PAD for job      @Z02P007 05327400
         LAM   AR4,AR4,$PSOTOK     Get PAD/PSO ALET            @Z21LCNV 05327500
         TM    PADFLAG1,PAD1DEL    PAD deleted?                @Z02P007 05327600
         JO    XCNVPADL              Yes, loop for more        @Z02P007 05327800
         CLC   JCTPROCN,PADNAME    Found a matching PAD?       @Z02P007 05328000
         JNE   XCNVPD00              No, check for PROC00      @Z02P007 05328200
         ST    R4,CIPJPAD            Yes, save PAD address     @Z21LCNV 05328400
         CL    R4,CIPOPAD          Same as current open PAD?   @Z21LCNV 05328600
         JE    XCNVPISK              Yes, skip PAD increment   @Z02P007 05328800
         SPACE 1                                               @Z02P007 05329000
         L     R15,PADUSE          Increment                   @Z02P007 05329200
XCNVPADR LR    R14,R15               PAD                       @Z21LCNV 05329400
         AHI   R14,1                  use                      @Z21LCNV 05329500
         CS    R15,R14,PADUSE          count                   @Z02P007 05329600
         JNE   XCNVPADR            Problem, try again          @Z02P007 05329800
         SPACE 1                                               @Z02P007 05330000
XCNVPISK CLC   PADNAME,=CL8'PROC00' Using PROC00?              @Z02P007 05330200
         JNE   XCNVPADL              No, go search for it      @Z02P007 05330400
         LT    R4,CIPPAD0           Get current PROC00         @Z21LCNV 05330600
         JZ    XCNVNPAD              None, then we're done     @Z02P007 05330800
         XC    CIPPAD0,CIPPAD0     Clear PROC00 pointer        @Z21LCNV 05331000
         SPACE 1                                               @Z02P007 05331200
         L     R15,PADUSE          Decrement                   @Z02P007 05331400
XCNVPDR0 LR    R14,R15               PAD                       @Z02P007 05331600
         AHI   R14,-1                  use                     @Z21LCNV 05331800
         CS    R15,R14,PADUSE            count                 @Z02P007 05332000
         JNE   XCNVPDR0            Problem, try again          @Z02P007 05332200
         J     XCNVNPAD            Done processing PADs        @Z02P007 05332400
         EJECT ,                                               @Z02P007 05332600
*------------------------------------------------------------* @Z02P007 05332800
*        Pass the PROC00 PAD (if any) in case it is needed   * @Z02P007 05333000
*        to process a failed PROCLIB open.                   * @Z02P007 05333200
*------------------------------------------------------------* @Z02P007 05333400
         SPACE 1                                               @Z02P007 05333600
XCNVPD00 CLC   PADNAME,=CL8'PROC00' Found PROC00 PAD?          @Z02P007 05333800
         JNE   XCNVPADL              No, loop for more         @Z02P007 05334000
         CL    R4,CIPPAD0          Already current PROC00?     @Z21LCNV 05334200
         JE    XCNVPADL              Yes, keep looping         @Z02P007 05334400
         SPACE 1                                               @Z02P007 05334600
         LT    R1,CIPPAD0          Get current PROC00          @Z21LCNV 05334800
         JZ    XCNVNWP0              None, process new PROC00  @Z02P007 05335000
         LAM   AR1,AR1,$PSOTOK     Get PAD/PSO ALET            @Z22D064 05335100
         XC    CIPPAD0,CIPPAD0     Clear PROC00 pointer        @Z21LCNV 05335200
         SPACE 1                                               @Z02P007 05335400
         L     R15,PADUSE-PAD(,R1) Decrement                   @Z02P007 05335600
XCNVPD0R LR    R14,R15               PAD                       @Z02P007 05335800
         AHI   R14,-1                  use                     @Z21LCNV 05336000
         CS    R15,R14,PADUSE-PAD(R1)    count                 @Z02P007 05336200
         JNE   XCNVPD0R            Problem, try again          @Z02P007 05336400
         SPACE 1                                               @Z02P007 05336600
XCNVNWP0 ST    R4,CIPPAD0          Save new PROC00 PAD address @Z21LCNV 05336800
         SPACE 1                                               @Z02P007 05337000
         L     R15,PADUSE          Increment                   @Z02P007 05337200
XCNVPDIR LR    R14,R15               PAD                       @Z21LCNV 05337300
         AHI   R14,1                  use                      @Z21LCNV 05337400
         CS    R15,R14,PADUSE          count                   @Z02P007 05337600
         JNE   XCNVPDIR            Problem, try again          @Z02P007 05337800
         J     XCNVPADL            Loop through all PADs       @Z02P007 05338000
         SPACE 1                                               @Z02P007 05338200
XCNVNPAD DS    0H                  Pad scan complete           @Z02P007 05338400
         SPACE 1                                               @Z02P007 05338600
         DROP  R4                  Drop PAD                    @Z02P007 05338800
         EJECT ,                                               @Z21LCNV 05340000
************************************************************** @Z21LCNV 05350000
*                                                            * @Z21LCNV 05360000
*        Set remaining parameters for the converter          * @Z21LCNV 05370000
*                                                            * @Z21LCNV 05380000
************************************************************** @Z21LCNV 05390000
         SPACE 1                                               @Z21LCNV 05400000
         LA    R0,JPCECECB         Point CIPARM to             @Z21LCNV 05410000
         ST    R0,CIPCECBA           completion ECB            @Z21LCNV 05420000
         SPACE 1                                               @Z21LCNV 05430000
         LAE   R14,CIPJCTST        Pass                        @Z21LCNV 05440000
         LLH   R15,$BUFSIZE         the                        @Z21LCNV 05450000
         LAE   R0,JCTSTART           JCT                       @Z21LCNV 05460000
         LR    R1,R15                 to the                   @Z21LCNV 05470000
         MVCL  R14,R0                  subtask                 @Z21LCNV 05480000
         SPACE 1                                               @Z21LCNV 05490000
         XC    CIPOUTCL,CIPOUTCL   Clear returned data area    @Z21LCNV 05500000
         SPACE 1                                               @Z21LCNV 05510000
         MVC   CIPSCHE,JQASCHE     Save JQA SCHENV             @Z23LRES 05511000
         NI    CIPOFLAG,FF-CIPONWAT-CIPOWEE  Assume no wait      @Z22DJC05512000
                                   for excl ENQ and not a        @Z22DJC05514000
                                     WAIT-type PCE/subtask       @Z22DJ 05516000
         TM    JPCESTAT,JPCENCWT   Br if not a WAIT-type         @Z22DJ 05520000
         JNO   XCNONCWT              PCE/subtask                 @Z22DJ 05523000
         OI    CIPOFLAG,CIPONWAT   Show WAIT is allowed          @Z22DJ 05526000
XCNONCWT TM    $FLAG1,$CNVTWEE     Wait for exclusive ENQs?      @Z22DJ 05530000
         JNO   XCNOWEE               No, ENQ flag is set       @Z21LCNV 05540000
         OI    CIPOFLAG,CIPOWEE    Ind wait for exclusive ENQ  @Z21LCNV 05570000
         SPACE 1                                               @Z22LCKP 05600000
XCNOWEE  NI    CIPOFLAG,FF-CIPOPTRC  Assume no PCE trace       @Z22LCKP 05630000
         TM    PCEFLAGS,PCETRACE   Is PCE trace active?        @Z22LCKP 05660000
         JNO   XCNNOTR                No, assumed wisely       @Z22LCKP 05690000
         OI    CIPOFLAG,CIPOPTRC      Yes, set PCE trace       @Z22LCKP 05720000
XCNNOTR  MVC   CIPJASID,PCEASID    Set ASID for DTE            @Z22LCKP 05750000
         TM    JQXFLAG3,JQX3JBGR   If not a Job Group          @Z23LEC2 05760000
         JNO   XCNOLOG              logging job - continue     @Z23LEC2 05770000
         OI    CIPOFLAG,CIPOINTR   Do both C and I             @Z23LEC2 05780000
         EJECT ,                                               @Z21LCNV 05801000
************************************************************** @Z21LCNV 05802000
*                                                            * @Z21LCNV 05803000
*        Now that CIPARM area is all set, place the JQE      * @Z21LCNV 05804000
*        offset into it so the subtask can start running.    * @Z21LCNV 05805000
*                                                            * @Z21LCNV 05806000
*        If this is set too early, the subtask could         * @Z21LCNV 05807000
*        discover the the job and start processing it before * @Z21LCNV 05808000
*        the CIPARM fields area set.                         * @Z21LCNV 05809000
*                                                            * @Z21LCNV 05810000
************************************************************** @Z21LCNV 05811000
         SPACE 1                                               @Z21LCNV 05812000
XCNOLOG  MVHI  XECBECB-XECB+JPCECECB,0   Clear ECB for $WAIT   @Z23LEC2 05813000
         NIL   CIPFLG1,FF-CIP1COMP-CIP1CRTM-CIP1CRDP,          @Z22LDEPC05815000
               REF=CIPARM,           Reset request complete    @Z22LDEPC05815500
               WREGS=(R14,R15,R1,R14)  and dump flags          @Z22LDEP 05816000
         EJECT ,                                               @Z21LCNV 05817000
        $DOGJQE ACTION=GETJQEADDR,CBADDR=JQA  Get real JQE     @Z21LCNV 05818000
         SL    R1,$JOBQPTR         Get JQE offset              @Z21LCNV 05819000
         ST    R1,CIPJQEOF           and save in CIPARM        @Z21LCNV 05820000
         EJECT ,                                                 @Z05DK 05835000
*********************************************************************** 05840000
*                                                                     * 05850000
*        P O S T   H O S C N V T                                      * 05860000
*                                                                     * 05870000
*********************************************************************** 05880000
         SPACE 1                                                        05890000
         L     R1,PSAAOLD-PSA(,0)  Get ASCB                    @Z21LCNV 05902000
         LAE   R1,0(R1)            Ensure AR1 is zero          @Z21LCNV 05904000
         L     R4,CIPWECBA         Point to the work ECB       @Z21LCNV 05906000
         CLC   CIPASID,ASCBASID-ASCB(R1)  Same address space?  @Z21LCNV 05908000
         JNE   XCNXMPST                    No, use XMPOST      @Z21LCNV 05910000
         SPACE 1                                               @Z21LCNV 05912000
         USING DTE,R8              Est DTE addressability      @Z21LCNV 05914000
         SPACE 1                                               @Z21LCNV 05916000
         LLGT  R8,JPCEDTE          Pick up HOSCNVT DTE address @Z21LCNV 05918000
         SPACE 1                                               @Z21LCNV 05922000
        $ARMODE OFF                Back to primary for POST    @Z21LCNV 05924000
         SPACE 1                                               @Z21LCNV 05926000
         POST  (4)                 POST HOSCNVT FOR WORK       @Z21LCNV 05928000
         SPACE 1                                               @Z21LCNV 05930000
        $ARMODE ON                 Return to AR mode           @Z21LCNV 05932000
         LHI   R4,0                Set POST worked             @Z22D034 05933000
         J     XCPSTDN             POST is done                @Z21LCNV 05934000
         SPACE 1                                               @Z21LCNV 05936000
         DROP  R8                  Drop DTE                    @Z21LCNV 05940000
         EJECT ,                                               @Z21LCNV 05941000
*------------------------------------------------------------* @Z22D064 05941100
*        Posting a converter in a JES2CI address space.      * @Z22D064 05941200
*        It is possible that the target address space has    * @Z22D064 05941300
*        gone away and the token has been cleared.  Before   * @Z22D064 05941400
*        issuing the POST, check if the token is still set.  * @Z22D064 05941500
*------------------------------------------------------------* @Z22D064 05941600
         SPACE 1                                               @Z22D064 05941700
XCNXMPST MVC   JPCETTKN,CIPTTOKN   Copy TTOKEN to primary      @Z22D064 05941800
         CLC   JPCETTKN(8),$ZEROS  Is the address space gone?  @Z22D064 05941900
         JNE   XCNXMPGO              No, go post address space @Z22D064 05942000
         SPACE 1                                               @Z22D064 05942100
         USING SQD,R2              Est SQD addressability      @Z22D064 05942200
         SPACE 1                                               @Z22D064 05942300
         L     R2,JPCESQD          Get SQD address             @Z22D064 05942400
         LAE   R2,0(R2)              and ensure AR4 is zero    @Z22D064 05942500
        $SUBIT GETJ2CI,            Restart JES2CI subtask      @Z22D064C05942600
               PARM1=CIPARM,                                   @Z22D064C05942700
               SQDADDR=SQD                                     @Z22D064 05942800
         SPACE 1                                               @Z22D064 05942900
         AL    R15,SQDRRTN         Combine return codes        @Z22D064 05943000
         LTR   R15,R15             Did it work?                @Z22D064 05943100
         JZ    XCNXMPST              Yes, recopy token         @Z22D064 05943200
         LR    R4,R15                No, save return code      @Z22D064 05943300
         J     XCPSTDN             Go fail conversion          @Z22D064 05943400
         SPACE 1                                               @Z22D064 05943500
         DROP  R2                  Drop SQD                    @Z22D064 05943700
         EJECT ,                                               @Z22D064 05943900
XCNXMPGO $XMPOST (R4),             XMPOST the waiting task     @Z22D064C05944100
               TTOKEN=JPCETTKN,    Owning TCB address          @Z21LCNVC05944300
               TERM_TCB=NOPOST     Don't post terminating TCB  @Z22D064 05944500
         LR    R4,R15              Save return code            @Z22D034 05944700
         SPACE 1                                               @Z21LCNV 05944900
XCPSTDN $DOGJQE ACTION=RETURN,     Return JQA during           @Z21LCNVC05945100
               CBADDR=PCEJQE         subtask processing        @Z21LCNV 05945300
         LR    R5,R1               Get new JQA address         @Z21LCNV 05945500
         ST    R5,PCEJQE           Save in PCE                 @R04LWLM 05945700
         LTR   R4,R4               Did POST work?              @Z22D034 05945900
         JNZ   XCTCBTRM              No, process error         @Z22D034 05946100
         SPACE 1                                               @Z21LCNV 05946300
         DROP  R5                  Drop JQA                    @Z21LCNV 05946500
         USING (JQE,JQESUMSK),R5   Est base JQE addressability @Z21LCNV 05946700
         SPACE 1                                                 @430DV 05946900
XCWAIT  $WAIT  CCAN,XECB=JPCECECB  $WAIT for subtask           @Z21LCNVC05947100
                                      or oper cancel           @Z21LCNV 05947300
         EJECT ,                                                 @R01AX 05947500
*------------------------------------------------------------*   @R01AX 05947700
*                                                            *   @R01AX 05947900
*        If this Converter PCE has been POST'ed due to an    *   @R01AX 05948100
*        operator cancel of the job (HASPCOMM) or the job is *   @R01AX 05948300
*        going through EOM (HASPXEQ), force the subtask      *   @R01AX 05948500
*        HOSCNVT to terminate via a CALLRTM.                 *   @R01AX 05948700
*                                                            *   @R01AX 05948900
*------------------------------------------------------------*   @R01AX 05949100
         SPACE 1                                                 @R01AX 05949300
         TM    CIPFLG1,CIP1TERM    Subtask terminated?         @Z22D064 05949500
         JO    XCSUBTRM              Yes, assume POSTed        @Z22D064 05949700
         TM    XECBECB-XECB+JPCECECB,ECBPOST                   @Z21LCNVC05949900
                                   Did the subtask post us?    @Z21LCNV 05950100
         JNO   XCCHKCAN              No, check for CANCEL      @Z21LCNV 05950300
XCSUBTRM TM    CIPFLG1,CIP1COMP    Did subtask complete work?  @Z22D064 05950500
         JO    XCCHCKIO              Yes, process completion   @Z21LCNV 05950700
         J     XCTCBTRM              No, must be EOT POST      @Z21LCNV 05950900
         EJECT ,                                                 @Z11AY 05951100
XCCHKCAN TM    JQEFLAG1,JQE1OCAN   Did operator cancel?          @Z11AY 05951300
         JO    XCSETDTE             Yes, get ready for CALLRTM   @R01AX 05951500
         TM    JQEFLAG5,JQE5EOM    Job going through EOM?        @R01AX 05951700
         JNO   XCWAIT               No, continue to wait         @R01AX 05951900
         SPACE 1                                                 @R01AX 05952100
XCSETDTE TM    CIPFLG1,CIP1CRTM    CALLRTM's been done?        @Z21LCNV 05952300
         JO    XCWAIT                Yes, wait for post        @Z02P007 05952500
         OIL   CIPFLG1,CIP1CRTM,   CALLRTM on subtask          @Z21LCNVC05952700
               REF=CIPARM,WREGS=(R14,R15,R1)                   @Z21LCNV 05952900
         SPACE 1                                                 @R01AX 05953100
         TM    JQEFLAG8,JQE8OPCD   Was dump requested?           @R01AX 05953300
         JNO   XCISSUER             No, skip setting dump      @Z21LCNV 05953500
         OIL   CIPFLG1,CIP1CRDP,   Indicate dump request       @Z21LCNVC05953700
               REF=CIPARM,WREGS=(R14,R15,R1)                   @Z21LCNV 05953900
         SPACE 1                                                 @R01AX 05954100
XCISSUER $CALL XCCALRTM            Go issue CALLRTM              @R01AX 05954300
         SPACE 1                                                 @R01AX 05954500
         J     XCWAIT              Wait for subtask cleanup      @R01AX 05954700
         EJECT ,                                                 @430DV 05954900
************************************************************** @Z21LCNV 05955100
*                                                            * @Z21LCNV 05955300
*        Job has completed conversion processing, record     * @Z21LCNV 05955500
*        performance data and update local copies of the     * @Z21LCNV 05955700
*        JQE and JCT.                                        * @Z21LCNV 05955900
*                                                            * @Z21LCNV 05956100
************************************************************** @Z21LCNV 05956300
         SPACE 1                                               @Z21LCNV 05956500
XCCHCKIO MVC   JPCEPSTA,CIPPRFST   Copy performance stats      @Z21LCNV 05956700
         SPACE 1                                               @Z21LCNV 05956900
         LARL  R0,=CL8'CONVINTR'   Assume C/I called           @Z21LCNV 05957100
         TM    CIPSTAT,CIPSINTR    Was the interpreter called? @Z21LCNV 05957300
         JO    XPRFCIOK              Yes, routine name is OK   @Z21LCNV 05957500
         LARL  R0,=CL8'CONVERT'    Indicate only converter     @Z21LCNV 05957700
         SPACE 1                                               @Z21LCNV 05957900
XPRFCIOK $CALL SUBSPERF,           Go update                   @Z21LCNVC05958100
               PARM0=(R0),           the performance           @Z21LCNVC05958300
               PARM1=JPCEPSTA          statistics              @Z21LCNV 05958500
         SPACE 1                                               @Z21LCNV 05958700
        $QSUSE ,                   Ensure queues are owned     @Z21LCNV 05958900
         EJECT ,                                                 @Z22DZ 05959100
        $DOGJQE ACTION=(FETCH,UPDATE), Reobtain JQA in         @Z21LCNVC05959300
               JQE=JQE                    write mode           @Z21LCNV 05959500
         LLGTR R5,R0               Get new JQA address         @Z24LPCY 05959700
         ST    R5,PCEJQE           Save in PCE                 @Z21LCNV 05959900
         LAE   R5,0(R5)            Ensure AR5 is zero          @Z21LCNV 05960100
         SPACE 1                                               @Z21LCNV 05960300
         DROP  R5                  Drop base JQE               @Z21LCNV 05960500
         USING JQA,R5              Est JQA addressability      @Z21LCNV 05960700
         SPACE 1                                               @Z21LCNV 05960900
         LAE   R14,CIPJCTST        Update                      @Z21LCNV 05961100
         LLH   R15,$BUFSIZE         the                        @Z21LCNV 05961300
         LAE   R0,JCTSTART           JCT                       @Z21LCNV 05961500
         LR    R1,R15                 from the                 @Z21LCNV 05961700
         MVCL  R0,R14                  subtask                 @Z21LCNV 05961900
         EJECT ,                                                 @Z24DI 05962100
*------------------------------------------------------------*   @Z24DI 05962300
*        Clear PROC00 PAD address and use count.             *   @Z24DI 05962500
*------------------------------------------------------------*   @Z24DI 05962700
         SPACE 1                                                 @Z24DI 05962900
         USING PAD,R4              Est PAD addressability        @Z24DI 05963100
         SPACE 1                                                 @Z24DI 05963300
         LT    R4,CIPPAD0          Get current PROC00            @Z24DI 05963500
         JZ    XCP0CSKP              None, skip count update     @Z24DI 05963700
         LAM   AR4,AR4,$PSOTOK     Get PAD/PSO ALET              @Z24DI 05963900
         XC    CIPPAD0,CIPPAD0     Clear PROC00 pointer          @Z24DI 05964100
         SPACE 1                                                 @Z24DI 05964300
         L     R15,PADUSE          Decrement                     @Z24DI 05964500
XCP0CLOP LR    R14,R15               PROC00                      @Z24DI 05964700
         AHI   R14,-1                  PAD use                   @Z24DI 05964900
         CS    R15,R14,PADUSE            count                   @Z24DI 05965100
         JNE   XCP0CLOP            Problem, try again            @Z24DI 05965300
         SPACE 1                                                 @Z24DI 05965500
XCP0CSKP DS    0H                  Count is set                  @Z24DI 05965700
         SPACE 1                                                 @Z24DI 05965900
         DROP  R4                  Drop PAD                      @Z24DI 05966100
         EJECT ,                                               @Z21LCNV 05966300
**************************************************************   @430DV 05966500
*                                                            *   @430DV 05966700
*        IF THE CONVERTER RECEIVED AN I/O ERROR ON THE       *   @430DV 05966900
*        PROCEDURE LIBRARY, TELL THE CONVERTER SUBTASKS      *   @430DV 05967100
*        TO CLOSE AND REOPEN THE LIBRARY.  THE I/O ERROR     *   @430DV 05967300
*        IS USUALLY DUE TO A PROCEDURE BEING CHANGED AND     *   @430DV 05967500
*        SAVED IN A NEW EXTENT.  REOPENING THE LIBRARY       *   @430DV 05967700
*        BUILDS A NEW DEB WHICH CONTAINS THE NEW EXTENT.     *   @430DV 05967900
*                                                            *   @430DV 05968100
*        NOTE:  THE CONVERTER RETURNS A CODE OF JCTCIO       *   @430DV 05968300
*        OR HIGHER FOR THIS ERROR.                           *   @430DV 05968500
*                                                            *   @430DV 05968700
**************************************************************   @430DV 05968900
         SPACE 1                                                 @430DV 05969100
         CLC   JCTCNVRC,=A(JCTCIO)  I/O error?                 @Z21D103 05969300
         JL    XCIOERRX              NO, SKIP CALL TO XCREOPEN   @430DV 05969500
         SPACE 1                                                 @430DV 05969700
        $CALL  XCREOPEN            TELL CONVERTER SUBTASKS TO    @430DVC05969900
                                     REOPEN PROCLIB              @430DV 05970100
         SPACE 1                                                 @430DV 05970300
XCIOERRX DS    0H                  END I/O ERROR CHECK           @430DV 05970500
         SPACE 1                                               @R04LWLM 05970700
************************************************************** @R04LWLM 05970900
*        Return the CAT for the jobclass associated with     * @R04LWLM 05971100
*        the job                                             * @R04LWLM 05971300
************************************************************** @R04LWLM 05971500
         SPACE 1                                               @R04LWLM 05971700
         USING CAT,R2              Est CAT addressability      @Z21LCNV 05971900
         SPACE 1                                               @Z13LJBR 05972100
         L     R2,JPCECAT          Locate the CAT              @Z21LCNV 05972300
         LAE   R2,0(R2)            Ensure AR2 is zero          @Z21LCNV 05972500
         XC    JPCECAT,JPCECAT     Clear CAT                   @Z02P007 05972700
         MVC   JPCESCHE,CATSCHED   Copy of default SCHENV      @Z13LJBR 05972900
         MVC   JPCEJLOG,CATJLOG    JESLOG flags and value      @Z13LJBR 05973100
         TM    CATFLAG3,CAT3LSRC   JOBRC default to LASTRC?    @Z13LJBR 05973300
         JNO   XCSNLSRC              No, use MAXRC as default  @Z13LJBR 05973500
         OI    JCTFLAG6,JCT6LSRC     Yes, set LASTRC default   @Z13LJBR 05973700
         SPACE 1                                                 @R10BH 05973900
XCSNLSRC $DOGCAT ACTION=RETURN,CAT=CAT  Free the CAT           @Z21LCLS 05974100
         SPACE 1                                               @Z02P007 05974300
         DROP  R2                  Drop CAT                    @Z21LCNV 05974500
         TITLE 'HASP JCL CONVERSION PROCESSOR -- Merge conversion resulC05974700
               ts'                                             @Z24LPCY 05974900
************************************************************** @Z24LPCY 05975100
*                                                            * @Z24LPCY 05975300
*        Merge results of the conversion into the job        * @Z24LPCY 05975500
*        (Subtask cannot update JQE directly.)               * @Z24LPCY 05975700
*                                                            * @Z24LPCY 05975900
************************************************************** @Z24LPCY 05976100
         SPACE 1                                               @Z24LPCY 05976300
         TM    CIPJFLAG,CIPJFIN    Job has datasets with       @Z24LPCYC05976500
                                    symbol substitution?       @Z24LPCY 05976700
         JNO   XCNOINS              No, skip                   @Z24LPCY 05976900
         OI    JQXFLAG3,JQX3INST   Update JQA                  @Z24LPCY 05977100
         SPACE 1                                               @Z24LPCY 05977300
         GBLC  &SYSOSREL_ZOSV2R1   V2R1 BCP level              @Z24LPCY 05977500
         SPACE 1                                               @Z24LPCY 05977700
         CLC   JQAMINLV,=XL4'&SYSOSREL_ZOSV2R1'                @Z24LPCYC05977900
                                   Level is V2R1 or later?     @Z24LPCY 05978100
         JNL   XCSETALT             Yes, keep it               @Z24LPCY 05978300
         MVC   JQAMINLV,=XL4'&SYSOSREL_ZOSV2R1'  Set V2R1      @Z24LPCY 05978500
         SPACE 1                                               @Z24LPCY 05978700
XCSETALT TM    CIPJFLAG,CIPJFSY    Subtask captured alternate  @Z24LPCYC05978900
                                    system symbol table?       @Z24LPCY 05979100
         JNO   XCNOINS              No, skip                   @Z24LPCY 05979300
         OI    JQXFLAG2,JQX2SYMT+JQX2ASYM  Update JQA          @Z24LPCY 05979500
XCNOINS  DS    0H                  End of instream symbols     @Z24LPCY 05979700
         SPACE 1                                               @Z24LPCY 05979900
************************************************************** @Z24LPCY 05980100
*                                                            * @Z24LPCY 05980300
*        Process STARTBY/HOLDUNTL                            * @Z24LPCY 05980500
*                                                            * @Z24LPCY 05980700
************************************************************** @Z24LPCY 05980900
         SPACE 1                                               @Z24LPCY 05981100
         TM    CIPJFLAG,CIPJFSTB+CIPJFUNT  STARTBY/HOLDUNT?    @Z24LPCY 05981300
         JZ    XCNOSTHU                     None, skip         @Z24LPCY 05981500
         SPACE 1                                               @Z24LPCY 05981700
         TM    CIPJFLAG,CIPJFSTB   STARTBY?                    @Z24LPCY 05981900
         JNO   XCDLSUNT             No, skip                   @Z24LPCY 05982100
         OI    JQEFLAG2,JQE2STBY   Set the flag                @Z24LPCY 05982300
         MVC   JQASTBY,CIPSTBY     Copy timestamp              @Z24LPCY 05982500
         SPACE 1                                               @Z24LPCY 05982700
         TM    CIPJFLAG,CIPJFSTU   STARTBY in UTC?             @Z24LPCY 05982900
         JNO   XCDLSUNT             No, skip                   @Z24LPCY 05983100
         OI    JQAFLAG3,JQA3STBU   Set the UTC flag            @Z24LPCY 05983300
         SPACE 1                                               @Z24LPCY 05983500
XCDLSUNT TM    CIPJFLAG,CIPJFUNT   HOLDUNTL?                   @Z24LPCY 05983700
         JNO   XCNOSTHU             No, skip                   @Z24LPCY 05983900
         OI    JQEFLAG2,JQE2UNTL   Set the flag                @Z24LPCY 05984100
         MVC   JQAUNTL,CIPUNTL     Copy timestamp              @Z24LPCY 05984300
         SPACE 1                                               @Z24LPCY 05984500
         TM    CIPJFLAG,CIPJFUNU   HOLDUNTL in UTC?            @Z24LPCY 05984700
         JNO   XCDLUNTG             No, skip                   @Z24LPCY 05984900
         OI    JQAFLAG3,JQA3UNTU   Set the UTC flag            @Z24LPCY 05985100
         SPACE 1                                               @Z24LPCY 05985300
XCDLUNTG TM    CIPJFLG2,CIPJ2HGR   HOLDUNTL time in seconds?   @Z24LPCY 05985500
         JNO   XCNOSTHU             No, skip                   @Z24LPCY 05985700
         OI    JQAFLAG3,JQA3UNTG   Indicate HOLDUNTL time has  @Z24LPCYC05985900
                                    seconds granularity.       @Z24LPCY 05986100
XCNOSTHU DS    0H                  End of STARTBY/HOLDUNTL     @Z24LPCY 05986300
         SPACE 1                                               @Z24LPCY 05986500
************************************************************** @Z24LPCY 05986700
*                                                            * @Z24LPCY 05986900
*        Process WITH=                                       * @Z24LPCY 05987100
*                                                            * @Z24LPCY 05987300
************************************************************** @Z24LPCY 05987500
         SPACE 1                                               @Z24LPCY 05987700
         TM    CIPJFLAG,CIPJFWTH   WITH=?                      @Z24LPCY 05987900
         JNO   XCNOWITH             None, skip                 @Z24LPCY 05988100
         MVC   JQAWITH,CIPWITH     Copy WITH= value            @Z24LPCY 05988300
XCNOWITH DS    0H                  End of WITH=                @Z24LPCY 05988500
         EJECT ,                                               @Z24LPCY 05988700
************************************************************** @Z24LPCY 05988900
*                                                            * @Z24LPCY 05989100
*        Process BEFORE/AFTER/DELAY                          * @Z24LPCY 05989300
*                                                            * @Z24LPCY 05989500
*        - BEFORE= : JOB JOB_A SCHEDULE BEFORE=JOB_B         * @Z24LPCY 05989700
*                                                            * @Z24LPCY 05989900
*                    o JOB_A ---> JOB_B                      * @Z24LPCY 05990100
*                                                            * @Z24LPCY 05990300
*                    o The 'next' job name in JOB_A          * @Z24LPCY 05990500
*                      (JQANXTJB) will be set to JOB_B.      * @Z24LPCY 05990700
*                                                            * @Z24LPCY 05990900
*                                                            * @Z24LPCY 05991100
*        - AFTER=  : JOB JOB_A SCHEDULE AFTER=JOB_B          * @Z24LPCY 05991300
*                                                            * @Z24LPCY 05991500
*                    - JOB_B ---> JOB_A                      * @Z24LPCY 05991700
*                                                            * @Z24LPCY 05991900
*                    - The 'previous' job name in JOB_A      * @Z24LPCY 05992100
*                      (JQAPRVJB) will be set to JOB_B.      * @Z24LPCY 05992300
*                                                            * @Z24LPCY 05992500
*                    - AFTER also implies an implicit        * @Z24LPCY 05992700
*                      DELAY ( see below ).                  * @Z24LPCY 05992900
*                                                            * @Z24LPCY 05993100
*        - DELAY   : JOB JOB_A SCHEDULE DELAY=YES            * @Z24LPCY 05993300
*                                                            * @Z24LPCY 05993500
*                    - Set bit JQEADLY to denote DELAY=YES   * @Z24LPCY 05993700
*                      was specified.                        * @Z24LPCY 05993900
*                                                            * @Z24LPCY 05994100
************************************************************** @Z24LPCY 05994300
         SPACE 1                                               @Z24LPCY 05994500
         TM    CIPJFLG2,CIPJ2BEF+CIPJ2AFT+CIPJ2DLY             @Z24LPCYC05994700
                                   BEFORE/AFTER/DELAY?         @Z24LPCY 05994900
         JZ    XCNOBFAF              None, skip                @Z24LPCY 05995100
         SPACE 1                                               @Z24LPCY 05995300
         TM    CIPJFLG2,CIPJ2BEF   BEFORE= specified?          @Z24LPCY 05995500
         JNO   XCDAFT                No, skip                  @Z24LPCY 05995700
         MVC   JQANXTJB,CIPBEFOR   Copy BEFORE= to 'next'      @Z24LPCYC05995900
                                     job name in JQA.          @Z24LPCY 05996100
         SPACE 1                                               @Z24LPCY 05996300
XCDAFT   TM    CIPJFLG2,CIPJ2AFT   AFTER= specified?           @Z24LPCY 05996500
         JNO   XCDDELAY              No, skip                  @Z24LPCY 05996700
         MVC   JQAPRVJB,CIPAFTER   Copy AFTER= to 'previous'   @Z24LPCYC05996900
                                     job name in JQA.          @Z24LPCY 05997100
         SPACE 1                                               @Z24LPCY 05997300
         OI    JQEFLAGA,JQEADLY    Since AFTER is an implied   @Z24LPCYC05997500
                                    delay, also set delay bit. @Z24LPCY 05997700
         SPACE 1                                               @Z24LPCY 05997900
XCDDELAY TM    CIPJFLG2,CIPJ2DLY   DELAY=YES specified?        @Z24LPCY 05998100
         JNO   XCNOBFAF             No, skip                   @Z24LPCY 05998300
         OI    JQEFLAGA,JQEADLY    Set DELAY flag in JQA       @Z24LPCY 05998500
         SPACE 1                                               @Z24LPCY 05998700
         OI    JQAFLAG4,JQA4DLYY   Indicate SCHEDULE DELAY=YES @Z24LPCYC05998900
                                    was specified.             @Z24LPCY 05999100
XCNOBFAF DS    0H                  End of BEFORE/AFTER/DELAY   @Z24LPCY 05999300
         SPACE 1                                               @Z24LPCY 05999500
************************************************************** @Z24LPCY 05999700
*                                                            * @Z24LPCY 05999900
*        Process JOBGROUP=                                   * @Z24LPCY 06000100
*                                                            * @Z24LPCY 06000300
************************************************************** @Z24LPCY 06000500
         SPACE 1                                               @Z24LPCY 06000700
         TM    CIPJFLAG,CIPJFJGR   JOBGROUP?                   @Z24LPCY 06000900
         JNO   XCNOJGRP             None, skip                 @Z24LPCY 06001100
         SPACE 1                                               @Z24LPCY 06001300
         NI    JQXFLAG2,FF-JQX2CKLG Logging job no concern     @Z24LPCY 06001500
         MVC   JQXZNAME,CIPJOBGR   Copy JOBGROUP name          @Z24LPCY 06001700
         MVC   JQPGRID,CIPJOBID+1  Copy JOBGROUP logging job   @Z24LPCYC06001900
                                    number                     @Z24LPCY 06002100
         SPACE 1                                               @Z24LPCY 06002300
         TM    CIPOFLAG,CIPREQUE  Br if no need to re-queue    @Z24LPCY 06002500
         JNO   XCNOJGRP            job for conversion          @Z24LPCY 06002700
         SPACE 1                                               @Z24LPCY 06002900
*------------------------------------------------------------* @Z24LPCY 06003100
*        Has been determined in CNVS that this job must      * @Z24LPCY 06003300
*        be re-queued for conversion. Required because       * @Z24LPCY 06003500
*        associated logging job is on the conversion Q or    * @Z24LPCY 06003700
*        in conversion. Before re-queue - record logging     * @Z24LPCY 06003900
*        job number for QGET use. QGET will use this         * @Z24LPCY 06004100
*        number to determine when the associated logging     * @Z24LPCY 06004300
*        job is done with conversion - and this job may      * @Z24LPCY 06004500
*        undergo conversion.                                 * @Z24LPCY 06004700
*------------------------------------------------------------* @Z24LPCY 06004900
         SPACE 1                                               @Z24LPCY 06005100
         OI    JQXFLAG2,JQX2CKLG   Inform $QGET processing     @Z24LPCY 06005300
         MVC   JQALGNUM,CIPJOBID   Set logging jobID for $QGET @Z24LPCY 06005500
         J     XCREQCNV            Queue to CNVT q             @Z24LPCY 06005700
         SPACE 1                                               @Z24LPCY 06005900
XCNOJGRP DS    0H                  End of JOBGROUP             @Z24LPCY 06006100
         SPACE 1                                               @Z24LPCY 06006300
*------------------------------------------------------------* @Z24LPCY 06006500
*        Set performance group                               * @Z24LPCY 06006700
*------------------------------------------------------------* @Z24LPCY 06006900
         SPACE 1                                               @Z24LPCY 06007100
         MVC   JQAPERF,CIPPERF     Copy perf group to JQE      @Z24LPCY 06007300
         SPACE 1                                               @Z24LPCY 06007500
*------------------------------------------------------------* @Z24LPCY 06007700
*        Set minimum MVS level to execute this job.          * @Z24LPCY 06007900
*------------------------------------------------------------* @Z24LPCY 06008100
         SPACE 1                                               @Z24LPCY 06008300
         CLC   JQAMINLV,$ZEROS     Is level already set?       @Z24LPCY 06008500
         JE    XQSMINLV              No, use returned value    @Z24LPCY 06008700
         CLC   JQAMINLV,CIPMNBCP   BCP level needs update?     @Z24LPCY 06008900
         JNL   XQNMINLV                 No, skip set           @Z24LPCY 06009100
XQSMINLV MVC   JQAMINLV,CIPMNBCP   Set XEQ min BCP level       @Z24LPCY 06009300
XQNMINLV DS    0H                  MVS level done              @Z24LPCY 06009500
         SPACE 1                                               @Z24LPCY 06009700
*------------------------------------------------------------* @Z24LPCY 06009900
*        Copy SCHENV if not overridden                       * @Z24LPCY 06010100
*------------------------------------------------------------* @Z24LPCY 06010300
         SPACE 1                                               @Z24LPCY 06010500
         TM    JQAFLAG2,JQA2TSCH   Operator update SCHENV?     @Z24LPCY 06010700
         JO    XCNOSCH               Yes, honor updated value  @Z24LPCY 06010900
         MVC   JQASCHE,CIPSCHE     Copy SCHENV to JQE          @Z24LPCY 06011100
XCNOSCH  DS    0H                  End of SCHENV               @Z24LPCY 06011300
         SPACE 1                                               @Z24LPCY 06011500
*------------------------------------------------------------* @Z24LPCY 06011700
*        Batch and demand select, set spin in the JQA        * @Z24LPCY 06011900
*------------------------------------------------------------* @Z24LPCY 06012100
         SPACE 1                                               @Z24LPCY 06012300
         TM    CIPSTAT,CIPSJLSP    Set spinnable in JQA?       @Z24LPCY 06012500
         JNO   XQNSKPSP              No, don't set JQA         @Z24LPCY 06012700
         OI    JQAFLAG1,JQA1SPIN     Yes, set job spinnable    @Z24LPCY 06012900
XQNSKPSP DS    0H                  Spin done                   @Z24LPCY 06013100
         SPACE 1                                               @S307294 06013120
*------------------------------------------------------------* @S307294 06013140
*        Job group logging jobs do not have pgm list         * @S307294 06013160
*------------------------------------------------------------* @S307294 06013180
         SPACE 1                                               @S307294 06013200
         TM    JQEFLAG3,JQE3DFJG   Group logging job?          @S307294 06013220
         JNO   XCNOJGLJ             no, skip                   @S307294 06013240
         MVHI  CIPPGMLN,0           yes, suppress pgm list     @S307294 06013260
XCNOJGLJ DS    0H                  Logging job done            @S307294 06013280
         TITLE 'HASP JCL CONVERSION PROCESSOR -- APPLY POLICIES'        06013300
*------------------------------------------------------------* @Z24LPCY 06013500
*        Invoke policy application service for               * @Z24LPCY 06013700
*        JobConversion polices, if exist                     * @Z24LPCY 06013900
*------------------------------------------------------------* @Z24LPCY 06014100
         SPACE 1                                               @Z24LPCY 06014300
         LGHI  R1,0                All policies                @Z24LPCY 06014500
         LGHI  R0,PCYTJOBC          of JobConversion type      @Z24LPCY 06014700
        $CALL  PCYAPPCK,           Policy apply precheck       @Z24LPCYC06014900
               PARM0G=(R0),         binary policy type         @S307294C06015100
               PARM1G=(R1),         ptr to policy name         @S307294C06015300
               OKRET=XCNOPCY        call to apply not needed   @S307294 06015500
         SPACE 1                                               @Z24LPCY 06015700
         USING PIWAREA,R15         Interpreter work area       @Z24LPCY 06015900
         SPACE 1                                               @Z24LPCY 06016100
        $AMODE 64,SYSSTATE=SET     Switch to 64-bit mode       @Z24LPCY 06016300
         LLGT  R15,$PCYPCE         PCY PCE work area           @Z24LPCY 06016500
         LG    R15,PCWPIW-PCE(,R15)   Interpreter work area    @Z24LPCY 06016700
         STG   R5,PIWCBS+XFACBJQE*L'PIWCBS  Set JQA pointer    @S307294 06017100
         STG   R10,PIWCBS+XFACBJCT*L'PIWCBS Set JCT pointer    @S307294 06017500
         STG   R3,PIWCBS+XFACBCIP*L'PIWCBS  Set CIPARM pointer @S307294 06017600
        $CALL  PCYAPPLY,           Call policy apply service   @Z24LPCYC06017700
               PARM0G=(R0),         binary policy type         @S307294C06017900
               PARM1G=(R1),         ptr to policy name         @S307294C06018100
               LINK2=R14            preserve ptr in R15        @S307294 06018300
        $AMODE 31,SYSSTATE=SET     Switch to 31-bit mode       @Z24LPCY 06018500
         SPACE 1                                               @Z24LPCY 06018700
         DROP  R15                 PIWAREA                     @Z24LPCY 06018900
         SPACE 1                                               @Z24LPCY 06019100
XCNOPCY  DS    0H                  No policies defined         @Z24LPCY 06019300
         TITLE 'HASP JCL CONVERSION PROCESSOR -- MAIN TASK EXIT'        06019500
************************************************************** @420D007 06019700
*                                                            * @420D007 06020000
*        If Exit 44 is enabled                               * @420D007 06030000
*           Call Exit 44 subroutine                          * @420D123 06032000
*        Else                                                * @420D123 06034000
*           Skip the Exit 44 subroutine call                 * @420D123 06042000
*                                                            * @420D007 06044000
************************************************************** @420D007 06050000
         SPACE 1                                               @420D007 06060000
         MVC   JPCESCHH,JQASCHE    Save original JQA SCHENV      @Z22EH 06070000
         MVC   JPCESCHJ,JCTSCHEN   Hold original JCT SCHENV      @Z22EH 06080000
         XC    JPCEX44D,JPCEX44D   Clear exit data area          @Z22EH 06085000
         SPACE 1                                                 @Z22EH 06090000
        $EXIT  44,JOBMASK=JCTXMASK,TYPE=TEST, EXIT 44 enabled?   @Z22EHC06096000
               NOENTER=XCSBSTAT    If disabled, bypass EXIT44    @Z22EH 06102000
         SPACE 1                                               @420D007 06110000
        $CALL  XCEXIT44            Call Exit 44 subroutine     @420P123 06120000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- SUB-TASK RETURN'       06192000
*********************************************************************** 06250000
*                                                                     * 06260000
*        T E S T   H O S C N V T   C O M P L E T I O N   S T A T U S  * 06270000
*                                                                     * 06280000
*********************************************************************** 06290000
         SPACE 1                                                        06300000
XCSBSTAT CLI   CIPJRETN,CIPJROK    Everything work?            @Z21LCNV 06340000
         JE    XCCHKPT               Yes, keep going           @Z21LCNV 06360000
         SPACE 1                                                 @Z10AN 06370000
**************************************************************   @Z10AN 06410000
*                                                            *   @Z10AN 06420000
*        Issue message that conversion for job failed.       *   @Z10AN 06430000
*        Queue for output unless exit made other request     *   @Z10AN 06446000
*                                                            *   @Z10AN 06450000
**************************************************************   @Z10AN 06460000
         SPACE 1                                                        06470000
         MVI   CIPSUBOP,CIPSUBNO   Not JOBGROUP related        @Z22D093 06475000
        $BLDMSG MSGID=305,         Issue HASP305 message       @Z21LCNVC06480000
               SEPAR=NULL,JOB=YES,TYPE=CMB                     @Z21LCNV 06485000
         SPACE 1                                                   @311 06491000
         MVC   JCTCNVRC,=A(JCTCFOPN) Set fake open failed RC     @Z10AN 06581000
         MVI   JQXMXIND,JQXMXCNV   Indicate converter error    @Z21LCOR 06582000
         XC    JQXMAXCC,JQXMAXCC   Clear max CC                @Z21LCOR 06583000
         OI    JQXFLAG2,JQX2MAXR   Indicate JQXMAXRC set       @Z21LCOR 06584000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CHECKPOINT PROCESSING' 06599000
         EJECT ,                                               @Z23D161 06601000
************************************************************** @Z22LDEP 06603000
*                                                            * @Z22LDEP 06605000
*        Process JOBGROUP                                    * @Z22LDEP 06607000
*                                                            * @Z22LDEP 06609000
*        - Call $JZDN OPERATION=CHECK_JOB to ensure the job  * @Z24LPCY 06611000
*          can be registered with the CIPJOBGR dependency    * @Z24LPCY 06613000
*          network:                                          * @Z24LPCY 06615000
*                                                            * @Z22LDEP 06617000
*          o Ensure the dependency network (CIPJOBGR)        * @Z22LDEP 06619000
*            exists.                                         * @Z22LDEP 06621000
*                                                            * @Z22LDEP 06623000
*          o Ensure a corresponding job identifier exists    * @Z22LDEP 06625000
*            in the dependency network for this job.         * @Z22LDEP 06635000
*                                                            * @Z22LDEP 06635200
*          o Ensure another job isn't already registered     * @Z22LDEP 06635400
*            to the corresponding job identifier.            * @Z22LDEP 06635600
*                                                            * @Z22LDEP 06635800
************************************************************** @Z22LDEP 06636000
         SPACE 1                                               @Z23D177 06636200
CZOD     USING ZJC,R4              ZOD for the job             @Z23D177 06636400
         SPACE 1                                               @Z22LDEP 06636600
XCCHKPT  LAE   R4,0                Assume no ZOD               @Z24LPCY 06636800
         TM    CIPJFLAG,CIPJFJGR   JOBGROUP?                   @Z23D177 06637000
         JNO   XCDWTHCK             None, skip                 @Z23D177 06637200
         SPACE 1                                               @Z22LDEP 06639200
        $QSUSE ,                   Esnure queues not lost      @Z22LDEP 06639400
         SPACE 1                                               @Z22LDEP 06639600
        $JZDN  OPERATION=CHECK_JOB,  Ensure this job can be    @Z22LDEPC06639800
               JOBPTR=JQA,             registered.             @Z22LDEPC06640000
               OKRET=XCDJGROK        Continue if OK            @Z23D177 06640200
         SPACE 1                                               @Z22LDEP 06640400
         CLIJE R15,16,XCDJGROK     Register to FLUSHED is OK   @Z23D177 06640600
         CHI   R15,4               ZOD not found?              @Z22LDEP 06640800
         JNE   XCDJGCHJ              No, check next RC         @Z22LDEP 06641000
         LHI   R2,CIPJBMGR         Indicate valid job group    @Z22LDEP 06641200
         MVI   CIPSUBOP,CIPGRPNM   Append JOBGROUP name        @Z22D093 06641400
         J     XCMSG305              not found & queue for     @Z22D093C06641600
                                     output                    @Z22D093 06641800
         SPACE 1                                               @Z22D093 06642000
XCDJGCHJ CHI   R15,8               ZJI not found?              @Z22D093 06642200
         JNE   XCDJGCHL              No, check next RC         @Z23D187 06642400
         LHI   R2,CIPJBNJB         Indicate job not assoc with @Z22D093 06642600
         MVI   CIPSUBOP,CIPGRPNM   Append JOBGROUP name        @Z22D093 06642800
         J     XCMSG305              job group & queue for     @Z22D093C06643000
                                     output                    @Z22D093 06643200
XCDJGCHL CHI   R15,20              z22 activation required?    @Z23D187 06643400
         JNE   XCDJGERR              No, check next RC         @Z23D187 06643600
         LHI   R2,CIPJBCKL         Indicate z22 required       @Z23D187 06643800
         MVI   CIPSUBOP,CIPSUBNO   Do not append Job Group     @Z23D187 06644000
         J     XCMSG305             name & queue for           @Z23D187C06644200
                                    output                     @Z23D187 06644400
         SPACE 1                                               @Z22D093 06644600
XCDJGERR LHI   R2,CIPJBEGR         Indicate Job group error    @Z22D093 06644800
         MVI   CIPSUBOP,CIPGRPNM   Append JOBGROUP name        @Z22D093 06645000
         J     XCMSG305              and queue for output      @Z22D093 06645200
         SPACE 1                                               @Z23D177 06645400
XCDJGROK LR    R4,R1               ZOD returned by CHECK_JOB   @Z23D177 06645600
         EJECT ,                                               @Z23D177 06645800
*------------------------------------------------------------* @Z23D177 06646000
*        Make sure that WITH= references do not create       * @Z23D177 06646200
*        a circular dependency - e.g. JOBA WITH=JOBB and     * @Z23D177 06646400
*        JOBB WITH=JOBA.                                     * @Z23D177 06646600
*        Also, for jobs in a job group, make sure WITH=      * @Z23D177 06646800
*        chain does not reference job in the same job group  * @Z23D177 06647000
*        because that would introduce unwanted implicit      * @Z23D177 06647200
*        dependency.                                         * @Z23D177 06647400
*------------------------------------------------------------* @Z23D177 06647600
         SPACE 1                                               @Z23D177 06647800
         USING CAT,R6              Current class               @Z23D177 06648000
TJQA     USING JQA,R8              Target JQA (art)            @Z23D177 06648200
         SPACE 1                                               @Z23D177 06648400
XCDWTHCK TM    JQAWITH,FF-C' '     WITH= specified?            @Z23D177 06648600
         JZ    XCGJMR               No, job is OK              @Z23D177 06648800
         SPACE 1                                               @Z23D177 06649000
         LAE   R6,0                No current CAT yet          @Z23D177 06649200
         LAE   R8,0                No reuseable JQA yet        @Z23D177 06649400
         SPACE 1                                               @Z23D177 06649600
         CLC   JQAWITH,JQEJNAME    Job points to itself?       @Z23D177 06649800
         JE    XCDWCER              Yes, circle found          @Z23D177 06650000
         SPACE 1                                               @Z23D177 06650200
         MVHI  JPCWTHNR,1          Prime                       @Z23D177 06650400
         MVC   JPCWTHCN,JQAWITH     WITH= name array           @Z23D177 06650600
         SPACE 1                                               @Z23D177 06650800
*------------------------------------------------------------* @Z23D177 06651000
*        For job in a job group check if WITH= reference     * @Z23D177 06651200
*        points to a job in the same job group               * @Z23D177 06651400
*------------------------------------------------------------* @Z23D177 06651600
         SPACE 1                                               @Z23D177 06651800
CZJI     USING ZJC,R7              Current ZJI addr.           @Z23D177 06652000
         SPACE 1                                               @Z23D177 06652200
XCDWTHLP CLIJE R4,0,XCDWCTL        Skip if job not in job grp  @Z23D177 06652400
        $QZJC  TYPE=ZJILIST,       Loop thru ZOD's ZJI list    @Z23D177C06652600
               LOOP=XCDWZJIL,      Loop for next ZJI label     @Z23D177C06652800
               ZODUSE=CZOD,        Using of our ZOD (CZOD)     @Z23D177C06653000
               REG=R7,             Set ZJI address in R7       @Z23D177C06653200
               NOMORE=XCDWCTL      Good if we don't find it    @Z23D177 06653400
         SPACE 1                                               @Z23D177 06653600
         CLC   CZJI.ZJIJNAME,JPCWTHCN  WITH= is this job?      @Z23D177 06653800
         JNE   XCDWZJIL                 No, keep going         @Z23D177 06654000
         SPACE 1                                               @Z23D177 06654200
         LHI   R2,CIPJBJGW         WITH= jobgroup error        @Z23D177 06654400
         J     XCDWTHE             Report it                   @Z23D177 06654600
         SPACE 1                                               @Z23D177 06654800
         DROP  CZJI                ZJI                         @Z23D177 06655000
         EJECT ,                                               @Z23D177 06655200
*------------------------------------------------------------* @Z23D177 06655400
*        Loop through all jobs in execution queues           * @Z23D177 06655600
*------------------------------------------------------------* @Z23D177 06655800
         SPACE 1                                               @Z23D177 06656000
RJQE     USING JQE,R7              Target JQE (real)           @Z23D177 06656200
         SPACE 1                                               @Z23D177 06656400
XCDWCTL $DOGCAT ACTION=(FETCHNEXT,READ),   Loop through        @Z23D177C06656600
               CAT=CAT,                     class queues       @Z23D177C06656800
               ERRET=XCDWSUPQ              When done           @Z23D177 06657000
         LR    R6,R1               Get CAT address             @Z23D177 06657200
         SPACE 1                                               @Z23D177 06657400
         TM    CATFLAG3,CAT3SPEC   STC or TSU class?           @Z23D177 06657600
         JO    XCDWCTL              Yes, skip class queue      @Z23D177 06657800
         SPACE 1                                               @Z23D177 06658000
        $QJQE  CAT=CAT,            Loop through                @Z23D177C06658200
               REG=(R7),            all JQEs in class          @Z23D177C06658400
               MODE=REAL,          In real mode                @Z23D177C06658600
               LOOP=XCDWJLP,       Label for loop              @Z23D177C06658800
               NOMORE=XCDWCTL      When done, do next class    @Z23D177 06659000
         SPACE 1                                               @Z23D177 06659200
         CLC   RJQE.JQEJNAME,JPCWTHCN  Match on WITH= name?    @Z23D177 06659400
         JNE   XCDWJLP                  No, skip this job      @Z23D177 06659600
         SPACE 1                                               @Z23D177 06659800
        $DOGJQE ACTION=(FETCH,READ),  Get artificial JQA       @Z23D177C06660000
               CBADDR=TJQA.JQA,         Re-use JQA if any      @Z23D177C06660200
               JQE=RJQE.JQE             JQE to read            @Z23D177 06660400
         LR    R8,R0               Save JQA address            @Z23D177 06660600
         SPACE 1                                               @Z23D177 06660800
         TM    TJQA.JQAWITH,FF-C' '  WITH= chain?              @Z23D177 06661000
         JZ    XCDWJLP                No, continue to next JQE @Z23D177 06661200
         SPACE 1                                               @Z23D177 06661400
         CLC   TJQA.JQAWITH,JQEJNAME  Points to original job?  @Z23D177 06661600
         JE    XCDWCER                 Yes, circle found       @Z23D177 06661800
         EJECT ,                                               @Z23D177 06662000
*------------------------------------------------------------* @Z23D177 06662200
*        Add WITH= name from current job to WITH= array      * @Z23D177 06662400
*        if it is not already there and if there is space    * @Z23D177 06662600
*------------------------------------------------------------* @Z23D177 06662800
         SPACE 1                                               @Z23D177 06663000
         CLFHSI JPCWTHNR,JPCWTHFF If array is full,            @Z23D177 06663200
         JNL   XCDWJLP             don't bother                @Z23D177 06663400
         SPACE 1                                               @Z23D177 06663600
         LAE   R1,JPCWTHAR        1st name in array            @Z23D177 06663800
         L     R0,JPCWTHNR        Count of entries             @Z23D177 06664000
         SPACE 1                                               @Z23D177 06664200
XCDWCKN  CLC   TJQA.JQAWITH,0(R1) Already there?               @Z23D177 06664400
         JE    XCDWJLP             Yes, go to next JQE         @Z23D177 06664600
         LA    R1,L'JQAWITH(,R1)  Step to next entry           @Z23D177 06664800
         JCT   R0,XCDWCKN         Loop through entries         @Z23D177 06665000
         SPACE 1                                               @Z23D177 06665200
         L     R1,JPCWTHNR        Current entries in array     @Z23D177 06665400
         LR    R15,R1             Offset of                    @Z23D177 06665600
         MHI   R15,L'JQAWITH       a new entry                 @Z23D177 06665800
         LAE   R15,JPCWTHAR(R15)  New entry location           @Z23D177 06666000
         MVC   0(L'JQAWITH,R15),TJQA.JQAWITH  Add name         @Z23D177 06666200
         AHI   R1,1               Increment                    @Z23D177 06666400
         ST    R1,JPCWTHNR         entry count                 @Z23D177 06666600
         J     XCDWJLP            Continue with next JQE       @Z23D177 06666800
         EJECT ,                                               @Z23D177 06667000
*------------------------------------------------------------* @Z23D177 06667200
*        Loop through the SETUP queue and do the same        * @Z23D177 06667400
*        checks                                              * @Z23D177 06667600
*------------------------------------------------------------* @Z23D177 06667800
         SPACE 1                                               @Z23D177 06668000
XCDWSUPQ LHI   R6,0                No CAT here                 @Z23D177 06668200
        $QJQE  TYPE=SETUP,         Process SETUP queue         @Z23D177C06668400
               REG=(R7),           Place JQE in R7             @Z23D177C06668600
               MODE=REAL,          Get real JQE                @Z23D177C06668800
               LOOP=XCDWSLP,       Label for looping           @Z23D177C06669000
               NOMORE=XCDWNXTN     Label when done             @Z23D177 06669200
         SPACE 1                                               @Z23D177 06669400
         CLC   RJQE.JQEJNAME,JPCWTHCN  Match on WITH= name?    @Z23D177 06669600
         JNE   XCDWSLP                  No, skip this job      @Z23D177 06669800
         SPACE 1                                               @Z23D177 06670000
        $DOGJQE ACTION=(FETCH,READ),  Get artificial JQA       @Z23D177C06670200
               CBADDR=TJQA.JQA,         Re-use JQA if any      @Z23D177C06670400
               JQE=RJQE.JQE             JQE to read            @Z23D177 06670600
         LR    R8,R0               Save JQA address            @Z23D177 06670800
         SPACE 1                                               @Z23D177 06671000
         TM    TJQA.JQAWITH,FF-C' '  WITH= chain?              @Z23D177 06671200
         JZ    XCDWSLP                No, continue to next JQE @Z23D177 06671400
         SPACE 1                                               @Z23D177 06671600
         CLC   TJQA.JQAWITH,JQEJNAME  Points to original job?  @Z23D177 06671800
         JE    XCDWCER                 Yes, circle found       @Z23D177 06672000
         SPACE 1                                               @Z23D177 06672200
*------------------------------------------------------------* @Z23D177 06672400
*        Add WITH= name from current job to WITH= array      * @Z23D177 06672600
*        if it is not already there and if there is space    * @Z23D177 06672800
*------------------------------------------------------------* @Z23D177 06673000
         SPACE 1                                               @Z23D177 06673200
         CLFHSI JPCWTHNR,JPCWTHFF If array if full,            @Z23D177 06673400
         JNL   XCDWSLP             don't bother                @Z23D177 06673600
         SPACE 1                                               @Z23D177 06673800
         LAE   R1,JPCWTHAR        1st name in array            @Z23D177 06674000
         L     R0,JPCWTHNR        Count of entries             @Z23D177 06674200
         SPACE 1                                               @Z23D177 06674400
XCDWCKNS CLC   TJQA.JQAWITH,0(R1) Already there?               @Z23D177 06674600
         JE    XCDWSLP             Yes, go to next JQE         @Z23D177 06674800
         LA    R1,L'JQAWITH(,R1)  Step to next entry           @Z23D177 06675000
         JCT   R0,XCDWCKNS        Loop through entries         @Z23D177 06675200
         SPACE 1                                               @Z23D177 06675400
         L     R1,JPCWTHNR        Current entries in array     @Z23D177 06675600
         LR    R15,R1             Offset of                    @Z23D177 06675800
         MHI   R15,L'JQAWITH       a new entry                 @Z23D177 06676000
         LAE   R15,JPCWTHAR(R15)  New entry location           @Z23D177 06676200
         MVC   0(L'JQAWITH,R15),TJQA.JQAWITH  Add name         @Z23D177 06676400
         AHI   R1,1               Increment                    @Z23D177 06676600
         ST    R1,JPCWTHNR         entry count                 @Z23D177 06676800
         J     XCDWSLP            Continue with next JQE       @Z23D177 06677000
         EJECT ,                                               @Z23D177 06677200
*------------------------------------------------------------* @Z23D177 06677400
*        Processing complete for the current WITH= target.   * @Z23D177 06677600
*        Check if there are more names in array.             * @Z23D177 06677800
*------------------------------------------------------------* @Z23D177 06678000
         SPACE 1                                               @Z23D177 06678200
XCDWNXTN L     R0,JPCWTHNR         Names in array              @Z23D177 06679200
         SLFI  R0,1                One just processed          @Z23D177 06680200
         BRC   8+4+2,XCDWCKOK      None remain                 @Z23D177 06680400
         SPACE 1                                               @Z23D177 06680600
         ST    R0,JPCWTHNR         Remaining names in array    @Z23D177 06680800
         MVC   JPCWTHAR(L'JPCWTHAR-L'JQAWITH),JPCWTHAR+L'JQAWITH       C06681000
                                   Shift array one position    @Z23D177 06681200
         J     XCDWTHLP            Process next name in array  @Z23D177 06681400
         SPACE 1                                               @Z23D177 06681600
*------------------------------------------------------------* @Z23D177 06681800
*        WITH= error detected.                               * @Z23D177 06682000
*        Cleanup and return error.                           * @Z23D177 06682200
*------------------------------------------------------------* @Z23D177 06682400
         SPACE 1                                               @Z23D177 06682600
XCDWCER  LHI   R2,CIPJBCRW         Indicate WITH= circle       @Z23D177 06682800
         SPACE 1                                               @Z23D177 06683000
XCDWTHE  CLIJE R6,0,XCDWTHE2       Skip CAT release if none    @Z23D177 06683200
        $DOGCAT ACTION=RETURN,CAT=CAT  Release CAT             @Z23D177 06683400
         SPACE 1                                               @Z23D177 06683600
XCDWTHE2 CLIJE R8,0,XCDWTHE3       Skip JQA release if none    @Z23D177 06683800
        $DOGJQE ACTION=RETURN,        Release JQA              @Z23D177006684000
               CBADDR=TJQA.JQA          JQA to release         @Z23D177 06684200
         SPACE 1                                               @Z23D177 06684400
XCDWTHE3 J     XCMSG305            Queue job to OUTPUT         @Z23D177 06684600
         SPACE 1                                               @Z23D177 06684800
*------------------------------------------------------------* @Z23D177 06685000
*        WITH= processing complete.                          * @Z23D177 06685200
*        Release residual JQA and continue.                  * @Z23D177 06685400
*------------------------------------------------------------* @Z23D177 06685600
         SPACE 1                                               @Z23D177 06685800
XCDWCKOK CLIJE R8,0,XCGJMR         Skip if no JQA              @Z23D177 06686000
        $DOGJQE ACTION=RETURN,      Release JQA                @Z23D177C06686200
               CBADDR=TJQA.JQA      JQA to release             @Z23D177 06686400
         SPACE 1                                               @Z23D177 06686600
         DROP  R6,RJQE,TJQA        CAT, real JQE, art JQA      @Z23D177 06686800
         DROP  CZOD                ZOD                         @Z23D177 06687000
         EJECT ,                                               @Z22LDLS 06687400
**************************************************************   @R07BX 06687600
*                                                            *   @R07BX 06687800
*       Fill in all JCT fields related to job priority,      * @Z02LLRJ 06688000
*       scheduling environment, and JESLOG processing        * @Z02LLRJ 06688200
*       prior to writing the JCT.                            * @Z02LLRJ 06688400
*                                                            *   @R07BX 06688600
**************************************************************   @R07BX 06688800
         SPACE 1                                               @Z21LCLS 06689000
*------------------------------------------------------------*   @R07BX 06689200
*                                                            *   @R07BX 06689400
*       Job priority is determined in the following order:   *   @R07BX 06689600
*         1) $T command                                      *   @R07BX 06689800
*         2) other PCE or operator command                   *   @R07BX 06690000
*         3) $EXIT6 routine                                  *   @R07BX 06690200
*         4) priority aging                                  *   @R07BX 06690400
*                                                            *   @R07BX 06690600
*------------------------------------------------------------*   @R07BX 06690800
         SPACE 1                                                 @R07BX 06691000
XCGJMR   TM    JQEFLAG6,JQE6PRT    Did operator change prior.  @Z21LCNV 06691200
         JO    XCGETJQE            Yes, use JQE priority         @R07BX 06691400
         CLC   JPCEPRIO,JQEPRIO    Did priority change?          @R07BX 06691600
         JE    XCGETJCT            No, use JCT priority          @R07BX 06691800
         TM    JQEFLAG6,JQE6PRAG   Was job priority aged?        @R07BX 06692000
         JNO   XCGETJQE            No, changed by other PCE      @R07BXC06692200
                                   or exit. Use JQE value.       @R07BX 06692400
         CLC   JPCEPRIO,JCTPRIO    Did $EXIT6 change priority?   @R07BX 06692600
         JE    XCGETJQE            No, use JQE priority          @R07BX 06692800
XCGETJCT MVC   JQEPRIO,JCTPRIO     Use priority from $EXIT6      @R07BX 06693000
         J     XCQPUT3                                           @R07BX 06693200
XCGETJQE MVC   JCTPRIO,JQEPRIO     Reflect change in JCT         @R07BX 06693400
         EJECT ,                                               @Z21LCNV 06693600
*------------------------------------------------------------*   @R10BH 06693800
*        Update JQEJCLAS and JQXJCLAS from JCTJCLAS          *   @R10BH 06694000
*------------------------------------------------------------*   @R10BH 06694200
         SPACE 1                                                 @R07BX 06694400
XCQPUT3  TM    JQEFLAG3,JQE3JOB    Br if this is not a           @R07BX 06694600
         JNZ   XQNCLASS              batch job                   @R07BX 06694800
         SPACE 1                                               @Z21LCNV 06695000
*------------------------------------------------------------* @Z21LCNV 06695200
*        This is a batch job, set the appropriate job class  * @Z21LCNV 06695400
*        scheduling environment, service class etc in JQE    * @Z21LCNV 06695600
*------------------------------------------------------------* @Z21LCNV 06695800
         SPACE 1                                               @Z21LCNV 06696000
         TM    JPCEFLG1,JPCE1CLS   Exit 44 set class?            @Z22EH 06696200
         JNO   XCLSNXIT              No, determine class         @Z22EH 06696400
         CLC   JPCEXCLS,=CL8'STC'  Attempting to set STC?        @Z22EH 06696600
         JE    XCLSNXIT              Yes, not OK for batch       @Z22EH 06696800
         CLC   JPCEXCLS,=CL8'TSU'  Attempting to set TSU?        @Z22EH 06697000
         JE    XCLSNXIT              Yes, not OK for batch       @Z22EH 06697200
         SPACE 1                                                 @Z22EH 06697400
        $DOGCAT ACTION=(FETCH,READ),  Verify CAT exists          @Z22EHC06697600
               JOBCLASS=JPCEXCLS,       for class assigned       @Z22EHC06697800
               ERRET=XCX44CSE             by exit                @Z22EH 06698000
         LAE   R1,0(R1)            Ensure AR1 is zero            @Z22EH 06698200
         SPACE 1                                                 @Z22EH 06698400
         MVC   $DWORK,CATCLASS-CAT(R1)  Copy CAT's job class     @Z22EH 06698600
         SPACE 1                                                 @Z22EH 06698800
        $DOGCAT ACTION=RETURN,CAT=(R1)  Free the CAT             @Z22EH 06699000
         SPACE 1                                                 @Z22EH 06699200
         CLC   JPCEXCLS,$DWORK     If class name doesn't match   @Z22EH 06699400
         JNE   XCX44CSE              returned CAT's class then   @Z22EHC06699600
                                     we processed a group, so    @Z22EHC06699800
                                     treat as an error           @Z22EH 06700000
         SPACE 1                                                 @Z22EH 06700200
         MVC   JQEJCLAS,JPCEXCLS   Set job class to              @Z22EH 06700400
         MVC   JQXJCLAS,JPCEXCLS     value set by exit           @Z22EH 06700600
         J     XCCLASS             Class processed               @Z22EH 06700800
         SPACE 1                                                 @Z22EH 06701000
*------------------------------------------------------------*   @Z22EH 06701200
*        Class passed back from exit 44 is bad, issue        *   @Z22EH 06701400
*        DISTERR and ignore exit value                       *   @Z22EH 06701600
*------------------------------------------------------------*   @Z22EH 06701800
         SPACE 1                                                 @Z22EH 06702000
XCX44CSE ICMH  R4,B'1111',JPCEXCLS  Get bad job class in reg     @Z22EH 06702200
         ICM   R4,B'1111',JPCEXCLS+4  value in reg for SYMREC    @Z22EH 06702400
XCX44CLE $DISTERR JCT=JCT          Bad JOB class from exit 44    @Z22EH 06702600
         EJECT ,                                                 @Z22EH 06702800
*------------------------------------------------------------*   @Z22EH 06703000
*        Exit did not set job class (or set a bad value) use *   @Z22EH 06703200
*        class from JQE or JCT.                              *   @Z22EH 06703400
*------------------------------------------------------------*   @Z22EH 06703600
         SPACE 1                                                 @Z22EH 06703800
XCLSNXIT CLC   JQXJCLAS,JPCECLAS   $T/exit change JQX jobclas?   @Z22EH 06704000
         JE    XCCLJCT               No, use JCT value           @Z22EH 06704200
         CLC   JQXJCLAS,=CL8'STC'  Did exit set STC?             @Z22EH 06704400
         JE    XCCLJCT               Yes, ignore JQX value       @Z22EH 06704600
         CLC   JQXJCLAS,=CL8'TSU'  Did exit set TSU?             @Z22EH 06704800
         JNE   XCCLASS               No, let JQX value stand     @Z22EH 06705000
         SPACE 1                                               @Z21LCNV 06705200
         USING JCTX,R2             Establish JCTX              @Z22LCNV 06705400
         SPACE 1                                               @Z21LCNV 06705600
XCCLJCT $JCTXGET JCT=JCT,          Get advanced features ext.    @Z22EHC06705800
               TYPE==CL4'IBM',     IBM section                 @Z21LCLSC06706000
               MOD=JCXADVM,        Modifier                    @Z21LCLSC06706200
               ERRET=*             Will not fail                 @Z22EH 06706400
         LAE   R2,0(R1)            Save JCTX address             @Z22EH 06706600
         EJECT ,                                               @Z22D021 06706800
*------------------------------------------------------------* @Z21LCLS 06707000
*        Advanced features ext created - initialize          * @Z21LCLS 06707200
*------------------------------------------------------------* @Z21LCLS 06707400
         SPACE 1                                               @Z21LCLS 06707600
        $DOGCAT ACTION=(FETCH,READ),  Verify CAT exists        @Z22LCNVC06707800
               JOBCLASS=JCXJCLA8,       for class assigned     @Z22LCNVC06708000
               ERRET=XCDGCATE             to job               @Z22LCNV 06708200
         SPACE 1                                                 @Z22EH 06708400
         MVC   $DWORK,CATCLASS-CAT(R1)  Copy CAT's job class     @Z22EH 06708600
         SPACE 1                                               @Z22LCNV 06708800
        $DOGCAT ACTION=RETURN,CAT=(R1)  Free the CAT           @Z22LCNV 06709000
         SPACE 1                                               @Z22LCNV 06709200
         CLC   JCXJCLA8,$DWORK     If class name doesn't match   @Z22EH 06709400
         JNE   XCDGCATE              returned CAT's class then   @Z22EHC06709600
                                     we processed a group, so    @Z22EHC06709800
                                     treat as an error           @Z22EH 06710000
         SPACE 1                                                 @Z22EH 06710200
         MVC   JQEJCLAS,JCXJCLA8   Job class (1 byte)            @Z22EH 06710400
         MVC   JQXJCLAS,JCXJCLA8   Job class (8 byte)          @Z21LCLS 06710600
         J     XCCLASS             Class processed             @Z22LCNV 06710800
         EJECT ,                                               @Z22LCNV 06711000
*------------------------------------------------------------* @Z22LCNV 06711200
*        Class passed back from converter subtask is bad,    * @Z22LCNV 06711400
*        issue DISTERR and ignore change.                    * @Z22LCNV 06711600
*------------------------------------------------------------* @Z22LCNV 06711800
         SPACE 1                                               @Z22LCNV 06712000
XCDGCATE ICMH  R4,B'1111',JCXJCLA8  Get bad job class in reg   @Z22D003 06712200
         ICM   R4,B'1111',JCXJCLA8+4  value in reg for SYMREC  @Z22D003 06712400
XCLASERR $DISTERR JCT=JCT          Bad JOB class from exit     @Z22LCNV 06712600
         SPACE 1                                               @Z22LCNV 06712800
         MVC   JCTJCLAS,JQXJCLAS   Restore JQA job class         @Z22EH 06713000
         MVC   JCXJCLA8,JQXJCLAS     back into JCT             @Z22LCNV 06713200
         SPACE 1                                               @Z22LCNV 06713400
         DROP  R2                  Drop JCTX                   @Z22LCNV 06713600
         SPACE 1                                                 @R08AO 06713800
*------------------------------------------------------------*   @Z22EH 06714000
*        Refresh accounting info                             * @Z24LPCY 06714200
*------------------------------------------------------------*   @Z22EH 06714400
         SPACE 1                                                 @Z22EH 06714600
XCCLASS  MVC   JQAACCT,JCTACCTL    Refresh accounting info     @Z24LPCYC06715000
                                    in case changed by $EXIT 6 @Z24LPCY 06715200
         EJECT ,                                                 @R10BH 06715400
*------------------------------------------------------------*   @R10BH 06715600
*        Determine SCHENV                                    *   @R10BH 06715800
*------------------------------------------------------------*   @R10BH 06716000
         SPACE 1                                                 @Z05DK 06716200
         TM    JPCEXRSP,X044CNVQ   Skip classify and SCHENV      @Z05DK 06716400
         JO    XQNOSCH               if exit 44 wants to         @Z05DKC06716600
                                     convert again               @Z05DK 06716800
         CLC   JCTCNVRC,=A(JCTCNWT)  Br if job must be req       @Z05DK 06717000
         JE    XQNOSCH                 to converter that can     @Z05DKC06717200
                                       WAIT                      @Z05DK 06717400
         SPACE 1                                                 @Z22EH 06717600
         TM    JPCEFLG1,JPCE1SCH   Exit 44 set SCHENV?           @Z22EH 06717800
         JNO   XQN44SCH              No, check for default       @Z22EH 06718000
         MVC   JQASCHE,JPCEXSCH    Set exit provided SCHENV      @Z22EH 06718200
         NI    JQAFLAG2,FF-JQA2SCHE-JQA2TSCH-JQA2SINV  Reset     @Z22EH 06718400
         J     XQPUTSCH            Save SCHENV to JCT            @Z22EH 06718600
         SPACE 1                                                 @Z22EH 06718800
XQN44SCH TM    JQAFLAG2,JQA2TSCH   Operator update SCHENV?       @Z22EH 06719000
         JO    XQPUTSCH              Yes, honor updated value  @Z22D021 06719200
         TM    JQASCHE,FF-C' '     Br if something               @R10BH 06719600
         JNZ   XQPUTSCH              has been specified          @R10BH 06719800
         SPACE 1                                                 @R10BH 06720000
         MVC   JQASCHE,JPCESCHE    Set class default SCHENV      @R10BH 06720200
         TM    JQASCHE,FF-C' '     Br if                         @R10BH 06720400
         JZ    XQPUTSCH              no default                  @R10BH 06720600
         OI    JQAFLAG2,JQA2SCHE   Note that this is default     @R10BH 06720800
XQPUTSCH MVC   JCTSCHEN,JQASCHE    SCHENV to JCT                 @R10BH 06721000
         EJECT ,                                                 @R07BX 06723400
*------------------------------------------------------------*   @R10BH 06723600
*        Fetch WLM classification of batch job               *   @R10BH 06723800
*------------------------------------------------------------*   @R10BH 06724000
         SPACE 1                                                 @R10BH 06724200
         TM    JQEFLAG3,JQE3DFJG   Job group logging job?      @S307294 06724260
         JO    XQNOSCH              yes, skip classification   @S307294 06724320
        $CALL  $CLASSIF,           WLM classification routine    @R07BXC06724400
               PARM=JQE,           Address of JQE                @R07BXC06724600
               ERRET=XQNCLASS      Show no sevice class info     @R07BXC06724800
                                     if can't classify now       @R07BX 06725000
         SPACE 1                                                 @R07BX 06725200
         MVC   JCTWOSCN,JQAWSCN    Set original srv cls name     @R07BX 06725400
         MVC   JCTWSCN,JQAWSCN     Set current srv cls name      @R07BX 06725600
         J     XQNOSCH             Finished classification     @Z21LCNV 06725800
         SPACE 1                                                 @R07BX 06726000
*------------------------------------------------------------* @Z21LCNV 06726200
*        This is demand select (STC/TSU) or the call to      *   @Z22EH 06726400
*        $CLASSIF failed, ensure that service class is       *   @Z22EH 06726600
*        cleared and scheduling environment restored to      *   @Z22EH 06726800
*        saved value.                                        *   @Z22EH 06727000
*------------------------------------------------------------* @Z21LCNV 06727200
         SPACE 1                                               @Z21LCNV 06727400
XQNCLASS MVC   JCTWOSCN,$ZEROS     Ensure no service class       @R07BX 06727600
         MVC   JCTWSCN,$ZEROS      Ensure no service class       @R07BX 06727800
         MVC   JQASCHE,JPCESCHH    Restore original JQA SCHENV   @Z05DK 06728000
         MVC   JCTSCHEN,JPCESCHJ   Restore original JCT SCHENV   @Z05DK 06728200
XQNOSCH  DS    0H                  End SCHENV & Classify         @Z05DK 06728400
         EJECT ,                                               @Z21LCNV 06728600
*------------------------------------------------------------* @Z21LCNV 06728800
*        Batch and demand select, set various times          * @Z24LPCY 06732000
*        in the JQA                                          * @Z21LCNV 06734000
*------------------------------------------------------------* @Z21LCNV 06736000
         SPACE 1                                               @Z21LCNV 07510000
         L     R0,JCTJPEST         Get job arrival time        @R04LWLM 07596000
         ST    R0,JQARRIV          Set job arrival time        @R04LWLM 07598000
         TM    JQAFLAG1,JQA1JCLH   Br if job was held via      @R04P096 07598400
         JO    XCPUTEH               end user hold (JCLHOLD)   @R04P096 07599000
         SL    R0,JCTJPERD         Compute approximate time    @R04P103 07600000
         ST    R0,JQARTOC            that it took to convert   @R04LWLM 07602000
XCPUTEH  NI    JQAFLAG1,FF-JQA1JCLH  End user hold now off     @R04LWLM 07604000
         SPACE 1                                                        07604500
        $CALL  TIMECLOC,           Reset all timers              @R05BVC07605000
               PARM1=JQE,          Address of JQA                @R05BVC07605200
               PARM0=1             Show reset required           @R05BV 07605400
        TITLE 'HASP JCL CONVERSION PROCESSOR -- TERMINATION PROCESSING' 08470000
*********************************************************************** 08480000
*                                                                     * 08490000
*        R E - Q U E U E   T H E   J O B                              * 08500000
*                                                                     * 08510000
*********************************************************************** 08520000
         SPACE 1                                                        08530000
         TM    JQEFLAG5,JQE5EOM    Did the job go thru EOM?      @R01AX 08550300
         JO    XCNVOUT              Yes, queue it for output     @R01AX 08550600
         TM    JCTFLAG7,JCT7FAIC   Br if input processing      @Z21LCJL 08551600
         JO    XCNVOUT               insists upon job failure  @Z21LCJL 08551700
         TM    JCTJOBFL,JCTTSUJB+JCTSTCJB LOGON/STARTED TASK?    @R01AX 08552000
         JNZ   XCQOCAN                     Yes, check cancel     @R01AX 08553000
         TM    JPCEXRSP,X044PURQ   Place job on PURGE queue if   @R03AB 08554000
         JO    XCQPUR                exit 44 requested purge     @R03AB 08555000
         SPACE 1                                                 @R03AB 08556000
         TM    JPCEXRSP,X044OUTQ   Put job on OUTPUT queue if    @R03AB 08557000
         JO    XCNVOUT               exit 44 requested output    @R03AB 08558000
         SPACE 1                                                 @R03AB 08559000
         TM    JCTFLAG2,JCT2AVF    SYSIN D/S CREATE FAIL?      @313P023 08560000
         JO    XCNVOUT             YES, QUEUE JOB FOR OUTPUT   @313P023 08570000
         SPACE 1                                                 @220JY 08650000
         TM    JQEFLAG1,JQE1PURG+JQE1OCAN  Job was cancelled?  @S307294 08680000
         JNZ   XCNVOUT                      yes, q to output   @S307294 08690000
         TM    JPCEXRSP,X044CNVQ   Exit 44 wants to requeue?     @R03AB 08692000
         JO    XCRQCN               Yes, go requeue              @R03AB 08694000
         CLC   JCTCNVRC,=A(JCTCNWT)  Requeue to another CNVT?    @R03AB 08696000
         JE    XCRQCN                 Yes, go do it              @R03AB 08698000
         TM    JCTJOBFL,JCTTSCAN   Test if TYPRUN=SCAN           @R03AB 08700000
         JO    XCNVOUT              Yes, queue job to output     @R03AB 08702000
         SPACE 1                                                 @R03AB 08704000
*------------------------------------------------------------*   @R03AB 08706000
*                                                            *   @R03AB 08708000
*        No valid response bits set by exit 44.  Continue    *   @R03AB 08710000
*        processing based on standard JES2 processing.       *   @R03AB 08712000
*                                                            *   @R03AB 08714000
*------------------------------------------------------------*   @R03AB 08716000
         SPACE 1                                                 @R03AB 08718000
         CLC   JCTCNVRC,=A(JCTCOK) If conversion failed          @R03AB 08720000
         JNE   XCNVOUT               queue for OUTPUT            @R03AB 08730000
         EJECT                                                   @136HE 08770000
*------------------------------------------------------------*   @Z05DB 08780000
*                                                            *   @Z05DB 08790000
*        If the job is NOT to be held, queue it for          * @Z24D005 08796000
*        execution.                                          * @Z24D005 08800000
*                                                            * @Z24D005 08802000
*        If the job is to be held, indicate that a HASP101   * @Z24D005 08808000
*        (job HELD message) is needed.  The message is not   * @Z24D005 08810000
*        issued here because the JQE is still BERT locked    * @Z24D005 08814000
*        and a $AJ command (issued by automation) may fail.  * @Z24D005 08820000
*                                                            * @Z24D005 08822000
*        Depending on the type of hold, either queue the job * @Z24D005 08823000
*        for execution or requeue it for conversion again.   * @Z24D005 08824000
*                                                            *   @Z05DB 08826000
*------------------------------------------------------------*   @Z05DB 08830000
         SPACE 1                                                 @136HE 08840000
         TM    JQEFLAG4,JQE4SPOF   TO BE HELD FOR EXECUTN ...    @220BG 08841000
         JO    XCHLDMS               BRANCH IF YES               @220BG 08842000
         SPACE 1                                               @Z22LDLS 08847000
XCHCHKTH TM    JCTJBOPT,JCTTHOLD+JCTSETUP JOB SPECIFIED        @Z22LDLS 08850000
         JNZ   XCHEHLD              'TYPRUN=HOLD',             @Z23D198 08860000
         SPACE 1                                               @Z23D198 08860200
         TM    JCTFLAG7,JCT7UNTL   Hold due to HOLDUNTL?       @Z23D198 08860800
         JNO   XCQSCHE              No, continue               @Z23D198 08861400
         SPACE 1                                               @Z23D198 08862000
         OI    JQEFLAG1,JQE1HUNT   Hold for HOLDUNTL           @Z23D198 08862600
        $CALL  $DLSADDH,           Queue HOLDUNTL entry to     @Z23D198C08863200
               PARM0=0,PARM1=JQA    DLS PCE                    @Z23D198 08863800
XCHEHLD  OI    JQAFLAG1,JQA1EHLD   Show end user hold          @Z22LDLS 08865000
         EJECT                                                   @Z05DB 08866000
XCHLDMS  OI    JPCESTAT,JPCEHJOB   Ind job held                @Z24D005 08870000
         SPACE 1                                                   @311 08895000
        $QSUSE                     RE-ESTABLISH QUEUE CONTROL           08900000
         SPACE 1                                                 @Z05DB 08900500
         TM    JQEFLAG4,JQE4SPOF   HOLD FOR EXECUTION ...        @220BG 08901000
         JNO   XCHTHLD               No, go set HOLD1          @Z21LCNV 08902000
         NI    JQEFLAG4,FF-JQE4SPOF TURNS OFF HOLD FOR EXECUTN   @220BG 08903000
         J     XCHNHLD             SKIP SETTING JQE              @220BG 08904000
         EJECT                                                   @Z05DB 08905000
XCHTHLD  OI    JQEFLAG1,JQE1HLD1   SET HOLD FLAG IN JQE            @136 08915000
         SPACE 1                                                 @Z05DB 08920000
XCHNHLD $DOGJQE ACTION=CKPT,CBADDR=JQE   Rewrite the JQE       @R04LWLM 08930000
         SPACE 1                                                 @136HE 08940000
         TM    JQEFLAG4,JQE4JCLH   Hold job after conversion?  @Z21LCNV 08960000
         JNO   XCQSCHE              No, go queue for execution @Z21LCNV 08970000
         OI    JQAFLAG1,JQA1JCLH   Remember end user hold      @R04LWLM 08976000
         NI    JQEFLAG4,FF-JQE4JCLH  Clear HOLD flags          @Z21LCNV 08980000
         SPACE 1                                                 @Z05DB 08982000
         LHI   R2,$XEQ             Go requeue job (held)       @Z21LCNV 08990000
         J     XCQPUT4               FOR CONVERSION              @Z05DB 09000000
         EJECT ,                                                 @R03AB 09000500
*------------------------------------------------------------*   @R03AB 09001000
*                                                            *   @R03AB 09001500
*        Indicate job must be converted on a PCE that        *   @R03AB 09002000
*        can wait for resources required by OS CNVT.         *   @R03AB 09002500
*        Queue job to conversion again.                      *   @R03AB 09003000
*                                                            *   @R03AB 09003500
*------------------------------------------------------------*   @R03AB 09003700
         SPACE 1                                                 @R03AB 09003900
XCRQCN   MVC   JCTCNVRC,=A(JCTCNWT)  Force conversion requeue    @R03AB 09004100
         OI    JQEFLAG8,JQE8CNWT   Ensure job will only be       @R03ABC09004300
                                     selected by CNVT PCEs       @R03ABC09004500
                                     that can wait               @R03AB 09004700
         SPACE 1                                               @R10P004 09006500
XCREQCNV LHI   R2,$XEQ             Setup for conversion queue  @Z24D068 09007500
         J     XCQPUT4             Requeue for conversion        @R03AB 09008000
         EJECT ,                                                 @Z11AY 09010000
**************************************************************   @Z11AY 09012000
*                                                            *   @Z11AY 09014000
*        Subtask ended without posting PCE.                  *   @Z11AY 09016000
*        It means that subtask cleanup failed to run when    *   @Z11AY 09018000
*        subtask died.                                       *   @Z11AY 09020000
*        Do some cleanup and fail the job.                   *   @Z11AY 09022000
*                                                            *   @Z11AY 09024000
**************************************************************   @Z11AY 09026000
         SPACE 1                                                 @Z11AY 09028000
XCTCBTRM $QSUSE ,                  Ensure queues are owned     @Z21LCNV 09030000
         SPACE 1                                               @Z21LCNV 09032000
        $DOGJQE ACTION=(FETCH,UPDATE), Reobtain JQA in         @Z21LCNVC09034000
               JQE=JQE                    write mode           @Z21LCNV 09035000
         LR    R5,R0               Get new JQA address         @Z21LCNV 09036000
         ST    R5,PCEJQE           Save in PCE                 @Z21LCNV 09037000
         LAE   R5,0(R5)            Ensure AR5 is zero          @Z21LCNV 09038000
         SPACE 1                                               @Z21LCNV 09039000
         LT    R2,CIPOPAD          Get current PAD             @Z22D064 09040000
         JZ    XCCLNUP3              None, continue              @Z11AY 09042000
         LAM   AR2,AR2,$PSOTOK     Get PAD/PSO ALET            @Z21LCNV 09043000
         XC    CIPOPAD,CIPOPAD     Clear open PAD pointer      @Z22D064 09043500
         L     R1,PADUSE-PAD(,R2)  Reduce                        @Z11AY 09044000
XCCLNPAD LR    R0,R1                 PAD                         @Z11AY 09046000
         AHI   R0,-1                   usage                     @Z11AY 09048000
         CS    R1,R0,PADUSE-PAD(R2)      count                   @Z11AY 09050000
         JNE   XCCLNPAD            Problem, try again            @Z11AY 09052000
         EJECT ,                                               @Z21D144 09054000
*------------------------------------------------------------*   @Z11AY 09056000
*        Return the CAT for the jobclass associated with     *   @Z11AY 09058000
*        the job                                             *   @Z11AY 09060000
*------------------------------------------------------------*   @Z11AY 09062000
         SPACE 1                                                 @Z11AY 09064000
XCCLNUP3 LT    R1,JPCECAT          Get the CAT address         @Z21LCNV 09065000
         JZ    XCCLNUP4              None, skip free           @Z21LCNV 09066000
         XC    JPCECAT,JPCECAT     Indicate CAT freed          @Z21LCNV 09066600
         SPACE 1                                               @Z21LCNV 09067200
        $DOGCAT ACTION=RETURN,CAT=(R1)  Return the CAT         @Z21LCLS 09068000
         EJECT ,                                               @Z21LCNV 09070000
*------------------------------------------------------------*   @Z11AY 09072000
*        Issue message that conversion for job failed.       *   @Z11AY 09074000
*------------------------------------------------------------*   @Z11AY 09076000
         SPACE 1                                                 @Z11AY 09078000
XCCLNUP4 MVI   CIPJRETN,CIPJABND   Reason - subtask ABEND      @Z21LCNV 09080000
         TM    CIPFLG1,CIP1CRTM    Was a CALLRTM issued?       @Z21D143 09080200
         JNO   XCCLNRTM              No, leave reason code     @Z21D143 09080400
         MVI   CIPJRETN,CIPJBCAN     Yes, ind job was caneled  @Z21D143 09080600
         SPACE 1                                               @Z21D143 09080800
XCCLNRTM MVI   CIPSUBOP,CIPSUBNO   Not JOBGROUP related        @Z22D093 09081000
         $BLDMSG MSGID=305,        Issue HASP305 message       @Z22D093C09081500
               SEPAR=NULL,JOB=YES,TYPE=CMB                     @Z22D093 09082000
         EJECT ,                                               @Z21LCNV 09084000
*------------------------------------------------------------*   @Z11AY 09086000
*        Dispose of the subtask corpse.                      *   @Z11AY 09088000
*------------------------------------------------------------*   @Z11AY 09090000
         SPACE 1                                                 @Z11AY 09092000
         USING DTE,R8              Est DTE addressability      @Z21LCNV 09092200
         SPACE 1                                               @Z21LCNV 09092400
         LT    R8,JPCEDTE          Pick up HOSCNVT DTE address @Z21LCNV 09092600
         JZ    XCCLNDTE              None, nothing to clean    @Z21LCNV 09092800
         LAE   R8,0(R8)            Ensure AR8 is zero          @Z21LCNV 09093000
         SPACE 1                                               @Z21LCNV 09093200
        $WAIT  WORK,XECB=DTETXECB  $WAIT for subtask TERM ECB  @Z21D144C09093600
                                      or other post            @Z21D144 09094000
         SPACE 1                                               @Z21D144 09095000
         XC    JPCEDTE,JPCEDTE     Clear DTE ptr                 @Z11AY 09096000
         XC    CIPDTEA,CIPDTEA       in PCE and DTEPARM        @Z21LCNV 09097000
         XC    CIPASID,CIPASID     Clear ASID and                @Z22BR 09097200
         XC    CIPTTOKN,CIPTTOKN     token address               @Z22BR 09097500
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=NO               @Z11AYC09098000
                                   Detach ABENDed sub-task       @Z11AY 09100000
         SPACE 1                                                 @Z11AY 09104000
XCCLNDTE LHI   R0,JQXMXCAN         Assume job was canceled     @Z21D143 09104800
         TM    CIPFLG1,CIP1CRTM    Was a CALLRTM issued?       @Z21D143 09105600
         JO    XCCLNCAN              Yes, assumed wisely       @Z21D143 09106400
         LHI   R0,JQXMXCNV           No, set converter error   @Z21D143 09107200
         MVC   JCTCNVRC,=A(JCTCABND)  Error during conversion  @Z21D143 09108000
XCCLNCAN STC   R0,JQXMXIND         Save error code             @Z21D143 09110000
         XC    JQXMAXCC,JQXMAXCC   Clear max CC                @Z21LCOR 09112000
         OI    JQXFLAG2,JQX2MAXR   Indicate JQXMAXRC set       @Z21LCOR 09114000
         J     XCNVOUT             Queue for OUTPUT            @Z22D093 09115000
         SPACE 1                                               @Z21LCNV 09116000
         DROP  R8                  Drop DTE                    @Z21LCNV 09118000
XCMSG305 STC   R2,CIPJRETN         Set failure code for msg    @Z22D093 09118500
        $BLDMSG MSGID=305,         Issue HASP305 message       @Z22D093C09119000
               SEPAR=NULL,JOB=YES,TYPE=CMB                     @Z22D093 09119500
         EJECT ,                                               @Z21LCNV 09120000
*********************************************************************** 09160000
*                                                                     * 09170000
*        QUEUE JOB FOR OUTPUT                                         * 09180000
*                                                                     * 09190000
*********************************************************************** 09200000
         SPACE 1                                                   @130 09210000
XCNVOUT $QSUSE                     OBTAIN ACCESS TO CKPT DATA      @130 09220000
         SPACE 1                                                   @311 09225000
         MVI   JQEPRIO,FF          SET EXPRESS PRIORITY            @130 09230000
         NI    JQEFLAG1,FF-JQE1HLD1-JQE1HUNT                   @Z22LDLSC09240000
                                   Reset hold flags            @Z22LDLS 09240500
         SPACE 1                                               @Z12LMQT 09241000
         CLC   JCTCNVRC,$ZEROS     Job fail conversion?          @R03BC 09251000
         JE    XCNVBY               No, queue job for output     @R03BC 09252000
         OI    JQEFLAG8,JQE8BOUT   Use abnormal outdisp          @R03BC 09253000
         TM    JQXFLAG2,JQX2MAXR   Was JQXMAXRC set?           @Z21D143 09253100
         JO    XCNETCK               Yes, do not reset         @Z23D249 09253200
         XC    JQXMAXCC,JQXMAXCC     Clear completion code     @Z21LCOR 09253500
         MVI   JQXMXIND,JQXMXCNV     Default to converter err  @Z21LCOR 09254000
         OI    JQXFLAG2,JQX2MAXR     Indicate JQXMAXRC set     @Z21LCOR 09254500
         SPACE 1                                                   @311 09255000
         CLC   JCTCNVRC,=A(JCTCJCL)  JCL error?                @Z11LSSF 09255200
         JNE   XCNVOCK1               No, continue             @Z11LSSF 09255400
         MVI   JQXMXIND,JQXMXJCL     Indicate JCL error        @Z11LSSF 09255800
         J     XCNETCK               Move to OUTPUT            @Z23D249 09256000
         SPACE 1                                               @Z11LSSF 09256200
XCNVOCK1 CLC   JCTCNVRC,=A(JCTCABND) Converter abend?          @Z11LSSF 09256400
         JNE   XCNVOCK2               No, continue             @Z11LSSF 09256600
         MVI   JQXMXIND,JQXMXCAB     Indicate converter abend  @Z11LSSF 09257000
         J     XCNETCK               Move to OUTPUT            @Z23D249 09257200
         SPACE 1                                               @Z11LSSF 09257600
XCNVOCK2 CLC   JCTCNVRC,=A(JCTCSECF) Security failure?         @Z11LSSF 09258000
         JNE   XCNVBY                 No, continue             @Z11LSSF 09258400
         MVI   JQXMXIND,JQXMXSEC     Indicate security error   @Z11LSSF 09258800
         SPACE 1                                               @Z23D249 09259200
*------------------------------------------------------------* @Z23D249 09259600
*        So MAXRC is set - If job belongs to a DJC //*NET    * @Z23D249 09260000
*        - then move job MAXRC to jobs ZJI. This allows the  * @Z23D249 09260400
*        job to be resubmited with ABCMP.                    * @Z23D249 09260800
*------------------------------------------------------------* @Z23D249 09261200
         SPACE 1                                               @Z23D249 09261600
XCNETCK  TM    JQEFLAGA,JQEANET    If not a //*NET job         @Z23D249 09262000
         JNO   XCNVBY                then queue for output     @Z23D249 09262400
         SPACE 1                                               @Z23D249 09262800
        $CALL  SETZJIMA,PARM1=JQA  Process associated          @Z23D249C09263200
                                     //*NET ZJI.               @Z23D249 09263600
         SPACE 1                                               @Z11LSSF 09264000
XCNVBY   LHI   R2,$OUTPUT          Set to go to OUTPUT queue   @Z21LCNV 09264400
         TM    JCTJOBFL,JCTTSUJB+JCTSTCJB Logon/Started task?  @Z21D144 09265000
         JZ    XCQMOD1               No, go queue to output    @Z21D144 09270000
         SPACE 1                                               @Z21D144 09272000
         LHI   R2,$XEQ8CHR         Set as 8 character and QMOD @Z21D144 09274000
         NILL  R2,$XEQCLAS          determines proper action   @Z21D144 09276000
         EJECT                                                     @130 09276200
**************************************************************   @R01AX 09276400
*                                                            *   @R01AX 09276600
*        If the STC/TSU has been canceled by the operator    *   @R01AX 09276800
*        with purge option ($Cs/t,P), wake up XEQ PCE to     * @Z12LMQT 09277000
*        make sure any task waiting on this STC/TSU (i.e     *   @R01AX 09277200
*        job select) is posted for clean up.  Then requeue   *   @Z02BU 09277400
*        this JQE for PURGE.  Note that when XEQ wakes up,   *   @Z02BU 09277600
*        the JQE will also be queued to PURGE, if found.     *   @Z02BU 09277800
*                                                            *   @R01AX 09278000
**************************************************************   @R01AX 09278200
         SPACE 1                                                 @R01AX 09278400
XCQOCAN  TM    JQEFLAG1,JQE1PURG   STC/TSU is to be purged?      @R01AX 09278600
         JZ    XCQPUT1              No, queue it to execute      @R01AX 09278800
         SPACE 1                                               @Z12LMQT 09279000
         XC    JQXMAXCC,JQXMAXCC     Clear completion code     @Z11LSSF 09279200
         MVI   JQXMXIND,JQXMXCAN     Indicate cancelled        @Z11LSSF 09279400
         OI    JQXFLAG2,JQX2MAXR     Indicate JQXMAXRC set     @Z21LCOR 09279600
         SPACE 1                                               @Z11LSSF 09279800
        $POSTXEQ ,                 Post XEQ to process SJB     @Z21LCNV 09280000
         SPACE 1                                               @Z21LCNV 09280200
         LHI   R2,$PURGE           Set to go to PURGE queue    @Z21LCNV 09280400
         EJECT ,                                               @Z21LCNV 09280600
*------------------------------------------------------------* @Z21LCNV 09280800
*        Queue job to requested queue (using $QMOD) and      * @Z21LCNV 09281000
*        checkpoint the JCT to its new SPOOL location        * @Z21LCNV 09281200
*------------------------------------------------------------* @Z21LCNV 09281400
         SPACE 1                                               @Z21LCNV 09281600
XCQMOD1  LTR   R10,R10             Is there a JCT?             @Z21LCNV 09281800
         JZ    XCQPUT                No, skip write            @Z21LCNV 09282000
        $CBIO  TYPE=WRITE,BUFAD=JCT,MQTR=JCTCURTK,             @Z21LCNVC09282200
               VERIFY=JCT,WAIT=YES,  Write out this JCT        @Z21LCNVC09282400
               ERRET=XCHKJCT                                   @Z21LCNV 09282600
         EJECT ,                                               @Z21LCNV 09282800
*------------------------------------------------------------* @Z21LCNV 09283000
*        Set pointer in JQA to point to current JCT          * @Z21LCNV 09283200
*------------------------------------------------------------* @Z21LCNV 09283400
         SPACE 1                                               @Z21LCNV 09283600
        $QSUSE ,                   Ensure queues owned         @Z21LCNV 09283800
         SPACE 1                                               @Z21LCNV 09284000
        $MQTRCNV MQTR=JCTCURTK    Convert JCTCURTK to MTTR.    @Z21LCNVC09284200
                                     MTTR is returned in R0.   @Z21LCNV 09284400
         SPACE 1                                               @Z21LCNV 09284600
         ST    R0,JQETRAK          Set new JCT track address   @Z21LCNVC09284800
                                     (MTTR).                   @Z21LCNV 09285000
         SPACE 1                                               @Z21LCNV 09285200
*------------------------------------------------------------* @Z21LCNV 09285400
*        Queue job to requested queue                        * @Z21LCNV 09285600
*------------------------------------------------------------* @Z21LCNV 09285800
         SPACE 1                                               @Z21LCNV 09286000
         NI    JQXFLAG2,FF-JQX2CKLG No logging job race        @Z24D068C09286200
                                    conditions at this time    @Z24D068 09286400
         TM    JQXFLAG3,JQX3JBGR   If not a Job Group logging  @Z24D057 09286600
         JNO   XCQMOD2              job with ZOD then          @Z24D057C09286800
                                     just continue ...         @Z24D057 09287000
         CHI   R2,$OUTPUT          If not headed to output q - @Z23LEC2 09287200
         JNE   XCQMOD2              continue ...               @Z23LEC2 09287400
         SPACE 1                                               @Z23LEC2 09287600
*------------------------------------------------------------* @Z24D057 09287800
*        Example - job group passed input processing - so    * @Z24D057 09288000
*        that means a ZOD does exist. Converter found error  * @Z24D057 09288200
*        on OUTPUT card -- get rid of ZOD so jobs will       * @Z24D057 09288400
*        not be registered to it. We also conserve on ZOD    * @Z24D057 09288600
*        usage by doing so.                                  * @Z24D057 09288800
*------------------------------------------------------------* @Z24D057 09289000
         SPACE 1                                               @Z24D057 09289200
        $ARMODE OFF                Back to primary mode        @Z24D057 09289400
         SPACE 1                                               @Z24D057 09289600
        $JZDN  OPERATION=DELETE_ZOD, Delete the ZOD associated @Z24D057C09289800
               JOBPTR=JQA             with the dependency      @Z24D057C09290000
                                      network                  @Z24D057 09290200
         XC    JQXWNAME,JQXWNAME   Zap logging job number      @Z24D068 09290400
         SPACE 1                                               @Z24D057 09290600
         NI    JQXFLAG3,FF-JQX3JBGR  No ZOD                    @Z24D057 09290800
         XC    JQXZJCIX,JQXZJCIX   Zap ZOD index               @Z24D067 09291000
        $ARMODE ON                 Return to AR mode           @Z24D057 09291200
         SPACE 1                                               @Z23LEC2 09291400
XCQMOD2 $QMOD  JQE,(R2)            Queue and free JQA          @Z23LEC2 09293200
         SPACE 1                                                 @R01AX 09295600
         J     XCRET               Go finish up                  @R01AX 09296000
         EJECT                                                   @R01AX 09296400
*********************************************************************** 09296800
*                                                                     * 09300000
*        Q U E U E   J O B   F O R   E X E C U T I O N                * 09310000
*                                                                     * 09320000
*        XCQPUT1 - Entry path for STC/TSU type jobs              @R03AB 09322000
*        XCQSCHE - Entry path for batch jobs. Note if this is  @Z23LEC2 09324000
*                  a Job Group logging job then queue to the   @Z23LEC2 09325000
*                  SETUP queue.                                @Z23LEC2 09326000
*********************************************************************** 09330000
         SPACE 1                                                        09340000
XCQPUT1  TM    JPCEXRSP,X044CNVQ   Exit 44 request req to cnvs   @R03AB 09341000
         JO    XCRQCN               Yes, go requeue TSU/STC      @R03AB 09342000
         CLC   JCTCNVRC,=A(JCTCNWT)  Should job be requeued to   @R03ABC09343000
                                       CNVT PCE that can wait?   @R03AB 09344000
         JE    XCRQCN                 Yes, go queue TSU/STC      @R03AB 09345000
         SPACE 1                                                 @R03AB 09346000
         NI    JQEFLAG2,FF-JQE2IND   RESET IND MODE INDICATOR    @R03AB 09350000
         J     XCQPUT3A            Go queue job                  @R08AO 09370000
         SPACE 1                                                        09400000
XCQSCHE  TM    JQXFLAG3,JQX3JBGR   If Job Group logging job    @Z23LEC2 09442400
         JO    XCQPUT4              then handle                @Z23LEC2 09442600
         SPACE 1                                               @Z23LEC2 09442800
         CLC   JCTWOSCN,$ZEROS     Sucsessful classify?        @Z23LEC2 09443000
         JE    XCQPUTNE            Convert again later           @R07BX 09443200
        SPACE  1                                                 @R07BX 09444000
        $CALL  $SCHEMSK,           SCHENV availability mask    @R04LWLMC09444200
               PARM1=JQE,          Address of JQE              @R04LWLMC09444400
               PARM0=0,            Check all members           @R04LWLMC09444600
               OKRET=XCQPUT3A      Normal processing if          @R07BXC09444800
                                     SCHENV been processed       @R07BX 09445000
         SPACE 1                                               @R04LWLM 09445200
XCQPUTNE LHI   R2,$XEQ             Convert job                 @Z21LCNV 09445400
         J     XCQPUT4               again later               @R04LWLM 09445600
         EJECT                                                 @R04P596 09445800
************************************************************** @Z21LCNV 09446000
*                                                            * @Z21LCNV 09446200
*        Place job on execution queue                        * @Z21LCNV 09446400
*                                                            * @Z21LCNV 09446600
************************************************************** @Z21LCNV 09446800
         SPACE 1                                               @Z21LCNV 09447000
XCQPUT3A LHI   R2,$XEQ8CHR         Set as 8 character and QMOD @Z21LCNV 09447200
         NILL  R2,$XEQCLAS          determines proper action   @Z21LCNV 09447400
         SPACE 1                                               @Z21LCNV 09447600
*------------------------------------------------------------* @Z21LCNV 09447800
*        Queue job to requested queue (using $QPUT or $QMOD) * @Z23LEC2 09448000
*        and checkpoint the JCT to its new SPOOL location    * @Z23LEC2 09448200
*------------------------------------------------------------* @Z21LCNV 09448400
         SPACE 1                                               @Z21LCNV 09448600
XCQPUT4  LTR   R10,R10             Is there a JCT?             @Z21LCNV 09448800
         JNZ   XCQPUT5               Yes - then write          @Z23LEC2 09449000
         SPACE 1                                               @Z23LEC2 09449200
         TM    JQXFLAG3,JQX3JBGR   If Job Group logging        @Z23LEC2 09449400
         JO    XCQPUT7              queue to SETUP             @Z23LEC2 09449600
         J     XCQPUT              Otherwise QPUT              @Z23LEC2 09449800
         SPACE 1                                               @Z23LEC2 09450000
XCQPUT5 $CBIO  TYPE=WRITE,BUFAD=JCT,MQTR=JCTCURTK,             @Z23LEC2C09450200
               VERIFY=JCT,WAIT=YES,  Write out this JCT        @Z21LCNVC09450400
               ERRET=XCHKJCT                                   @Z23LEC2 09450600
         EJECT ,                                               @Z21LCNV 09450800
*------------------------------------------------------------* @Z21LCNV 09451000
*        Set pointer in JQA to point to current JCT          * @Z21LCNV 09451200
*------------------------------------------------------------* @Z21LCNV 09451400
         SPACE 1                                               @Z21LCNV 09451600
        $QSUSE ,                   Ensure queues owned         @Z21LCNV 09451800
         SPACE 1                                               @Z21LCNV 09452000
        $MQTRCNV MQTR=JCTCURTK    Convert JCTCURTK to MTTR.    @Z21LCNVC09452200
                                     MTTR is returned in R0.   @Z21LCNV 09452400
         SPACE 1                                               @Z21LCNV 09452600
         ST    R0,JQETRAK          Set new JCT track address   @Z21LCNVC09452800
                                     (MTTR).                   @Z21LCNV 09453000
         TM    JQXFLAG3,JQX3JBGR   If not Job Group logging    @Z23LEC2 09453200
         JNO   XCQPUT9              job then continue ...      @Z23LEC2 09453400
         SPACE 1                                               @Z23LEC2 09453600
XCQPUT7  LHI   R2,$SETUP           Go QMOD logging job to      @Z23LEC2 09453800
         J     XCRQMOD              SETUP queue                @Z23LEC2 09454000
         EJECT ,                                               @Z22LCKP 09454200
************************************************************** @Z22LCKP 09454400
*                                                            * @Z22LCKP 09454600
*        Check if we need to build a DJB for this job.  Skip * @Z22LCKP 09454900
*        this job if it is being canceled.                   * @Z22LCKP 09455100
*                                                            * @Z22LCKP 09455300
************************************************************** @Z22LCKP 09455500
         SPACE 1                                                        09455700
XCQPUT9  CHI   R2,$XEQ             Queue to conversion?        @Z23LEC2 09455900
         JE    XCQPUT                Yes, skip duplicate check          09456100
         TMLL  R2,$XEQ             Non-execution queue?                 09456300
         JNO   XCQPUT                Yes, skip duplicate check          09456500
         TM    JQEFLAG3,JQE3JOB    Is this an STC/TSU?             @130 09456700
         JNZ   XCQPUT                Yes, skip duplicate check   @134CV 09456900
         TM    JQAFLAG2,JQA2XDUP   Exempt from dup check?      @S315873 09456960
         JO    XCQPUT                Yes, skip duplicate check @S315873 09457020
         TM    JQEFLAG1,JQE1PURG+JQE1OCAN  Job being canceled? @Z22LCKP 09457100
         JNZ   XCQPUT                Yes, skip duplicate check @Z22LCKP 09457300
        $DOGJQE ACTION=GETJQEADDR,CBADDR=JQA  Get real JQE     @Z22LCKP 09457500
         TM    JQEFLAG1-JQE(R1),JQE1PURG+JQE1OCAN  Check real  @Z22LCKP 09457700
         JNZ   XCQPUT                Skip if being canceled    @Z22LCKP 09457900
         EJECT ,                                               @Z21LCNV 09458100
*------------------------------------------------------------* @R04LWLM 09458300
*        For WLM sampling, we need to figure out whether the * @R04LWLM 09458500
*        job "might" eventually be held for duplicate.  So,  * @R04LWLM 09458700
*        we need to scan ALL of the execution class queues   * @R04LWLM 09458900
*        to see if there is already a job there with the     * @R04LWLM 09459100
*        same name.                                          * @R04LWLM 09459300
*                                                            * @Z21LCNV 09459500
*        NOTE:  THERE CAN BE NO $WAITS BETWEEN HERE AND THE  * @Z21LCNV 09459700
*               $QMOD                                        * @Z21LCNV 09459900
*                                                            * @Z21LCNV 09460100
*------------------------------------------------------------* @R04LWLM 09460300
         SPACE 1                                               @R04LWLM 09460500
         USING CAT,R2              CAT addressability          @Z21LCNV 09460700
Q        USING JQE,R4              Queued JQE addressability     @Z12AJ 09461100
         SPACE 1                                               @R04LWLM 09462000
         LAE   R2,0                Initially no CAT            @Z21LCNV 09464700
         SPACE 1                                                 @R07BQ 09465600
XCQPUTCL $DOGCAT ACTION=(FETCHNEXT,READ),  Loop through CATs   @R04LWLMC09466500
               CAT=CAT,                                        @R04LWLMC09467400
               ERRET=XCQPUT4A                                  @R04LWLM 09468300
         LAE   R2,0(R1)            Copy CAT address            @Z21LCNV 09469200
         TM    CATJOBFL,JCTTSUJB+JCTSTCJB  TSU or STC?         @R04LWLM 09470100
         JNZ   XCQPUTCL             Yes, loop for next class   @R04LWLM 09471000
         EJECT ,                                               @Z08LWLM 09471900
        $QJQE  CAT=CAT,            Loop through                @R04LWLMC09472800
               REG=R4,              JQEs for current class     @R04LWLMC09473700
               MODE=REAL,                                        @R07DBC09474600
               NOMORE=XCQPUTCL,    Get next CAT                @R04LWLMC09475500
               LOOP=XCQPUTJQ                                     @R07DB 09476400
         CLC   JQEJNAME,Q.JQEJNAME Job names match?            @Z08LWLM 09477300
         JNE   XCQPUTJQ              No, loop                  @Z08LWLM 09478200
         EJECT ,                                                 @Z12AJ 09479100
**************************************************************   @Z12AJ 09480000
*                                                            *   @Z12AJ 09480900
*        Our new job is a duplicate.  We need to ensure      *   @Z12AJ 09481800
*        that the queued job for which we found a name       *   @Z12AJ 09482700
*        match is already in a DJB.                          *   @Z12AJ 09483600
*                                                            *   @Z12AJ 09484500
*        We need to ensure that the already queued job is    *   @Z12AJ 09485400
*        added to the DJB before allowing the current job    *   @Z12AJ 09486300
*        to become eligible to be selected (which happens    *   @Z12AJ 09487200
*        below when the $QPUT is executed), otherwise both   *   @Z12AJ 09488100
*        jobs could be selected for execution and run at     *   @Z12AJ 09489000
*        the same time.  Why?  Until both jobs are members   *   @Z12AJ 09489900
*        of a DJB, QGET will not be aware of their           *   @Z12AJ 09490800
*        relationship.                                       *   @Z12AJ 09491700
*                                                            *   @Z12AJ 09492600
**************************************************************   @Z12AJ 09493500
         SPACE 1                                                 @Z12AJ 09494400
        $DOGJQE ACTION=GETJQXADDR, Fetch the JQX                 @Z12AJC09495300
               CBADDR=Q.JQE                                      @Z12AJ 09496200
         SPACE 1                                                 @Z12AJ 09497100
         CLC   JQXDUP-JQX(,R1),$ZEROS  Br if queued job is       @Z12AJ 09498000
         JNE   XCQDUPUS                  in a DJB already        @Z12AJ 09498900
         SPACE 1                                                 @Z12AJ 09499800
Q        USING JQA,R4              JQA addressability            @Z12AJ 09500700
         SPACE 1                                                 @Z12AJ 09501600
        $DOGJQE ACTION=(FETCH,UPDATE),  Get JQA for queued job   @Z12AJC09502500
               JQE=Q.JQE,                                        @Z12AJC09503400
               WAIT=YES,           Don't move on 'til obtained   @Z12AJC09504300
               ERRET=XCQDUPUS      Skip adding if disappeared    @Z12AJ 09505200
         SPACE 1                                                 @Z12AJ 09506100
         LR    R4,R0               Set address of JQA            @Z12AJ 09507000
         LAE   R4,0(R4)            Ensure AR4 is zero          @Z21LCNV 09507200
         LGHI  R1,0                Ensure no CAT address         @Z12AJ 09507900
         SPACE 1                                               @Z08LWLM 09508800
        $CALL  DUPJOB,             Add to DJB for this name      @Z12AJC09509700
               PARM0=0,            0 means "add"                 @Z12AJC09510600
               PARM1=Q.JQE         Address of JQA                @Z12AJ 09511500
         SPACE 1                                                 @Z12AJ 09512400
        $DOGJQE ACTION=RETURN,     Release the JQA               @Z12AJC09513300
               CBADDR=Q.JQE                                      @Z12AJ 09514200
         EJECT ,                                                 @Z12AJ 09515100
XCQDUPUS LGHI  R1,0                Ensure no CAT address         @Z12AJ 09516000
         SPACE 1                                                 @Z09BF 09516900
        $CALL  DUPJOB,             Add to DJB for this name    @Z08LWLMC09517800
               PARM0=0,            0 means "add"               @Z08LWLMC09518700
               PARM1=JQE           Address of JQA              @Z08LWLM 09519600
         SPACE 2                                                 @Z12AJ 09520500
        $DOGCAT ACTION=RETURN,CAT=CAT      Return the CAT      @R04LWLM 09527700
         SPACE 1                                               @R04LWLM 09527900
         DROP  R2,Q                Release CAT, JQA            @Z21LCNV 09528100
         SPACE 1                                                        09528300
XCQPUT4A LHI   R2,$XEQ8CHR         Set as 8 character and QMOD @Z21LCNV 09535000
         NILL  R2,$XEQCLAS          determines proper action   @Z21LCNV 09540000
         EJECT ,                                                        09542000
*------------------------------------------------------------* @Z21LCNV 09544000
*        Queue job to requested queue                        * @Z21LCNV 09546000
*------------------------------------------------------------* @Z21LCNV 09548000
         SPACE 1                                               @Z21LCNV 09550000
XCQPUT  $QPUT  JQA,(R2)            Queue job for next phase    @Z21LCNV 09552000
         SPACE 1                                               @Z23LEC2 09555000
         J     XCRET               Continue                    @Z23LEC2 09558000
         SPACE 1                                               @Z23LEC2 09561000
XCRQMOD $QMOD  JQA,(R2)            Queue logging job to        @Z23LEC2C09564000
                                    SETUP queue                @Z23LEC2 09567000
         EJECT                                                   @420DJ 09570000
*********************************************************************** 09580000
*                                                                     * 09590000
*        J O B   R E - Q U E U E D   - -   T E R M I N A T E          * 09600000
*                                                                     * 09610000
*********************************************************************** 09620000
         SPACE 1                                                        09630000
*------------------------------------------------------------* @Z24D005 09630400
*        The HASP101 message is issued here so that if       * @Z24D005 09631200
*        automation wants to release the job upon seeing     * @Z24D005 09632000
*        this message, a $AJ will not encounter a locked     * @Z24D005 09632800
*        JQE (the command will work).                        * @Z24D005 09633600
*------------------------------------------------------------* @Z24D005 09634400
         SPACE 1                                               @Z24D005 09635200
XCRET    TM    JPCESTAT,JPCEHJOB   Was job held?               @Z24D005 09636000
         JNO   XCRET2                No, just go dormant       @Z24D005 09636800
         MVC   PCEJQE,JPCJQEA      Set real JQE address        @Z24D005 09637600
        $WTO   XHELDMSG,L'XHELDMSG,    Issue HASP101 job       @Z24D005C09638400
               JOB=YES,ROUTE=$LOG+$MAIN,  held message         @Z24D005C09639200
               CLASS=$NORMAL,PRI=$ST                           @Z24D005 09640000
         SPACE 1                                               @Z24D005 09640800
XCRET2   MVHI  PCEJQE,0            Clear related JQE           @Z24D005 09641600
         MVHI  JPCJQEA,0             in both PCE fields        @Z24D005 09642400
         SPACE 1                                               @Z24D005 09643200
        $DORMANT ,                 Show processor inactive     @Z24D005 09644000
         SPACE 1                                                   @311 09645000
        $ARMODE OFF                Back to primary mode        @Z21LCNV 09646000
         J     XCJGET              THEN BR TO GET ANOTHER JOB           09650000
         SPACE 1                                                   @311 09660000
CNVTDATA LOCTR ,                   Place in data area          @R10LADR 09665000
XHELDMSG $MSG  101,'HELD'          'JOB HELD' MESSAGE                   09670000
HASPCNVT LOCTR ,                   Back to main code           @R10LADR 09680000
         EJECT                                                          09900000
*********************************************************************** 09910000
*                                                                     * 09920000
*        E R R O R   R E A D I N G   A   C O N T R O L   B L O C K    * 09930000
*                                                                     * 09940000
*********************************************************************** 09950000
         SPACE 1                                                   @311 09952000
XCHKJCT $DISTERR BUFFER=JCT,       JCT write error             @Z21LCNVC09954000
               MQTR=JCTCURTK,      MTTR of JCT                 @Z21LCNVC09956000
               JOB=JQA             Addr of JQE                 @Z21LCNV 09958000
         SPACE 1                                               @Z21LCNV 09960000
         LHI   R10,0               Indicate no JCT             @Z21LCNV 09962000
         LHI   R2,CIPJWIOE         Indicate write I/O errror   @Z21LCNV 09964000
         J     XCQUEPUR            Go purge job                @Z21LCNV 09966000
         SPACE 1                                               @Z21LCNV 09968000
XREADJCT $DISTERR JOB=JQA,         JCT READ error              @Z21LCNVC09971000
               MQTR=JPCEJCTK       MTTR of JCT                 @Z21LCNV 09972000
         SPACE 1                                               @Z21LCNV 09973000
         LHI   R10,0               Indicate no JCT             @Z21LCNV 09974000
         LHI   R2,CIPJRIOE         Indicate read I/O errror    @Z21LCNV 09974800
         J     XCQUEPUR            Go purge job                @Z21LCNV 09975600
         SPACE 1                                               @Z21LCNV 09976000
XCQPUR   LHI   R2,CIPJEXIT         Ind exit requested purge    @Z21LCNV 10066500
         SPACE 1                                               @420D007 10067000
XCQUEPUR STC   R2,CIPJRETN         Set failure code for msg    @Z21LCNV 10067400
        $BLDMSG MSGID=305,         Issue HASP305 message       @Z21LCNVC10068000
               SEPAR=NULL,JOB=YES,TYPE=CMB                     @Z21LCNV 10068600
         SPACE 1                                               @Z21LCNV 10069200
        $QSUSE ,                   Request access to ckpt data @Z21LCNV 10070000
         SPACE 1                                                   @311 10075000
         LHI   R2,$PURGE           Indicate PURGE queue        @Z21LCNV 10080000
         TM    JQEFLAG3,JQE3JOB    A BATCH JOB...                  @130 10090000
         JZ    XCQPUT4             BR. IF YES TO PURGE IT        @134CV 10100000
         J     XCQPUT3A            ELSE QUEUE FOR EXECUTION.     @R07EV 10110000
         SPACE 1                                                   @136 10120000
         DROP  R3,R5               Kill addressability         @Z21LCNV 10130000
         SYSSTATE ASCENV=P         Indicate primary mode       @Z21LCNV 10135000
         EJECT                                                     @136 10140000
*********************************************************************** 10160000
*                                                                     * 10170000
*        CONVERTER QGET PARAMETER LIST                                * 10180000
*                                                                     * 10190000
*********************************************************************** 10200000
         SPACE 1                                                   @136 10210000
CNVTDATA LOCTR ,                   Place in data area          @R10LADR 10215000
XCQPRM  $QGET  $XEQ,MF=L           SET QGET PARM LIST STORAGE      @136 10220000
         SPACE 1                                               @TWCLPCN 10225000
*------------------------------------------------------------* @TWCLPCN 10230000
*        Converters drained message                          * @TWCLPCN 10235000
*------------------------------------------------------------* @TWCLPCN 10240000
         SPACE 1                                               @TWCLPCN 10244000
XDRANMSG $MSG  2223,'All converters drained'  MESSAGE          @TWCLPCN 10248000
HASPCNVT LOCTR ,                   Back to main code           @TWCLPCN 10252000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- MAIN TASK EXIT'        10256000
************************************************************** @420P123 10264000
*                                                            * @420P123 10272000
*     XCEXIT44  Set up and call Exit 44                      * @420P123 10280000
*                                                            * @420P123 10288000
*     FUNCTION:                                              * @420P123 10296000
*                                                            * @420P123 10304000
*        This routine is called to obtain storage for        * @420P123 10312000
*        XPL-Exit parameter list, initialize the parameter   * @420P123 10320000
*        list, call the Exit, copy the response byte and     * @420P123 10328000
*        release the storage upon return from the Exit.      * @420P123 10336000
*                                                            * @420P123 10344000
*                                                            * @420P123 10352000
*     LINKAGE:                                               * @420P123 10360000
*                                                            * @420P123 10368000
*        Branched to via $CALL, returned via $RETURN         * @420P123 10376000
*                                                            * @420P123 10384000
*     CALLERS:                                               * @420P123 10392000
*                                                            * @420P123 10400000
*        Main path in CNVT                                   * @420P123 10408000
*                                                            * @420P123 10416000
*     ENVIRONMENT:                                           * @420P123 10424000
*                                                            * @420P123 10432000
*        JES2 main task                                      * @420P123 10440000
*                                                            * @420P123 10448000
*     RECOVERY:                                              * @420P123 10456000
*                                                            * @420P123 10464000
*        None                                                * @420P123 10472000
*                                                            * @420P123 10480000
*     REGISTER USAGE (ENTRY/EXIT):                           * @420P123 10488000
*                                                            * @420P123 10496000
*        REGISTER   Value on Entry         Value on Exit     * @420P123 10504000
*                                                            * @420P123 10512000
*        R0-R1           N/A               Unchanged         * @420P123 10520000
*        R2              N/A               Unchanged         * @420P123 10528000
*        R3-R4           N/A               Unchanged         * @420P123 10536000
*        R5              JQE address       Unchanged         * @420P123 10544000
*        R6-R8           N/A               Unchanged         * @420P123 10552000
*        R9              Reserved                            * @420P123 10560000
*        R10             JCT address       Unchanged         * @420P123 10568000
*        R11             HCT address       Unchanged         * @420P123 10576000
*        R12             N/A               Unchanged         * @420P123 10584000
*        R13             PCE address       Unchanged         * @420P123 10592000
*        R14             Return address    Unchanged         * @420P123 10600000
*        R15             Entry address     Return Code       * @420P123 10608000
*                                                            * @420P123 10616000
*     Parameter list:                                        * @420P123 10624000
*                                                            * @420P123 10632000
*        None                                                * @420P123 10640000
*                                                            * @420P123 10648000
*                                                            * @420P123 10656000
*     Register Usage (INTERNAL):                             * @420P123 10664000
*                                                            * @420P123 10672000
*        Register        Value                               * @420P123 10680000
*                                                            * @420P123 10688000
*        R0-R3           Work register                       * @420P123 10696000
*        R4              XPL address                         * @420P123 10704000
*        R5              JQE address                         * @420P123 10712000
*        R6-R9           Work Register                       * @420P123 10720000
*        R10             JCT address                         * @420P123 10728000
*        R11             HCT address                         * @420P123 10736000
*        R12             CNVT data base address              * @R10LADR 10744000
*        R13             PCE address                         * @420P123 10752000
*        R14             Link/work register                  * @420P123 10760000
*        R15             Link/work register                  * @420P123 10768000
*                                                            * @420P123 10776000
*     RETURN CODES:                                          * @420P123 10784000
*                                                            * @420P123 10792000
*        None                                                * @420P123 10800000
*                                                            * @420P123 10808000
*     OTHER CONSIDERATIONS:                                  * @420P123 10816000
*        None                                                * @420P123 10824000
*                                                            * @420P123 10832000
************************************************************** @420P123 10840000
         SPACE 1                                               @420P123 10848000
         USING XPL,R4              Addressability to XPL       @420P123 10856000
         USING JQE,R5              Addressability to JQE       @420P123 10864000
         SPACE 1                                                 @R03AB 10888000
XCEXIT44 $SAVE  TRACE=YES          Save callers registers        @R03AB 10896000
         SPACE 1                                               @420P123 10904000
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @Z09LCAN 10908000
         EJECT                                                 @420P190 10989000
        $ESTAE RECADDR==A(CXESTAE),     Issue $ESTAE around    @420P123C10998000
               RETRY==A(XCERETRI),       Exit point            @R10LADRC11007000
               BASE=(R12)                                      @R10LADR 11016000
         SPACE 1                                               @420P123 11025000
         LA    R1,(X044SIZE+3)/4   Get words to $GETWORK       @420P123 11034000
         SPACE 2                                               @420P190 11043000
        $GETWORK WORDS=(R1),USE=$XPL,LOC=ANY,WAIT=YES          @420P123C11048000
                                   Obtain storage for the exit @420P123C11056000
                                   parameter list              @420P123 11064000
         SPACE 1                                               @420P123 11072000
         ST    R1,JPCEXPLA         Save address in work area   @420P123 11080000
         LR    R4,R1               Point to XPL                @420P123 11088000
         MVI   XPLLEVEL,XPLVERN    Store the version number    @420P123 11096000
         MVI   XPLXITID,X044XID    Store the exit ID           @420P123 11104000
         MVI   XPLEXLEV,X044VERN   Store the version           @420P123 11112000
         EJECT                                                 @420P190 11114000
*------------------------------------------------------------* @420P190 11116000
*                                                            *   @R03AB 11118000
*        Set indicator and condition bytes according to      *   @R03AB 11120000
*        conversion process results.                         *   @R03AB 11122000
*                                                            *   @R03AB 11124000
*------------------------------------------------------------*   @R03AB 11126000
         SPACE 1                                                 @R03AB 11128000
*------------------------------------------------------------*   @R03AB 11130000
*                                                            *   @R03AB 11132000
*        If 'DUPLICATE LOGON' then                           *   @R03AB 11134000
*           X044IND=X044CPER and X044COND=X044DLGN           *   @R03AB 11136000
*                                                            *   @R03AB 11138000
*        If 'FAKE-OPEN FAILED' then                          *   @R03AB 11140000
*           X044IND=X044CPER and X044COND=X044FKOF           *   @R03AB 11140200
*                                                            *   @R03AB 11140500
*        If 'JCLLIB Not Available' then                      *   @R03AB 11140800
*           X044IND=X044CPER and X044COND=X044CNWT           *   @R03AB 11141100
*                                                            *   @R03AB 11141400
*------------------------------------------------------------* @420P190 11142000
         SPACE 1                                               @420P190 11144000
         MVI   X044IND,X044CPER    Assume processing error       @R03AB 11145000
         TM    JPCESTAT,JPCEDUPL   Is duplicate logon?         @420P190 11146000
         JNO   XCHKFKOP             No, skip next              @420P252 11148000
         OI    X044COND,X044DLGN   Indicate duplicate logon    @420P190 11150000
XCHKFKOP DS    0H                                              @420P190 11152000
         SPACE 1                                               @420P190 11154000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC11154500
               SYSSTATE=SET                                    @Z21LCNV 11155000
         SPACE 1                                               @Z21LCNV 11155500
         USING CIPARM,R7           Est CIPARM addressability   @Z21LCNV 11156000
         SPACE 1                                               @Z21LCNV 11156500
         L     R7,JPCECIP          Get CIPARM address          @Z21LCNV 11157000
         LAM   AR7,AR7,$PSOTOK       and ALET                  @Z21LCNV 11157500
         TM    CIPSTAT,CIPSAOPN    Test for successful         @420P190C11158000
                                          'FAKE-OPEN'          @420P190 11160000
         JO    XCHKCNVR            Branch if successful        @420P252 11162000
         OI    X044COND,X044FKOF   Indicate 'FAKE-OPEN' fail   @420P190 11164000
         SPACE 1                                               @Z21LCNV 11164200
XCHKCNVR CLC   JCTCNVRC,=A(JCTCNWT)  Resource not available?     @Z22EH 11168000
         JNE   XCHKERRS                No, check error so far    @R03AB 11168100
         OI    X044COND,X044CNWT   Indicate resource unavail.    @R03AB 11168200
         SPACE 1                                                 @R03AB 11168300
XCHKERRS TM    X044COND,X044DLGN+X044FKOF+X044CNWT               @R03ABC11168400
                                   Any error recorded so far?    @R03AB 11168500
         JNZ   XCNTXPLI             Yes, continue XPL init       @R03AB 11168600
         EJECT ,                                                 @R03AB 11168700
*------------------------------------------------------------*   @R03AB 11168800
*                                                            *   @R03AB 11168900
*        If Conversion complete successful then              *   @R03AB 11169000
*           X044IND=X044JCLO and X044COND=zero               *   @R03AB 11169100
*                                                            *   @R03AB 11169200
*------------------------------------------------------------*   @R03AB 11169300
         SPACE 1                                               @420P190 11170000
         MVI   X044IND,X044JCLO    Indicate conversion OK      @420P190 11172000
         CLC   JCTCNVRC,=A(JCTCOK) Is conversion OK?           @420P190 11200000
         JE    XCNTXPLI            Br to continue XPL initial. @420P190 11201000
         SPACE 1                                               @420P190 11203000
*------------------------------------------------------------*   @R03AB 11203100
*                                                            *   @R03AB 11203200
*        If JCL error found then                             *   @R03AB 11203300
*           X044IND=X044JCLE and X044COND=zero               *   @R03AB 11203400
*                                                            *   @R03AB 11203500
*------------------------------------------------------------*   @R03AB 11203600
         SPACE 1                                                 @R03AB 11203700
         MVI   X044IND,X044JCLE    Indicate JCL error          @420P190 11204000
         CLC   JCTCNVRC,=A(JCTCJCL)  Is JCL error?             @420P190 11205000
         JE    XCNTXPLI            Br to continue XPL initial. @420P190 11206000
         SPACE 1                                               @420P190 11207000
*------------------------------------------------------------*   @R03AB 11207100
*                                                            *   @R03AB 11207200
*        One of the following processing errors has occured: *   @R03AB 11207300
*          - I/O error on PROCLIB data set (JCTCNVRC=JCTCIO) *   @R03AB 11207400
*          - Security environment error (JCTCNVRC=JCTCSECF)  *   @R03AB 11207500
*          - Unrecoverable error (JCTCNVRC=JCTABND)          *   @R03AB 11207600
*          - GETMAIN failure (JCTCNVRC=JCTGMFAL)             *   @R03AB 11207700
*                                                            *   @R03AB 11207800
*------------------------------------------------------------*   @R03AB 11207900
         SPACE 1                                                 @R03AB 11208000
         MVI   X044IND,X044CPER    Indicate Conversion process @420P190C11209000
                                    Error                      @420P190 11210000
         SPACE 1                                                 @R03AB 11210100
*------------------------------------------------------------*   @R03AB 11210200
*                                                            *   @R03AB 11210300
*        Continue XPL initialization for all conditions.     *   @R03AB 11210400
*                                                            *   @R03AB 11210500
*------------------------------------------------------------*   @R03AB 11210600
         SPACE 1                                                 @R03AB 11210700
XCNTXPLI MVC   XPLSIZE,=AL2(X044SIZE)    Set the XPL size      @420P190 11211000
         LA    R1,JCT              Get JCT address             @420P123 11214000
         ST    R1,X044JCT          Store JCT address           @420P123 11221000
         LA    R1,JQE              Get JQE address             @420P123 11228000
         ST    R1,X044JQE          Store JQE address           @420P190 11240000
         EJECT ,                                                 @Z22EH 11240100
**************************************************************   @Z22EH 11240200
*                                                            *   @Z22EH 11240300
*        For batch jobs, set current job class and SCHENV    *   @Z22EH 11240400
*        into the XPL.                                       *   @Z22EH 11240500
*                                                            *   @Z22EH 11240600
**************************************************************   @Z22EH 11240700
         SPACE 1                                                 @Z22EH 11240800
         TM    JQEFLAG3,JQE3JOB    Is this a batch job?          @Z22EH 11240900
         JNZ   XCNOTBAT              No, skip class/SCHENV       @Z22EH 11241000
         SPACE 1                                                 @Z22EH 11241100
*------------------------------------------------------------*   @Z22EH 11241200
*        Save the 8 character JCT job class (if available).  *   @Z22EH 11241300
*        First ensure 8 and 1 character are the same and if  *   @Z22EH 11241400
*        not, prefer the 1 character field.                  *   @Z22EH 11241500
*------------------------------------------------------------*   @Z22EH 11241600
         SPACE 1                                                 @Z22EH 11241700
        $JCTXGET JCT=JCT,          Get advanced features ext.    @Z22EHC11241800
               TYPE==CL4'IBM',     IBM section                   @Z22EHC11241900
               MOD=JCXADVM,        Modifier                      @Z22EHC11242000
               ERRET=XCCLSJER      Will not fail                 @Z22EH 11242100
         LAE   R2,0(R1)            Set JCTX address              @Z22EH 11242200
         SPACE 1                                                 @Z22EH 11242300
         USING JCTX,R2             Establish JCTX                @Z22EH 11242400
         EJECT ,                                                 @Z22EH 11242500
         CLC   JCTJCLAS,JCXJCLA8   1 and 8 char fields match?    @Z22EH 11242600
         JE    XCCLASOK              Yes, save value             @Z22EH 11242700
         MVC   JCXJCLA8,$BLANKS    Blank out the area            @Z22EH 11242800
         MVC   JCXJCLA8(1),JCTJCLAS  Use one char job class      @Z22EH 11242900
XCCLASOK MVC   JPCEXJCS,JCXJCLA8   Save class from JCT           @Z22EH 11243000
         J     XCCLSJDN                                          @Z22EH 11243100
         SPACE 1                                                 @Z22EH 11243200
         DROP  R2                  Drop JCTX                     @Z22EH 11243300
         SPACE 1                                                 @Z22EH 11243400
XCCLSJER MVC   JPCEXJCS,$BLANKS    Blank out the area            @Z22EH 11243500
         MVC   JPCEXJCS(1),JCTJCLAS  Use one char job class      @Z22EH 11243600
         SPACE 1                                                 @Z22EH 11243700
*------------------------------------------------------------*   @Z22EH 11243800
*        Set current job class into the XPL                  *   @Z22EH 11243900
*------------------------------------------------------------*   @Z22EH 11244000
         SPACE 1                                                 @Z22EH 11244100
XCCLSJDN MVC   X044JCLS,JQXJCLAS   Assume JQX class              @Z22EH 11244200
         SPACE 1                                                 @Z22EH 11244300
         CLC   JQXJCLAS,JPCECLAS   $T'ed while converting        @Z22EH 11244400
         JNE   XCCLSST               Yes, use $T value           @Z22EH 11244500
         MVC   X044JCLS,JPCEXJCS   Use class from JCT            @Z22EH 11244600
         SPACE 1                                                 @Z22EH 11244700
XCCLSST  MVC   JPCEXCLS,X044JCLS   Save original XPL value       @Z22EH 11244800
         EJECT ,                                                 @Z22EH 11244900
*------------------------------------------------------------*   @Z22EH 11245000
*        Set current scheduling environment into the XPL     *   @Z22EH 11245100
*------------------------------------------------------------*   @Z22EH 11245200
         SPACE 1                                                 @Z22EH 11245300
         MVC   X044SCHE,JQASCHE    Start with JQA SCHENV         @Z22EH 11245400
         TM    JQAFLAG2,JQA2TSCH   Operator update SCHENV?       @Z22EH 11245500
         JO    XCSENVST              Yes, honor updated value    @Z22EH 11245600
         MVC   X044SCHE,CIPSCHE    Set current SCHENV            @Z22EH 11245700
         TM    X044SCHE,FF-C' '    Anything specified?           @Z22EH 11245800
         JNZ   XCSENVST              Yes, keep what we have      @Z22EH 11245900
         MVC   X044SCHE,JPCESCHE   Set class default SCHENV      @Z22EH 11246000
         SPACE 1                                                 @Z22EH 11246100
XCSENVST MVC   JPCEXSCH,X044SCHE   Save passed SCHENV            @Z22EH 11246200
         SPACE 1                                                 @Z22EH 11246300
XCNOTBAT $ARMODE OFF,SYSSTATE=SET  Back to primary mode          @Z22EH 11246400
         SPACE 1                                                 @Z22EH 11246500
         DROP  R7                  Drop CIPARM                   @Z22EH 11246600
         EJECT ,                                                 @R03AB 11250000
************************************************************** @420P123 11260000
*                                                            * @420P123 11270000
*     User Exit 44    JCL Converter Main Task Exit           * @420P123 11280000
*                                                            * @420P123 11290000
*     DESCRIPTION:                                           * @420P123 11300000
*                                                            * @420P123 11310000
*        This Exit gives control to installation exit        * @420P123 11320000
*        routines before rewriting the JCT and Allocation    * @420P123 11330000
*        IOT back to the spool. This Exit will allow         * @420P123 11340000
*        modification to JQE and JCT.                        * @420P123 11350000
*                                                            * @420P123 11360000
*                                                            * @420P123 11370000
*     ENVIRONMENT:                                           * @420P123 11380000
*                                                            * @420P123 11390000
*        JES2 main task                                      * @420P123 11400000
*                                                            * @420P123 11410000
*     RECOVERY:                                              * @420P123 11420000
*                                                            * @420P123 11430000
*        There is a $ESTAE recovery in effect around this    * @420P123 11440000
*        exit point.                                         * @420P123 11450000
*                                                            * @420P123 11460000
*     REGISTER USAGE:                                        * @420P123 11470000
*                                                            * @420P123 11480000
*     On call to Exit 44,  the following registers are set:  * @420P123 11490000
*                                                            * @420P123 11500000
*        REGISTER        VALUE                               * @420P123 11510000
*                                                            * @420P123 11520000
*        R0              N/A                                 * @420P123 11530000
*        R1              Address of parameter list (XPL)     * @420P123 11540000
*        R2-R10          N/A                                 * @420P123 11550000
*        R11             Address of HCT                      * @420P123 11560000
*        R12             N/A                                 * @420P123 11570000
*        R13             Address of PCE                      * @420P123 11580000
*        R14             Return Address                      * @420P123 11590000
*        R15             Entry Address                       * @420P123 11600000
*                                                            * @420P123 11610000
*     Parameter list for Exit 44:                            * @420P123 11620000
*                                                            * @420P123 11630000
*        See $XPL macro                                      * @420P123 11640000
*                                                            * @420P123 11650000
*     On return from Exit 44  the following is assumed:      * @420P123 11660000
*                                                            * @420P123 11670000
*        R0-R14          Unchanged                           * @420P123 11680000
*        R15             Return Code (See Below)             * @420P123 11690000
*                                                            * @420P123 11700000
*     RETURN CODES FROM EXIT 44:                             * @420P123 11710000
*                                                            * @420P123 11720000
*        0        -      Continue normal processing          * @420P123 11730000
*        4        -      Continue normal processing. If      * @420P123 11740000
*                        there are additional exit routines  * @420P123 11750000
*                        associated with this exit point,    * @420P123 11760000
*                        should be ignored                   * @420P123 15250000
*                                                            * @420P123 15260000
*     OTHER CONSIDERATIONS:                                  * @420P123 15270000
*                                                            * @420P123 15280000
*        None                                                * @420P123 15290000
*                                                            * @420P123 15310000
************************************************************** @420P123 15320000
         SPACE 1                                               @420P123 15390000
XCXIT44 $EXIT  44,XPL=XPL,JOBMASK=JCTXMASK,TYPE=ENTER          @Z07LTRP 15400000
         SPACE 1                                               @420P123 15410000
         MVC   JPCEXRSP,X044RESP   Copy response in workarea   @R01P010 15414000
         SPACE 1                                                 @Z22EH 15418000
**************************************************************   @Z22EH 15422000
*                                                            *   @Z22EH 15426000
*        Process returned data from the exit                 *   @Z22EH 15426200
*                                                            *   @Z22EH 15426400
**************************************************************   @Z22EH 15426600
         SPACE 1                                                 @Z22EH 15426800
         TM    JQEFLAG3,JQE3JOB    Is this a batch job?          @Z22EH 15427000
         JNZ   XCERETRI              No, skip class/SCHENV       @Z22EH 15427200
         EJECT ,                                                 @Z22EH 15427400
*------------------------------------------------------------*   @Z22EH 15427600
*        Look for and process any job class change           *   @Z22EH 15427800
*------------------------------------------------------------*   @Z22EH 15428000
         SPACE 1                                                 @Z22EH 15428200
         CLC   JPCEXCLS,X044JCLS   XPL class updated?            @Z22EH 15428400
         JE    XCLASCJQ              No, check JQE               @Z22EH 15428600
         MVC   JPCEXCLS,X044JCLS   Save updated class            @Z22EH 15428800
         OI    JPCEFLG1,JPCE1CLS   Ind exit updated class        @Z22EH 15429000
         J     XCLASDN             Done with class               @Z22EH 15429200
         SPACE 1                                                 @Z22EH 15429400
XCLASCJQ CLC   JQXJCLAS,JPCECLAS   $T'ed or exit set in JQE?     @Z22EH 15429600
         JNE   XCLASDN               Yes, use JQE value          @Z22EH 15429800
         SPACE 1                                                 @Z22EH 15430000
        $JCTXGET JCT=JCT,          Get advanced features ext.    @Z22EHC15430200
               TYPE==CL4'IBM',     IBM section                   @Z22EHC15430400
               MOD=JCXADVM,        Modifier                      @Z22EHC15430600
               ERRET=XCLASCJ1      Will not fail                 @Z22EH 15430800
         LR    R2,R1               Set JCTX address              @Z22EH 15431000
         SPACE 1                                                 @Z22EH 15431200
         USING JCTX,R2             Establish JCTX                @Z22EH 15431400
         EJECT ,                                                 @Z22EH 15431600
         CLC   JCXJCLA8,JPCEXJCS   Changed 8 character class?    @Z22EH 15431800
         JE    XCLASCJ1              No, check 1 character       @Z22EH 15432000
         CLC   JCXJCLA8,=CL8'STC'  Was class STC attempted?      @Z22EH 15432200
         JE    XCLJCTBD              Yes, bad class              @Z22EH 15432400
         CLC   JCXJCLA8,=CL8'TSU'  Was class TSU attempted?      @Z22EH 15432600
         JE    XCLJCTBD              Yes, bad class              @Z22EH 15432800
         MVC   JPCEXCLS,JCXJCLA8   Save updated class            @Z22EH 15433000
         OI    JPCEFLG1,JPCE1CLS   Ind exit updated class        @Z22EH 15433200
         J     XCLASDN             Done with class               @Z22EH 15433400
         SPACE 1                                                 @Z22EH 15433600
XCLJCTBD MVC   JCTJCLAS,JPCEXJCS   Restore original              @Z22EH 15433800
         MVC   JCXJCLA8,JPCEXJCS     JCT class values            @Z22EH 15434000
         J     XCLASDN             Done with class               @Z22EH 15434200
         SPACE 1                                                 @Z22EH 15434400
         DROP  R2                  Drop JCTX                     @Z22EH 15434600
         SPACE 1                                                 @Z22EH 15434800
XCLASCJ1 CLC   JCTJCLAS,JPCEXJCS   Change 1 character class?     @Z22EH 15435000
         JE    XCLASDN               No, class not changed       @Z22EH 15435200
         MVC   JPCEXCLS,$BLANKS    Blank out the area            @Z22EH 15435400
         MVC   JPCEXCLS(1),JCTJCLAS  Use one char job class      @Z22EH 15435600
         OI    JPCEFLG1,JPCE1CLS   Ind exit updated class        @Z22EH 15435800
XCLASDN  DS    0H                  Job class done                @Z22EH 15436000
         EJECT ,                                                 @Z22EH 15436200
*------------------------------------------------------------*   @Z22EH 15436400
*        Look for and process any SCHENV change              *   @Z22EH 15436600
*------------------------------------------------------------*   @Z22EH 15436800
         SPACE 1                                                 @Z22EH 15437000
         CLC   JPCEXSCH,X044SCHE   XPL SCHENV updated?           @Z22EH 15437200
         JE    XCSCHCJQ              No, check JQE               @Z22EH 15437400
         MVC   JPCEXSCH,X044SCHE   Save updated SCHENV           @Z22EH 15437600
         OI    JPCEFLG1,JPCE1SCH   Ind exit updated SCHENV       @Z22EH 15437800
         J     XCSCHDN             Done with SCHENV              @Z22EH 15438000
         SPACE 1                                                 @Z22EH 15438200
XCSCHCJQ CLC   JQASCHE,JPCESCHH    Was JQE value set?            @Z22EH 15438400
         JE    XCSCHCJC              No, check JCT               @Z22EH 15438600
         MVC   JPCEXSCH,JQASCHE    Save updated SCHENV           @Z22EH 15438800
         OI    JPCEFLG1,JPCE1SCH   Ind exit updated SCHENV       @Z22EH 15439000
         J     XCSCHDN             Done with SCHENV              @Z22EH 15439200
         SPACE 1                                                 @Z22EH 15439400
XCSCHCJC TM    JQAFLAG2,JQA2TSCH   Operator update SCHENV?       @Z22EH 15439600
         JO    XCSCHDN               Yes, honor updated value    @Z22EH 15439800
         CLC   JCTSCHEN,JPCESCHJ   Value set in JCT?             @Z22EH 15440000
         JE    XCSCHDN               No, exit did not set        @Z22EH 15440200
         MVC   JPCEXSCH,JCTSCHEN   Save updated SCHENV           @Z22EH 15440400
         OI    JPCEFLG1,JPCE1SCH   Ind exit updated SCHENV       @Z22EH 15440600
XCSCHDN  DS    0H                  SCHENV done                   @Z22EH 15441300
         EJECT ,                                                 @Z22EH 15442000
**************************************************************   @Z22EH 15442700
*                                                            *   @Z22EH 15442900
*        Return to caller                                    *   @Z22EH 15443100
*                                                            *   @Z22EH 15443300
**************************************************************   @Z22EH 15443500
         SPACE 1                                                 @Z22EH 15443700
XCERETRI DS    0H                  Retry point                 @420P123 15444000
         SPACE 1                                               @420P123 15450000
         ICM   R4,B'1111',JPCEXPLA Does XPL exist?             @420P123 15452000
         JZ    XCEXRET              No,skip release of storage @420P123 15454000
         XC    JPCEXPLA,JPCEXPLA   Clear the XPL address       @420P123 15456000
         SPACE 1                                               @420P123 15458000
        $RETWORK (R4)              Release $XPL storage        @420P123 15460000
         SPACE 1                                               @420P123 15470000
XCEXRET $ESTAE CANCEL              Cancel $ESTAE environment   @420P123 15480000
         SPACE 1                                               @420P123 15490000
        $RETURN ,                  Return to caller            @420P123 15540000
         SPACE 1                                               @420P123 15550000
         DROP  R4                  Drop XPL addressability     @420P190 15550200
         DROP  R5                  Drop JQE addressability     @420P190 15550400
         DROP  R10                 Drop JCT addressability     @TWCLPCN 15550500
         TITLE 'HASP JCL CONVERSION PROCESSOR -- SETZJIMA - Init ZJI foC15550600
               r NET job that failed in conversion.'           @Z23D249 15550800
************************************************************** @Z23D249 15551000
*                                                            * @Z23D249 15551200
*     SETZJIMA - Init NET job's ZJI for a job that failed    * @Z23D249 15551400
*                during conversion.  This will set up the    * @Z23D249 15551600
*                network for a reubmit later on.             * @Z23D249 15551800
*                                                            * @Z23D249 15552000
*     FUNCTION:                                              * @Z23D249 15552200
*                                                            * @Z23D249 15552400
*        Given a DJC //*NET job, find the corresponding ZJI, * @Z23D249 15552600
*        initialize it with //*NET information, and set the  * @Z23D249 15552800
*        network up for a resubmit of a good version of the  * @Z23D249 15553000
*        job at a later time.                                * @Z23D249 15553200
*                                                            * @Z23D249 15553400
*        We must do this because input processing has        * @Z23D249 15553600
*        already processed the //*NET statement...which      * @Z23D249 15553800
*        creates the internal network infrastrucure.  We     * @Z23D249 15554000
*        then get to a failure in conversion and reach this  * @Z23D249 15554200
*        routine.  The idea is to set the corresponding      * @Z23D249 15554400
*        network job object (ZJI) with the failing job's     * @Z23D249 15554600
*        //*NET statement info because the failing job will  * @Z23D249 15554800
*        never be registered to the network.                 * @Z23D249 15555000
*                                                            * @Z23D249 15555200
*     LINKAGE:                                               * @Z23D249 15555400
*                                                            * @Z23D249 15555600
*        Branched to via $CALL, returned via $RETURN         * @Z23D249 15555800
*                                                            * @Z23D249 15556000
*     CALLERS:                                               * @Z23D249 15556200
*                                                            * @Z23D249 15556400
*        Main path in CNVT                                   * @Z23D249 15556600
*                                                            * @Z23D249 15556800
*     ENVIRONMENT:                                           * @Z23D249 15557000
*                                                            * @Z23D249 15557200
*        JES2 main task                                      * @Z23D249 15557400
*                                                            * @Z23D249 15557600
*     RECOVERY:                                              * @Z23D249 15557800
*                                                            * @Z23D249 15558000
*        None                                                * @Z23D249 15558200
*                                                            * @Z23D249 15558400
*     REGISTER USAGE (ENTRY/EXIT):                           * @Z23D249 15558600
*                                                            * @Z23D249 15558800
*        REGISTER   Value on Entry         Value on Exit     * @Z23D249 15559000
*                                                            * @Z23D249 15559200
*        R0              N/A               Unchanged         * @Z23D249 15559400
*        R1              JQA of net job    Unchanged         * @Z23D249 15559600
*        R2              N/A               Unchanged         * @Z23D249 15559800
*        R3-R4           N/A               Unchanged         * @Z23D249 15560000
*        R5              N/A               Unchanged         * @Z23D249 15560200
*        R6-R8           N/A               Unchanged         * @Z23D249 15560400
*        R9              Reserved          Unchanged         * @Z23D249 15560600
*        R10             N/A               Unchanged         * @Z23D249 15560800
*        R11             HCT address       Unchanged         * @Z23D249 15561000
*        R12             N/A               Unchanged         * @Z23D249 15561200
*        R13             PCE address       Unchanged         * @Z23D249 15561400
*        R14             Return address    Unchanged         * @Z23D249 15561600
*        R15             Entry address     Return Code - none* @Z23D249 15561800
*                                                            * @Z23D249 15562000
*                                                            * @Z23D249 15562200
*     RETURN CODES:                                          * @Z23D249 15562400
*                                                            * @Z23D249 15562600
*        None                                                * @Z23D249 15562800
*                                                            * @Z23D249 15563000
*     OTHER CONSIDERATIONS:                                  * @Z23D249 15563200
*        None                                                * @Z23D249 15563400
*                                                            * @Z23D249 15563600
************************************************************** @Z23D249 15563800
         SPACE 1                                               @Z23D249 15564000
NETJQA   USING JQA,R5              Net Job input JQA.          @Z23D249 15564200
         SPACE 1                                               @Z23D249 15564400
SETZJIMA $SAVE  TRACE=YES          Save callers registers      @Z23D249 15564600
         SPACE 1                                               @Z23D249 15564800
         LARL  R12,SETZJIMA        Base                        @Z23D249 15565000
         LR    R5,R1               Address JQA                 @Z23D249 15565200
         SPACE 1                                               @Z23D249 15565400
         CLC   NETJQA.JQXZNAME,$ZEROS  Exit if input job is    @Z23D249 15565600
         JE    SETZRTN                   not associated with   @Z23D249C15565800
                                         a dependency network  @Z23D249 15566000
         SPACE 1                                               @Z23D249 15566200
*------------------------------------------------------------* @Z23D249 15566400
*        Call routine to initialize and process the          * @Z23D249 15566600
*        corresponding //*NET ZJI.  Upon completion :        * @Z23D249 15566800
*                                                            * @Z23D249 15567000
*        - //*NET fields in the corresponding ZJI will be    * @Z23D249 15567200
*          initialized from the JQA (NETJQA).                * @Z23D249 15567400
*                                                            * @Z23D249 15567600
*        - All related dependencies will be initialized and  * @Z23D249 15567800
*          may be executed if the parent job has completed.  * @Z23D249 15568000
*                                                            * @Z23D249 15568200
*        - The network will is SUSPENDED to prepare for a    * @Z23D249 15568400
*          later resubmit of a 'good' versionof this job.    * @Z23D249 15568600
*                                                            * @Z23D249 15568800
*------------------------------------------------------------* @Z23D249 15569000
         SPACE 1                                               @Z23D249 15569200
        $JZDN  OPERATION=INIT_NET_CVTERR_ZJI,  Process the     @Z23D249C15569400
               JOBPTR=NETJQA.JQA                 associated    @Z23D249C15569600
                                                 ZJI.          @Z23D249 15569800
         SPACE 1                                               @Z23D249 15570000
SETZRTN $RETURN ,                  Return to caller            @Z23D249 15570200
         SPACE 1                                               @Z23D249 15570400
         DROP  NETJQA              Drop our JQA.               @Z23D249 15570600
         TITLE 'HASP JCL CONVERSION PROCESSOR -- RTNCNVRS - Shutdown suC15570800
               btask and return storage for CNVT PCE.'         @Z24D027 15571000
************************************************************** @Z24D027 15571200
*                                                            * @Z24D027 15571400
*     RTNCNVRS - Shutdown subtask and return storage for     * @Z24D027 15571600
*                privileged CNVT PCE.                        * @Z24D027 15571800
*                                                            * @Z24D027 15572000
*     FUNCTION:                                              * @Z24D027 15572200
*                                                            * @Z24D027 15572400
*        See above                                           * @Z24D027 15572600
*                                                            * @Z24D027 15572800
*     LINKAGE:                                               * @Z24D027 15573000
*                                                            * @Z24D027 15573200
*        Branched to via $CALL, returned via $RETURN         * @Z24D027 15573400
*                                                            * @Z24D027 15573600
*     CALLERS:                                               * @Z24D027 15573800
*                                                            * @Z24D027 15574000
*        Main path in CNVT                                   * @Z24D027 15574200
*                                                            * @Z24D027 15574400
*     ENVIRONMENT:                                           * @Z24D027 15574600
*                                                            * @Z24D027 15574800
*        JES2 main task                                      * @Z24D027 15575000
*                                                            * @Z24D027 15575200
*     RECOVERY:                                              * @Z24D027 15575400
*                                                            * @Z24D027 15575600
*        None                                                * @Z24D027 15575800
*                                                            * @Z24D027 15576000
*     REGISTER USAGE (ENTRY/EXIT):                           * @Z24D027 15576200
*                                                            * @Z24D027 15576400
*        REGISTER   Value on Entry         Value on Exit     * @Z24D027 15576600
*                                                            * @Z24D027 15576800
*        R0              N/A               Unchanged         * @Z24D027 15577000
*        R1              N/A               Unchanged         * @Z24D027 15577200
*        R2              N/A               Unchanged         * @Z24D027 15577400
*        R3-R4           N/A               Unchanged         * @Z24D027 15577600
*        R5              N/A               Unchanged         * @Z24D027 15577800
*        R6-R8           N/A               Unchanged         * @Z24D027 15578000
*        R9              Reserved          Unchanged         * @Z24D027 15578200
*        R10             N/A               Unchanged         * @Z24D027 15578400
*        R11             HCT address       Unchanged         * @Z24D027 15578600
*        R12             N/A               Unchanged         * @Z24D027 15578800
*        R13             PCE address       Unchanged         * @Z24D027 15579000
*        R14             Return address    Unchanged         * @Z24D027 15579200
*        R15             Entry address     Return Code - none* @Z24D027 15579400
*                                                            * @Z24D027 15579600
*                                                            * @Z24D027 15579800
*     RETURN CODES:                                          * @Z24D027 15580000
*                                                            * @Z24D027 15580200
*        None                                                * @Z24D027 15580400
*                                                            * @Z24D027 15580600
*     OTHER CONSIDERATIONS:                                  * @Z24D027 15580800
*        None                                                * @Z24D027 15581000
*                                                            * @Z24D027 15581200
************************************************************** @Z24D027 15581400
         SPACE 1                                               @Z24D027 15581600
RTNCNVRS $SAVE                     Save callers registers      @Z24D027 15581800
         SPACE 1                                               @Z24D027 15582000
         LARL  R12,RTNCNVRS        Base                        @Z24D027 15582200
         USING CIPARM,R3           Est CIPARM addressability   @Z24D027 15582400
         EJECT ,                                               @Z24D027 15582600
************************************************************** @Z24D027 15582800
*       CIPARM related to our PCE. So what now ...           * @Z24D027 15583000
*        - Shutdown associated subtask.                      * @Z24D027 15583200
*        - Dechain our CIPARM and free it.                   * @Z24D027 15583400
*        - Get rid of XPL for Exit 44 if one exists. Also    * @Z24D027 15583600
*          FREMAIN SQD.                                      * @Z24D027 15583800
************************************************************** @Z24D027 15584000
         SPACE 1                                               @Z24D027 15584200
         USING DTE,R8              Est DTE addressabiltiy      @Z24D027 15584400
         SPACE 1                                               @Z24D027 15584600
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z24D027C15584800
               SYSSTATE=SET                                    @Z24D027 15585000
         SPACE 1                                               @Z24D027 15585200
         L     R3,JPCECIP          Get CIPARM address          @Z24D027 15585400
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z24D027 15585600
         SPACE 1                                               @Z24D027 15585800
         LT    R8,JPCEDTE          If JPCEDTE is zero then     @Z24D027 15586000
         JZ    RTCTRYCI             either no subtask or       @Z24D027C15586200
                                    subtask in JES2CI          @Z24D027 15586400
         LAE   R8,0(R8)            Ensure AR8 is zero          @Z24D027 15586600
         SPACE 1                                               @Z24D027 15586800
         TM    DTETXECB,ECBPOST    Subtask already dead?       @Z24D027 15587000
         JO    RTSUDEAD              Yes, just $DTEDYN DETACH  @Z24D027 15587200
        $ARMODE OFF,SYSSTATE=SET   Ensure primary mode for SVC @Z24D027 15587400
         OI    DTEFLAG1,DTE1TERM   Set to terminate subtask    @Z24D027 15587600
         SPACE 1                                               @Z24D027 15587800
         POST  DTEWECB             Post HOSCNVT to shutdown    @Z24D027 15588000
         EJECT ,                                               @Z24D027 15588200
*------------------------------------------------------------* @Z24D027 15588400
*        Wait for subtask termination or a 10 second timer   * @Z24D027 15588600
*------------------------------------------------------------* @Z24D027 15588800
         SPACE 1                                               @Z24D027 15589000
         LAE   R1,JPCETQE          Get address of PCE TQE      @Z24D027 15589200
         LHI   R0,10               Set time interval           @Z24D027 15589400
         ST    R0,TQETIME(,R1)      in TQE                     @Z24D027 15589600
         ST    R13,TQEPCE(,R1)     Store PCE address in TQE    @Z24D027 15589800
         SPACE 1                                               @Z24D027 15590000
        $STIMER (R1)               Chain this TQE              @Z24D027 15590200
         SPACE 1                                               @Z24D027 15590400
        $WAIT  WORK,XECB=DTETXECB  Wait for time or POST       @Z24D027 15590600
         SPACE 1                                               @Z24D027 15590800
         LAE   R1,JPCETQE          Get address of PCE TQE      @Z24D027 15591000
        $TTIMER (R1),CANCEL        Ensure timer stopped        @Z24D027 15591200
         SPACE 1                                               @Z24D027 15591400
         TM    DTETXECB,ECBPOST    Subtask already dead?       @Z24D027 15591600
         JO    RTSUDEAD              Yes, just $DTEDYN DETACH  @Z24D027 15591800
         SPACE 1                                               @Z24D027 15592000
         DETACH DTETCB,STAE=YES    Force subtask shutdown      @Z24D027 15592200
         EJECT ,                                               @Z24D027 15592400
*------------------------------------------------------------* @Z24D027 15592600
*        Task is no longer running, clean up DTE etc.        * @Z24D027 15592800
*------------------------------------------------------------* @Z24D027 15593000
         SPACE 1                                               @Z24D027 15593200
RTSUDEAD $ARMODE ON,SYSSTATE=SET   Back to AR mode             @Z24D027 15593400
         SPACE 1                                               @Z24D027 15593600
         $XECBSRV XECB=DTETXECB,FUNCTION=CLEAR  Dechain XECB   @Z24D027 15593800
         SPACE 1                                               @Z24D027 15594000
         XC    JPCEDTE,JPCEDTE     Clear DTE ptr               @Z24D027 15594200
         XC    CIPDTEA,CIPDTEA       in PCE and DTEPARM        @Z24D027 15594400
         XC    CIPASID,CIPASID     Clear ASID and              @Z24D027 15594600
         XC    CIPTTOKN,CIPTTOKN     token address             @Z24D027 15594800
        $ARMODE OFF,SYSSTATE=SET   Primary mode for $DTEDYN    @Z24D027 15595000
         SPACE 1                                               @Z24D027 15595200
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=NO             @Z24D027C15595400
                                   Detach ABENDed sub-task     @Z24D027 15595600
         SPACE 1                                               @Z24D027 15595800
         DROP  R8                  Drop DTE                    @Z24D027 15596000
         J     RTNCIPAR            Go return CIPARM            @Z24D027 15596200
         SPACE 1                                               @Z24D027 15596400
         USING CICB,R4             Est CICB addressability     @Z24D027 15596600
         USING ASEO,CCBODA         Est ASEO addressability     @Z24D027 15596800
         SPACE 1                                               @Z24D027 15597000
RTCTRYCI $ARMODE ON,SYSSTATE=SET   Back to AR mode             @Z24D027 15597200
         LT    R4,CIPCICB          Subtask in a JES2CI AS?     @Z24D027 15597400
         JZ    RTNCIPAR             - no return CIPARM         @Z24D027 15597600
         SPACE 1                                               @Z24D027 15597800
         CLC   CIPTTOKN,$ZEROS     Is there really a subtask?  @Z24D027 15598000
         JE    RTNCIPAR              No, go return CIPARM      @Z24D027 15598200
         SPACE 1                                               @Z24D027 15598400
         DROP  R4                  Drop CICB                   @Z24D027 15598600
         USING SQD,R4              Est SQD addressability      @Z24D027 15598800
         SPACE 1                                               @Z24D027 15599000
         L     R4,JPCESQD          Get SQD address             @Z24D027 15599200
         LAE   R4,0(R4)              and ensure AR4 is zero    @Z24D027 15599400
        $SUBIT DELJ2CI,PARM0=0,    Shut down JES2CI subtask    @Z24D027C15599600
               PARM1=CIPARM,                                   @Z24D027C15599800
               SQDADDR=SQD                                     @Z24D027 15600000
         SPACE 1                                               @TWCLPCN 15600060
         DROP  R4                  Drop SQD                    @TWCLPCN 15600120
         EJECT ,                                               @Z24D027 15600200
************************************************************** @Z24D027 15600400
*       Dechain our CIPARM and free it                       * @Z24D027 15600600
************************************************************** @Z24D027 15600800
         SPACE 1                                               @Z24D027 15601000
        $RUSE  RX=R2,USE=(USING,Loop_Iteration_Count)          @Z24D027 15601200
PREV     USING CIPARM,R4           Previous CIPARM             @Z24D027 15601400
         SPACE 1                                               @Z24D027 15601600
RTNCIPAR $ARMODE ON,SYSSTATE=SET   Back to AR mode             @Z24D027 15601800
         LHI   R2,0                No loop interations         @Z24D027 15602000
         L     R3,$HCCT            Get HCCT address            @Z24D027 15602200
         LAE   R3,CCTCIP-HCCT-(CIPCIPA-CIPARM)(R3,0)  0th CIP  @Z24D027 15602400
RTNCIPLP LT    R3,CIPCIPA          Get 1st/next CIPARM         @Z24D027 15602600
         JZ    RTNIDON               None, all done            @Z24D027 15602800
         AHI   R2,1                One more loop interation    @Z24D027 15603000
         LR    R4,R3               Previous CIPARM             @Z24D027 15603200
         LAM   AR3,AR3,$PSOTOK     Set CIP/PSO ALET            @Z24D027 15603400
         CLC   CIPSEQ,PCESEQ       Found our CIPARM?           @Z24D027 15603600
         JNE   RTNCIPLP              No, loop through CIPs     @Z24D027 15603800
         SPACE 1                                               @Z24D027 15604000
         XC    JPCECIP,JPCECIP     Zero address in PCE         @Z24D027 15604200
         CHI   R2,1                If not first in line        @Z24D027 15604400
         JNE   RTNUPREV             no need to update HCCT     @Z24D027 15604600
         L     R1,$HCCT            Get HCCT address            @Z24D027 15604800
         L     R14,CIPCIPA         Next CIPARM from our CIPARM @Z24D027 15605000
         ST    R14,CCTCIP-HCCT(,R1) Set next in HCCT           @Z24D027 15605200
         J     RTNFREE             Go free our CIPARM          @Z24D027 15605400
         SPACE 1                                               @Z24D027 15605600
RTNUPREV MVC   PREV.CIPCIPA,CIPCIPA Relink chain               @Z24D027 15605800
RTNFREE $CPOOL ACTION=FREE,TYPE=PAD,CELL=(R3) Free CIP         @Z24D027 15606000
         SPACE 1                                               @Z24D027 15606200
RTNIDON $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z24D027 15606400
         SPACE 1                                               @Z24D027 15606600
         DROP  R3                  Drop CIPARM                 @Z24D027 15606800
         DROP  PREV                Drop previous CIPARM        @Z24D027 15607000
        $RUSE  RX=R2,USE=(DROP,Loop_Iteration_Count)           @Z24D027 15607200
         EJECT ,                                               @Z24D027 15607400
************************************************************** @Z24D027 15607600
*        Get rid of XPL for Exit 44 if one exists. Also      * @Z24D027 15607800
*        FREMAIN SQD.                                        * @Z24D027 15608000
************************************************************** @Z24D027 15608200
         LT    R3,JPCEXPLA         If XPL does not exist       @Z24D027 15608400
         JZ    RTNSQD               then skip                  @Z24D027 15608600
         SPACE 1                                               @Z24D027 15608800
        $RETWORK (R3)              Release $XPL storage        @Z24D027 15609000
         SPACE 1                                               @Z24D027 15609200
RTNSQD   LT    R3,JPCESQD          Is there a SQD?             @Z24D027 15609400
         JZ    RTNCNRT              then just return           @Z24D027 15609600
         SPACE 1                                               @Z24D027 15609800
         LHI   R15,SQDLEN          SQD length                  @Z24D027 15610000
         SPACE 1                                               @Z24D027 15610200
        $FREMAIN RU,LV=SQDLEN,     Free                        @Z24D027C15610400
               A=(R3)                SQD                       @Z24D027 15610600
         SPACE 1                                               @Z24D027 15610800
RTNCNRT $RETURN ,                  Return to caller            @Z24D027 15611000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- CXESTAE - $ESTAE RecovC15611200
               ery routine'                                    @Z08LWLM 15611400
************************************************************** @420P123 15611600
*                                                            * @420P123 15611800
*        CXESTAE - JCL CONVERSION $ESTAE ROUTINE             * @420P123 15620000
*                                                            * @420P123 15630000
*  FUNCTION:                                                 * @420P123 15640000
*                                                            * @420P123 15650000
*        Retries at XCERETRI in subroutine XCEXIT44.         * @420P123 15660000
*                                                            * @420P123 15670000
*                                                            * @420P123 15680000
*  REGISTER USAGE (ENTRY/EXIT):                              * @420P123 15690000
*                                                            * @420P123 15700000
*    REG       VALUE ON ENTRY             VALUE ON EXIT      * @420P123 15710000
*                                                            * @420P123 15720000
*    R0        SAME AS AT ABEND           UNCHANGED          * @420P123 15730000
*    R1        ERA ADDRESS                UNCHANGED          * @420P123 15740000
*    R2-R10    SAME AS AT ABEND           UNCHANGED          * @420P123 15750000
*    R11       HCT ADDRESS                UNCHANGED          * @420P123 15760000
*    R12       SAME AS AT ABEND           UNCHANGED          * @420P123 15770000
*    R13       PCE ADDRESS                UNCHANGED          * @420P123 15780000
*    R14       RETURN ADDRESS             UNCHANGED          * @420P123 15790000
*    R15       ENTRY ADDRESS              ZERO               * @420P123 15800000
*                                                            * @420P123 15810000
************************************************************** @420P123 15820000
         SPACE 1                                               @420P123 15821000
         USING ERA,R5                ERA addressability        @420P123 15823000
         SPACE 1                                               @420P123 15824000
CXESTAE $SAVE  TRACE=YES           Save callers registers      @420P123 15825000
         SPACE 1                                               @420P123 15826000
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @Z09LCAN 15826200
         LR    R5,R1               Point to ERA                @420P123 15828000
         EJECT ,                                               @Z08LWLM 15829000
*------------------------------------------------------------* @420P123 15830000
*        Set resume address                                  * @420P123 15840000
*------------------------------------------------------------* @420P123 15850000
         SPACE 1                                               @420P123 15860000
         USING PRE,R14             Addressability to PRE       @420P123 15870000
         SPACE 1                                               @420P123 15880000
         L     R14,ERAPRE          Get PRE address             @420P123 15890000
         MVC   ERAREG12,PREBASE    Get the routine base addr.  @420P123 15895000
         L     R1,PRERESUM         Set resume address          @420P123 15900000
         SPACE 1                                               @420P123 15905000
         DROP  R14                 Drop addressability         @420P123 15910000
         SPACE 1                                               @Z08LWLM 15915000
*------------------------------------------------------------* @420P123 15920000
*        Set up recovery attempt and return to caller        * @420P123 15930000
*------------------------------------------------------------* @420P123 15940000
         SPACE 1                                               @420P123 15942000
        $SETRP RESUME=(R1)         Indicate recovery attempt   @420P123 15944000
         SPACE 1                                               @420P123 15946000
        $RETURN ,                  Return to caller            @420P123 15950000
         SPACE 1                                               @420P123 15955000
         DROP  R5                  Drop ERA addressability     @420P190 15960000
         TITLE 'HASP JCL Conversion Processor -- CNVDETCH - Detach convC15960100
               erter subtask'                                  @TWCLPCN 15960200
************************************************************** @TWCLPCN 15960300
*                                                            * @TWCLPCN 15960400
*        CNVDETCH - Detach converter subtask                 * @TWCLPCN 15960500
*                                                            * @TWCLPCN 15960600
*  FUNCTION:                                                 * @TWCLPCN 15960700
*                                                            * @TWCLPCN 15960800
*        Detach the converter subtask due to the a $P CNVT   * @TWCLPCN 15960900
*        command.                                            * @TWCLPCN 15961000
*                                                            * @TWCLPCN 15961100
*  REGISTER USAGE (ENTRY/EXIT):                              * @TWCLPCN 15961200
*                                                            * @TWCLPCN 15961300
*    REG       VALUE ON ENTRY             VALUE ON EXIT      * @TWCLPCN 15961400
*                                                            * @TWCLPCN 15961500
*    R0-R10    n/a                        Unchanged          * @TWCLPCN 15961600
*    R11       HCT address                Unchanged          * @TWCLPCN 15961700
*    R12       n/a                        Unchanged          * @TWCLPCN 15961800
*    R13       PCE address                Unchanged          * @TWCLPCN 15961900
*    R14       Return address             Unchanged          * @TWCLPCN 15962000
*    R15       Entry address              Zero               * @TWCLPCN 15962100
*                                                            * @TWCLPCN 15962200
************************************************************** @TWCLPCN 15962300
         SPACE 1                                               @TWCLPCN 15962400
CNVDETCH $SAVE TRACE=YES           Save callers registers      @TWCLPCN 15962500
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @TWCLPCN 15962600
         EJECT ,                                               @TWCLPCN 15962700
************************************************************** @TWCLPCN 15962800
*                                                            * @TWCLPCN 15962900
*        Detach a converter in the JES2 address space        * @TWCLPCN 15963000
*                                                            * @TWCLPCN 15963100
************************************************************** @TWCLPCN 15963200
         SPACE 1                                               @TWCLPCN 15963300
         LT    R8,JPCEDTE          Pick up HOSCNVT DTE address @TWCLPCN 15963400
         JZ    XCDCKJCI              None, check JESCI subtask @TWCLPCN 15963500
         SPACE 1                                               @TWCLPCN 15963600
         USING DTE,R8              Est DTE addressability      @TWCLPCN 15963700
         SPACE 1                                               @TWCLPCN 15963800
         TM    DTETXECB,ECBPOST    Subtask already dead?       @TWCLPCN 15963900
         JO    XCGCIDET              Yes, just $DTEDYN DETACH  @TWCLPCN 15964000
         OI    DTEFLAG1,DTE1TERM   Set to terminate subtask    @TWCLPCN 15964100
         SPACE 1                                               @TWCLPCN 15964200
         POST  DTEWECB             Post HOSCNVT to shutdown    @TWCLPCN 15964300
         EJECT ,                                               @TWCLPCN 15964400
*------------------------------------------------------------* @TWCLPCN 15964500
*        Wait for subtask termination or a 10 second timer   * @TWCLPCN 15964600
*------------------------------------------------------------* @TWCLPCN 15964700
         SPACE 1                                               @TWCLPCN 15964800
         LAE   R1,JPCETQE          Get address of PCE TQE      @TWCLPCN 15964900
         LHI   R0,10               Set time interval           @TWCLPCN 15965000
         ST    R0,TQETIME(,R1)      in TQE                     @TWCLPCN 15965100
         ST    R13,TQEPCE(,R1)     Store PCE address in TQE    @TWCLPCN 15965200
         SPACE 1                                               @TWCLPCN 15965300
        $STIMER (R1)               Chain this TQE              @TWCLPCN 15965400
         SPACE 1                                               @TWCLPCN 15965500
        $WAIT  WORK,XECB=DTETXECB  Wait for time or POST       @TWCLPCN 15965600
         SPACE 1                                               @TWCLPCN 15965700
         LAE   R1,JPCETQE          Get address of PCE TQE      @TWCLPCN 15965800
        $TTIMER (R1),CANCEL        Ensure timer stopped        @TWCLPCN 15965900
         SPACE 1                                               @TWCLPCN 15966000
         TM    DTETXECB,ECBPOST    Subtask already dead?       @TWCLPCN 15966100
         JO    XCDCIDET              Yes, just $DTEDYN DETACH  @TWCLPCN 15966200
         SPACE 1                                               @TWCLPCN 15966300
         DETACH DTETCB,STAE=YES    Force subtask shutdown      @TWCLPCN 15966400
         EJECT ,                                               @TWCLPCN 15966500
*------------------------------------------------------------* @TWCLPCN 15966600
*        Task is no longer running, clean up DTE etc.        * @TWCLPCN 15966700
*------------------------------------------------------------* @TWCLPCN 15966800
         SPACE 1                                               @TWCLPCN 15966900
         USING CIPARM,R3           Est CIPARM addressability   @TWCLPCN 15967000
         SPACE 1                                               @TWCLPCN 15967100
XCDCIDET $ARMODE ON,INIT=$ZEROES,  Get into ARMODE             @TWCLPCNC15967200
               SYSSTATE=SET                                    @TWCLPCN 15967300
         SPACE 1                                               @TWCLPCN 15967400
         L     R3,JPCECIP          Save CIPARM in PCE          @TWCLPCN 15967500
         LAM   AR3,AR3,$PSOTOK     Set CIP/PSO ALET            @TWCLPCN 15967600
         SPACE 1                                               @TWCLPCN 15967700
        $XECBSRV XECB=DTETXECB,FUNCTION=CLEAR  Dechain XECB    @TWCLPCN 15967800
         SPACE 1                                               @TWCLPCN 15967900
         MVHI  JPCEDTE,0           Clear DTE pointer           @TWCLPCN 15968000
         MVHI  CIPDTEA,0             in PCE and DTEPARM        @TWCLPCN 15968100
         MVHHI CIPASID,0           Clear ASID and              @TWCLPCN 15968200
         XC    CIPTTOKN,CIPTTOKN     token address             @TWCLPCN 15968300
         SPACE 1                                               @TWCLPCN 15968400
        $DTEDYN DETACH,ID=DTEIDCNV,DTE=DTE,WAIT=NO             @TWCLPCNC15968500
                                   Detach terminated subtask   @TWCLPCN 15968600
         SPACE 1                                               @TWCLPCN 15968700
         DROP  R8                  Drop DTE                    @TWCLPCN 15968800
         EJECT ,                                               @TWCLPCN 15968900
************************************************************** @TWCLPCN 15969000
*                                                            * @TWCLPCN 15969100
*        Detach a converter in the JES2CI address space      * @TWCLPCN 15969200
*                                                            * @TWCLPCN 15969300
************************************************************** @TWCLPCN 15969400
         SPACE 1                                               @TWCLPCN 15969500
         USING SQD,R4              Est SQD addressability      @TWCLPCN 15969600
         SPACE 1                                               @TWCLPCN 15969700
XCDCKJCI $ARMODE ON,INIT=$ZEROES,  Ensure in ARMODE            @TWCLPCNC15969800
               SYSSTATE=SET                                    @TWCLPCN 15969900
         L     R3,JPCECIP          Save CIPARM in PCE          @TWCLPCN 15970000
         LAM   AR3,AR3,$PSOTOK     Set CIP/PSO ALET            @TWCLPCN 15970100
         SPACE 1                                               @TWCLPCN 15970200
         CLFHSI CIPCICB,0          Subtask in a JES2CI AS?     @TWCLPCN 15970300
         JE    XCDRETN               No, we are set            @TWCLPCN 15970400
         L     R4,JPCESQD          Get SQD address             @TWCLPCN 15970500
         LAE   R4,0(R4)              and ensure AR4 is zero    @TWCLPCN 15970600
        $SUBIT DELJ2CI,PARM0=0,    Shut down JES2CI subtask    @TWCLPCNC15970700
               PARM1=CIPARM,                                   @TWCLPCNC15970800
               SQDADDR=SQD                                     @TWCLPCN 15970900
         SPACE 1                                               @TWCLPCN 15971000
         DROP  R3,R4               Drop CIPARM, SQD            @TWCLPCN 15971100
         EJECT ,                                               @TWCLPCN 15971200
************************************************************** @TWCLPCN 15971300
*                                                            * @TWCLPCN 15971400
*        Return to our caller                                * @TWCLPCN 15971500
*                                                            * @TWCLPCN 15971600
************************************************************** @TWCLPCN 15971700
         SPACE 1                                               @TWCLPCN 15971800
XCDRETN $ARMODE OFF,               Back to primary more        @TWCLPCNC15971900
               SYSSTATE=SET                                    @TWCLPCN 15972000
         SPACE 1                                               @TWCLPCN 15972100
        $RETURN ,                  Return to our caller        @TWCLPCN 15972200
         TITLE 'HASP JCL CONVERSION PROCESSOR -- XCREOPEN -- TELL CONVEC15980000
               RTER SUBTASKS TO REOPEN PROCLIB'                  @430DV 15990000
**************************************************************   @430DV 16000000
*                                                            *   @430DV 16010000
*        XCREOPEN - TELL CONVERTER SUBTASKS TO REOPEN        *   @430DV 16020000
*                   PROCLIB                                  *   @430DV 16030000
*                                                            *   @430DV 16040000
*   FUNCTION:                                                *   @430DV 16050000
*                                                            *   @430DV 16060000
*        THIS ROUTINE IS CALLED WHEN THE CONVERTER RECEIVES  *   @430DV 16070000
*        AN I/O ERROR ON THE PROCEDURE LIBRARY.  THE ERROR   *   @430DV 16080000
*        USUALLY OCCURS AFTER A PROCEDURE IS EDITED AND      *   @430DV 16090000
*        SAVED IN A NEW EXTENT.  SINCE THE CONVERTER SUBTASK *   @430DV 16100000
*        HAD THE LIBRARY OPEN, ITS DEB DID NOT REFLECT THE   *   @430DV 16110000
*        NEW EXTENT.                                         *   @430DV 16120000
*                                                            *   @430DV 16130000
*        THIS ROUTINE TELLS EACH CONVERTER SUBTASK TO        *   @430DV 16140000
*        REOPEN THE PROCEDURE LIBRARY.  REOPENING THE        *   @430DV 16150000
*        LIBRARY BUILDS A NEW DEB WHICH CONTAINS THE NEW     *   @430DV 16160000
*        EXTENT.  EACH CONVERTER SUBTASK IS NOTIFIED         *   @430DV 16170000
*        BECAUSE EACH SUBTASK HAS ITS OWN DEB.               *   @430DV 16180000
*                                                            *   @430DV 16190000
*   LINKAGE:                                                 *   @430DV 16200000
*                                                            *   @430DV 16210000
*        $CALL XCREOPEN                                      *   @430DV 16220000
*                                                            *   @430DV 16230000
*   ENVIRONMENT:                                             *   @430DV 16240000
*                                                            *   @430DV 16250000
*        JES2 MAIN TASK                                      *   @430DV 16260000
*                                                            *   @430DV 16270000
*   RECOVERY:                                                *   @430DV 16280000
*                                                            *   @430DV 16290000
*        NONE                                                *   @430DV 16300000
*                                                            *   @430DV 16310000
*   REGISTER USAGE (ENTRY/EXIT):                             *   @430DV 16320000
*                                                            *   @430DV 16330000
*    REG       VALUE ON ENTRY             VALUE ON EXIT      *   @430DV 16340000
*                                                            *   @430DV 16350000
*    R0-R10    N/A                        UNCHANGED          *   @430DV 16360000
*    R11       HCT BASE ADDRESS           UNCHANGED          *   @430DV 16370000
*    R12       N/A                        UNCHANGED          *   @430DV 16380000
*    R13       PCE BASE ADDRESS           UNCHANGED          *   @430DV 16390000
*    R14       RETURN ADDRESS             UNCHANGED          *   @430DV 16400000
*    R15       ENTRY ADDRESS              0                  *   @430DV 16410000
*                                                            *   @430DV 16420000
*   REGISTER USAGE (INTERNAL):                               *   @430DV 16430000
*                                                            *   @430DV 16440000
*    REG       VALUE                                         *   @430DV 16450000
*                                                            *   @430DV 16460000
*    R0-R1     WORK REGISTERS                                *   @430DV 16470000
*    R2        DTE BASE ADDRESS                              *   @430DV 16480000
*    R3-R8     WORK REGISTERS                                *   @430DV 16490000
*    R9        *** RESERVED ***                              *   @430DV 16500000
*    R10       WORK REGISTER                                 *   @430DV 16510000
*    R11       HCT BASE ADDRESS                              *   @430DV 16520000
*    R12       CNVT data base address                        * @R10LADR 16530000
*    R13       PCE BASE ADDRESS                              *   @430DV 16540000
*    R14       LINK/WORK REGISTER                            *   @430DV 16550000
*    R15       LINK/WORK REGISTER                            *   @430DV 16560000
*                                                            *   @430DV 16570000
*   OTHER CONSIDERATIONS:                                    *   @430DV 16580000
*                                                            *   @430DV 16590000
*        SINCE THIS ROUTINE RUNS UNDER THE MAIN TASK, NO     *   @430DV 16600000
*        SERIALIZATION OF THE DTE CHAIN IS REQUIRED.  ONLY   *   @430DV 16610000
*        THE MAIN TASK CAN ADD OR REMOVE DTES FROM THE       *   @430DV 16620000
*        CHAIN.                                              *   @430DV 16630000
*                                                            *   @430DV 16640000
**************************************************************   @430DV 16650000
         SPACE 1                                                 @430DV 16660000
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 16670000
         SPACE 1                                                 @430DV 16690000
XCREOPEN $SAVE TRACE=YES           SAVE REGISTERS                @430DV 16700000
         SPACE 1                                                 @430DV 16710000
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @Z09LCAN 16715000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC16720000
               SYSSTATE=SET                                    @Z21LCNV 16725000
         EJECT ,                                                 @430DV 16730000
**************************************************************   @430DV 16740000
*                                                            *   @430DV 16750000
*        Flag CIP1REO in the CIPARM work area tells the      * @Z21LCNV 16760000
*        converter subtask to reopen the procedure library.  * @Z21LCNV 16770000
*        The OIL macro is used since the flag byte is        * @Z21LCNV 16780000
*        altered by both the main task and the subtask.      * @Z21LCNV 16790000
*                                                            *   @430DV 16800000
**************************************************************   @430DV 16810000
         SPACE 1                                                 @430DV 16820000
         L     R3,$HCCT            Get HCCT address            @Z21LCNV 16825000
         L     R3,CCTCIP-HCCT(,R3) Get 1st converter parm area @Z21LCNV 16830000
         LAM   AR3,AR3,$PSOTOK     Set CIP/PSO ALET            @Z21LCNV 16835000
         SPACE 1                                                 @430DV 16840000
XCRLOOP  DS    0H                  START OF DTE LOOP             @430DV 16850000
         SPACE 1                                                 @430DV 16920000
         OIL   CIPFLG1,CIP1REO,REF=CIPARM,WREGS=(R14,R15,R1)   @Z21LCNVC16930000
                                   Set CIP1REO  so the subtask @Z21LCNVC16940000
                                   reopens the PROCLIB         @Z21LCNV 16950000
         SPACE 2                                                 @430DV 16960000
         LT    R3,CIPCIPA          Get next CIPWORK on chain   @Z21LCNV 16980000
         JNZ   XCRLOOP               More, continue loop       @Z21LCNV 17000000
         SPACE 1                                                 @430DV 17030000
        $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z21LCNV 17040000
         EJECT ,                                                 @430DV 17050000
        $RETURN ,                  Return to the caller          @430DV 17060000
         SPACE 1                                                 @430DV 17070000
         DROP  R3                  Drop CIPARM                 @Z21LCNV 17100000
         TITLE 'HASP JCL CONVERSION PROCESSOR -- XCCALRTM -- SET UP ANDC17110000
               ISSUE CALLRTM TO TERMINATE HOSCNVT SUBTASK'       @R01AX 17120000
**************************************************************   @R01AX 17130000
*                                                            *   @R01AX 17140000
*        XCCALRTM - Set up and issue CALLRTM to terminate    *   @R01AX 17150000
*                   the HOSCNVT subtask.                     *   @R01AX 17160000
*                                                            *   @R01AX 17170000
*   FUNCTION:                                                *   @R01AX 17180000
*                                                            *   @R01AX 17190000
*        This routine is called when the Converter PCE is    *   @R01AX 17200000
*        POST'ed due to an operator cancel of the job ($Cx   *   @R01AX 17210000
*        or $Cx,D) or the job is being put through end-of-   *   @R01AX 17220000
*        memory (FORCE) while it is active in conversion.    *   @R01AX 17230000
*        This routine will switch to appropriate key and     *   @R01AX 17240000
*        obtain the neccessary local lock before issuing     *   @R01AX 17250000
*        the CALLRTM with abend code X'422' and a reason     *   @R01AX 17260000
*        code in following format:                           *   @R01AX 17270000
*                 xxxxyyzz                                   *   @R01AX 17280000
*                  :  : :                                    *   @R01AX 17290000
*                  :  : -----> X'00'                         *   @R01AX 17300000
*                  :  -------> X'02' to identify JES2        *   @R01AX 17310000
*                  :                                         *   @R01AX 17320000
*                  ----------> 2-byte PCE id                 *   @R01AX 17330000
*                                                            *   @R01AX 17340000
*   LINKAGE:                                                 *   @R01AX 17350000
*                                                            *   @R01AX 17360000
*        $CALL XCCALRTM                                      *   @R01AX 17370000
*                                                            *   @R01AX 17380000
*   ENVIRONMENT:                                             *   @R01AX 17390000
*                                                            *   @R01AX 17400000
*        JES2 MAIN TASK                                      *   @R01AX 17410000
*                                                            *   @R01AX 17420000
*   RECOVERY:                                                *   @R01AX 17430000
*                                                            *   @R01AX 17440000
*        None                                                *   @R01AX 17450000
*                                                            *   @R01AX 17460000
*   REGISTER USAGE (ENTRY/EXIT):                             *   @R01AX 17470000
*                                                            *   @R01AX 17480000
*    REG       VALUE ON ENTRY             VALUE ON EXIT      *   @R01AX 17490000
*                                                            *   @R01AX 17500000
*    R0-R10    N/A                        UNCHANGED          *   @R01AX 17510000
*    R11       HCT BASE ADDRESS           UNCHANGED          *   @R01AX 17520000
*    R12       N/A                        UNCHANGED          *   @R01AX 17530000
*    R13       PCE BASE ADDRESS           UNCHANGED          *   @R01AX 17540000
*    R14       RETURN ADDRESS             UNCHANGED          *   @R01AX 17550000
*    R15       ENTRY ADDRESS              0                  *   @R01AX 17560000
*                                                            *   @R01AX 17570000
*   REGISTER USAGE (INTERNAL):                               *   @R01AX 17580000
*                                                            *   @R01AX 17590000
*    REG       VALUE                                         *   @R01AX 17600000
*                                                            *   @R01AX 17610000
*    R0-R1     WORK REGISTERS                                *   @R01AX 17620000
*    R2        DTE BASE ADDRESS                              *   @R01AX 17630000
*    R3-R8     WORK REGISTERS                                *   @R01AX 17640000
*    R9        *** RESERVED ***                              *   @R01AX 17650000
*    R10       WORK REGISTER                                 *   @R01AX 17660000
*    R11       HCT BASE ADDRESS                              *   @R01AX 17670000
*    R12       CNVT data base address                        * @R10LADR 17680000
*    R13       PCE BASE ADDRESS                              *   @R01AX 17690000
*    R14       LINK/WORK REGISTER                            *   @R01AX 17700000
*    R15       LINK/WORK REGISTER                            *   @R01AX 17710000
*                                                            *   @R01AX 17720000
*   OTHER CONSIDERATIONS:                                    *   @R01AX 17730000
*                                                            *   @R01AX 17740000
*        None                                                *   @R01AX 17750000
*                                                            *   @R01AX 17760000
**************************************************************   @R01AX 17770000
         SPACE 1                                                 @R01AX 17780000
         USING DTE,R2              Est DTE addressability        @R01AX 17790000
         SPACE 1                                                 @R01AX 17810000
XCCALRTM $SAVE TRACE=YES           Save caller registers         @R01AX 17820000
         SPACE 1                                                 @R01AX 17830000
         LARL  R12,CNVTDATA        Get addr of CNVT data area  @Z09LCAN 17832000
         EJECT ,                                               @Z21LCNV 17833000
************************************************************** @Z21LCNV 17834000
*                                                            * @Z21LCNV 17835000
*        Before actially issuing the CALLRTM, give the       * @Z21LCNV 17836000
*        subtask 0.25 seconds to complete normally.          * @Z21LCNV 17837000
*                                                            * @Z21LCNV 17838000
************************************************************** @Z21LCNV 17839000
         SPACE 1                                               @Z21LCNV 17840000
         LA    R1,JPCETQE          Get address of PCE TQE      @Z21LCNV 17841000
         LHI   R0,-25              Set time interval           @Z21LCNV 17842000
         ST    R0,TQETIME(,R1)      in TQE                     @Z21LCNV 17843000
         ST    R13,TQEPCE(,R1)     Store PCE address in TQE    @Z21LCNV 17844000
         SPACE 1                                               @Z21LCNV 17845000
        $STIMER (R1)               Chain this TQE              @Z21LCNV 17846000
         SPACE 1                                               @Z21LCNV 17847000
        $WAIT  WORK,XECB=JPCECECB  $WAIT for subtask or timer  @Z21LCNV 17848000
         SPACE 1                                               @Z21LCNV 17849000
        $TTIMER JPCETQE,CANCEL     Cancel remainder of time    @Z21LCNV 17850000
         SPACE 1                                               @Z21LCNV 17851000
         TM    JPCECECB,ECBPOST    Has subtask completed?      @Z21LCNV 17852000
         JO    XCANSKP               Yes, skip cancel          @Z22LDEP 17853000
         EJECT ,                                               @Z21LCNV 17854000
************************************************************** @Z21LCNV 17855000
*                                                            * @Z21LCNV 17856000
*        Subtask has not completed, set ABEND reason code    * @Z21LCNV 17857000
*        and determine what form of CALLRTM is needed.       * @Z21LCNV 17858000
*                                                            * @Z21LCNV 17859000
************************************************************** @Z21LCNV 17860000
         SPACE 1                                               @Z21LCNV 17861000
         ICM   R4,B'1100',PCEID    Set PCE id for reason code  @Z21LCNV 17862000
         IILL  R4,X'0200'          Set JES2 component indicatr @Z21LCNV 17863000
         SPACE 1                                               @Z21LCNV 17864000
        $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z21LCNVC17865000
               SYSSTATE=SET                                    @Z21LCNV 17866000
         SPACE 1                                               @Z21LCNV 17867000
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 17868000
         SPACE 1                                               @Z21LCNV 17869000
         L     R3,JPCECIP          Get CIPARM address          @Z21LCNV 17870000
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z21LCNV 17872000
         SPACE 1                                               @Z21LCNV 17874000
         L     R1,PSAAOLD-PSA(,0)  Get ASCB                    @Z21LCNV 17876000
         LAE   R1,0(R1)            Ensure AR1 is zero          @Z21LCNV 17878000
         CLC   CIPASID,ASCBASID-ASCB(R1)  Same address space?  @Z21LCNV 17880000
         JNE   XCANCIAS                     No, JES2CI cancel  @Z21LCNV 17882000
         EJECT ,                                               @Z21LCNV 17892000
************************************************************** @Z21LCNV 17894000
*                                                            * @Z21LCNV 17896000
*        Cancel subtask running in this address space        * @Z21LCNV 17898000
*                                                            * @Z21LCNV 17900000
************************************************************** @Z21LCNV 17902000
         SPACE 1                                               @Z21LCNV 17904000
         L     R2,JPCEDTE          Get DTE address             @Z21LCNV 17906000
         LAE   R2,0(R2)            Ensure AR2 is zero          @Z21D143 17906200
         OI    DTEFLAG2,DTE2CRTM   Subtask term'ed by CALLRTM  @Z21D143 17906400
         TM    CIPFLG1,CIP1CRDP    Was a dump requested?       @Z21D143 17906600
         JNO   XCSNDUMP              No, skip setting bit      @Z21D143 17906800
         OI    DTEFLAG2,DTE2$CD      Yes, ind dump requested   @Z21D143 17907000
         SPACE 1                                               @Z21D143 17907200
         DROP  R3                  Drop CIPARM                 @Z21D143 17907400
         SPACE 1                                               @Z21D143 17907600
XCSNDUMP $ARMODE OFF,SYSSTATE=SET  Back to primary mode        @Z21D143 17907800
         L     R3,DTETCB           Get subtask's TCB address   @Z21LCNV 17908000
         SPACE 1                                               @Z21LCNV 17910000
        $GETWORK WORDS=18,USE=CRTM CALLRTM work area           @Z09LCAN 17911000
         LR    R13,R1              Set CALLRTM work area addr  @Z09LCAN 17912000
         SPACE 1                                               @Z09LCAN 17913000
         DROP  R13                 Drop PCE                    @Z09LCAN 17914000
         SPACE 1                                               @Z09LCAN 17915000
XCSETKEY MODESET EXTKEY=ZERO,                                    @R01AXC17920000
               RELATED=XCRESETK    Switch to key zero            @R01AX 17930000
         SPACE 1                                                 @R01AX 17940000
XCSETLCK SETLOCK OBTAIN,                                         @R01AXC17950000
               TYPE=LOCAL,                                       @R01AXC17960000
               MODE=UNCOND,                                      @R01AXC17970000
               RELATED=XCRELLCK,                                 @R01AXC17980000
               REGS=USE            Obtain the local lock         @R01AX 17990000
         EJECT ,                                               @Z09LCAN 17992000
*------------------------------------------------------------* @Z09LCAN 17994000
*        CALLRTM assumes R13 points to a 72 byte area that   * @Z09LCAN 17996000
*        it can stomp.  This messes up the PCE if left in    * @Z09LCAN 17998000
*        R13.                                                * @Z09LCAN 18000000
*                                                            * @Z09LCAN 18002000
*        CALLRTM will also destroy R6                        * @Z09LCAN 18004000
*------------------------------------------------------------* @Z09LCAN 18006000
         SPACE 1                                               @Z09LCAN 18008000
         CALLRTM TYPE=ABTERM,                                    @R01AXC18010000
               COMPCOD=X'422',                                   @R01AXC18020000
               REASON=(4),                                       @R01AXC18030000
               RETRY=NO,                                         @R01AXC18040000
               DUMP=NO,                                          @R01AXC18050000
               TCB=(3)             Terminate subtask             @R01AX 18060000
         SPACE 1                                                 @R01AX 18070000
XCRELLCK SETLOCK RELEASE,                                        @R01AXC18080000
               TYPE=LOCAL,                                       @R01AXC18090000
               RELATED=XCSETLCK,                                 @R01AXC18100000
               REGS=USE            Release the local lock        @R01AX 18110000
         SPACE 1                                                 @R01AX 18120000
XCRESETK MODESET EXTKEY=HASP,                                    @R01AXC18130000
               RELATED=XCSETKEY    Switch back to JES2 key       @R01AX 18130200
         SPACE 1                                               @Z09LCAN 18130400
         LR    R1,R13              Restore PCE                 @Z09LCAN 18130600
         L     R13,$CURPCE           base address              @Z09LCAN 18130800
         EJECT ,                                               @Z09LCAN 18131000
         USING PCE,R13             Est PCE addressability      @Z09LCAN 18131200
         SPACE 1                                               @Z09LCAN 18131400
        $RETWORK (R1)              Return work area            @Z09LCAN 18131600
         J     XCANRET             Return to caller            @Z21LCNV 18131800
         EJECT ,                                               @Z21LCNV 18132000
************************************************************** @Z21LCNV 18132200
*                                                            * @Z21LCNV 18132400
*        ABEND TCB in JES2CI address space                   * @Z21LCNV 18132600
*                                                            * @Z21LCNV 18132800
************************************************************** @Z21LCNV 18133000
         SPACE 1                                               @Z21LCNV 18133200
         USING CIPARM,R3           Est CIPARM addressability   @Z21LCNV 18133400
         SYSSTATE ASCENV=AR        Indicate in AR mode         @Z21LCNV 18133600
         SPACE 1                                               @Z21LCNV 18133800
XCANCIAS LLH   R2,CIPASID          Get ASID                    @Z21LCNV 18134000
         MVC   JPCETTKN,CIPTTOKN   Get TTOKEN                  @Z21LCNV 18134200
         SPACE 1                                               @Z21LCNV 18134400
        $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z21LCNV 18134600
         SPACE 1                                               @Z21LCNV 18134800
         LR    R10,R13             Save PCE address            @Z21LCNV 18135000
        $GETWORK WORDS=18,USE=CRTM CALLRTM work area           @Z21LCNV 18135200
         LR    R13,R1              Set CALLRTM work area addr  @Z21LCNV 18135400
         SPACE 1                                               @Z21LCNV 18135600
         DROP  R3,R13              Drop CIPARM PCE             @Z22LDEP 18135800
         USING PCE,R10             Est temp PCE addressability @Z21LCNV 18136000
         SPACE 1                                               @Z21LCNV 18136200
         MODESET EXTKEY=ZERO       Get key 0 for CALLRTM       @Z21LCNV 18136400
         EJECT ,                                               @Z21LCNV 18136600
*------------------------------------------------------------* @Z21LCNV 18136800
*        CALLRTM assumes R13 points to a 72 byte area that   * @Z21LCNV 18137000
*        it can stomp.  This messes up the PCE if left in    * @Z21LCNV 18137200
*        R13.                                                * @Z21LCNV 18137400
*                                                            * @Z21LCNV 18137600
*        CALLRTM will also destroy R6                        * @Z21LCNV 18137800
*------------------------------------------------------------* @Z21LCNV 18138000
         SPACE 1                                               @Z21LCNV 18138200
         CALLRTM TYPE=ABTERM,      Cancel job select task      @Z21LCNVC18138400
               COMPCOD=X'422',     Cancel ABEND code           @Z21LCNVC18138600
               REASON=(4),         Set converter cancel reason @Z21LCNVC18138800
               RETRY=NO,           Do not allow retry          @Z21D143C18139000
               DUMP=NO,            Do not take CALLRTM dump    @Z21D143C18139200
               ASID=(2),           Address space and           @Z21LCNVC18139400
               TTOKEN=JPCETTKN       task to terminate         @Z21D143 18139600
         SPACE 1                                               @Z21LCNV 18139800
         MODESET EXTKEY=JES        Back to key 1               @Z21LCNV 18140000
         LR    R1,R13              Restore PCE                 @Z21LCNV 18140200
         L     R13,$CURPCE           base address              @Z21LCNV 18140900
         SPACE 1                                               @Z21LCNV 18141600
         DROP  R10                 Drop temp PCE               @Z21LCNV 18142300
         USING PCE,R13             Back to PCE addressability  @Z21LCNV 18143000
         SPACE 1                                               @Z21LCNV 18143700
        $RETWORK (R1)              Return work area            @Z21LCNV 18144400
         J     XCANRET             Return to caller            @Z22LDEP 18144800
         EJECT ,                                               @Z22LDEP 18145400
************************************************************** @Z09LCAN 18146100
*                                                            * @Z09LCAN 18146800
*        Return to caller                                    * @Z09LCAN 18147500
*                                                            * @Z09LCAN 18148200
************************************************************** @Z09LCAN 18148900
         SPACE 1                                                 @R01AX 18150000
XCANSKP $ARMODE ON,INIT=$ZEROES,   Enter AR mode               @Z22LDEPC18150600
               SYSSTATE=SET                                    @Z22LDEP 18151200
         SPACE 1                                               @Z22LDEP 18151800
         USING CIPARM,R3           Est CIPARM addressability   @Z22LDEP 18152400
         SPACE 1                                               @Z22LDEP 18153000
         L     R3,JPCECIP          Get CIPARM address          @Z22LDEP 18153600
         LAM   AR3,AR3,$PSOTOK       and ALET                  @Z22LDEP 18154200
         SPACE 1                                               @Z22LDEP 18154800
         NIL   CIPFLG1,FF-CIP1CRTM-CIP1CRDP, CALLRTM skipped   @Z22LDEPC18155400
               REF=CIPARM,                    reset call and   @Z22LDEPC18156000
               WREGS=(R14,R15,R1,R14)           dump flags     @Z22LDEP 18156600
         SPACE 1                                               @Z22LDEP 18157200
        $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z22LDEP 18157800
         SPACE 1                                               @Z22LDEP 18158400
XCANRET $RETURN ,                  Return to caller            @Z21LCNV 18160000
         SPACE 1                                                 @R01AX 18190000
         DROP  R2,R3               Drop DTE, CIPARM            @Z21LCNV 18200000
         SPACE 1                                               @Z21LCNV 18202000
CNVTDATA LOCTR ,                   Place in data area          @Z21LCNV 18204000
         LTORG ,                                               @Z21LCNV 18206000
HASPCNVT LOCTR ,                   Back to main code           @Z21LCNV 18208000
         TITLE 'HASP JCL Conversion Module -- PROCALOC  -- $SUBIT PROCLC18210000
               IB Allocation Request'                          @Z02P007 18220000
************************************************************** @Z02P007 18230000
*                                                            * @Z02P007 18240000
*        PROCALOC - $SUBIT PROCLIB allocation request        * @Z02P007 18250000
*                                                            * @Z02P007 18260000
* FUNCTION:                                                  * @Z02P007 18270000
*                                                            * @Z02P007 18280000
*        Sets up for and issues a $SUBIT for routine         * @Z02P007 18290000
*        PROCALCS to allocate or unallocate a PROCLIB,       * @Z24LDRD 18300000
*        SUBMITLIB, or POLICYLIB concatenation.              * @S306943 18310000
*                                                            * @Z02P007 18320000
* LINKAGE:                                                   * @Z02P007 18330000
*                                                            * @Z02P007 18340000
*        Via $CALL PROCALOC (address in the $PADDR)          * @Z02P007 18350000
*                                                            * @Z02P007 18360000
* ENVIRONMENT:                                               * @Z02P007 18370000
*                                                            * @Z02P007 18380000
*        JES2 MAIN TASK                                      * @Z02P007 18390000
*                                                            * @Z02P007 18400000
* REGISTER USAGE (ENTRY/EXIT):                               * @Z02P007 18410000
*                                                            * @Z02P007 18420000
*    REG       VALUE ON ENTRY             VALUE ON EXIT      * @Z02P007 18430000
*                                                            * @Z02P007 18440000
*    R0        ALLOC (1) or UNALLOC (0)   Destroyed          * @Z02P007 18450000
*              indicator                                     * @Z02P007 18460000
*    R1        PAD address                For unallocate     * @Z21LCNV 18470000
*              (ALET qualified)           if RC=0, address   * @Z21LCNV 18480000
*                                         of previous PAD    * @Z02P007 18490000
*    R2-R10    N/A                        UNCHANGED          * @Z02P007 18500000
*    R11       HCT ADDRESS                UNCHANGED          * @Z02P007 18510000
*    R12       N/A                        UNCHANGED          * @Z02P007 18520000
*    R13       PCE ADDRESS                UNCHANGED          * @Z02P007 18530000
*    R14       RETURN ADDRESS             UNCHANGED          * @Z02P007 18540000
*    R15       ENTRY ADDRESS              Return Code        * @Z02P007 18550000
*                                                            * @Z02P007 18560000
* RETURN CODES (R15 ON EXIT):                                * @Z02P007 18570000
*                                                            * @Z02P007 18580000
*        0  -  Continue processing                           * @Z02P007 18590000
*        4  -  $SUBIT request failed                         * @Z02P007 18600000
*        8  -  Allocation request (PROCALCS) failed          * @Z02P007 18610000
*                                                            * @Z02P007 18620000
************************************************************** @Z02P007 18630000
         SPACE 1                                               @Z02P007 18640000
         USING PAD,R4              Est PAD addressability      @Z02P007 18650000
        $RUSE  RX=R5,USE=(USING,ALLOC_IND)  Allocate flag      @Z02P007 18660000
         USING PRAWORK,R7          Est PRAWORK addressability  @Z21LCNV 18665000
         USING SQD,PRAWORK         Est SQD addressability      @Z21LCNV 18670000
         USING HCCT,R10            Est HCCT addressability     @Z21LCNV 18672000
         SYSSTATE ASCENV=AR        Run in AR mode              @Z21LCNV 18675000
         EJECT ,                                               @Z02P007 18680000
PROCALOC $ENTRY BASE=(R12),SAVE=(YES,TRACE)  Save callers regs @Z21LCNV 18690000
         LARL  R12,PROCALOC        Set local base              @Z21LCNV 18710000
         LAM   AR2,AR15,$ZEROS     Ensure ARs are zero         @Z21LCNV 18720000
         SPACE 1                                               @Z02P007 18740000
         LHI   R7,0                Assume no SQD               @Z21LCNV 18745000
         LAE   R4,0(,R1)           Get PAD address             @Z21LCNV 18750000
         LR    R5,R0               Get request indicator       @Z02P007 18760000
         LLGT  R10,$HCCT           Get HCCT address            @Z21LCNV 18765000
         EJECT ,                                                 @Z22DZ 18770000
************************************************************** @Z24LDRD 18770100
*                                                            * @Z24LDRD 18770400
*        If this is an allocate request, assign a DD name    * @Z24LDRD 18770700
*        for the concatenation based on the type.            * @Z24LDRD 18771000
*                                                            * @Z24LDRD 18771300
************************************************************** @Z24LDRD 18771600
         SPACE 1                                               @Z24LDRD 18771900
         CIJNE R5,1,PRCNALC        Skip DDNAME if not allocate @Z24LDRD 18772200
         SPACE 1                                               @Z24LDRD 18772500
         L     R0,$PROCDDN         Update                      @Z24LDRD 18772800
PRCDDNLP LR    R1,R0                 DDNAME                    @Z24LDRD 18773100
         AHI   R1,1                    sequence                @Z24LDRD 18773400
         CS    R0,R1,$PROCDDN            number                @Z24LDRD 18773700
         JNE   PRCDDNLP            Retry if interference       @Z24LDRD 18774000
         SPACE 1                                               @Z24LDRD 18774300
         CVD   R1,$DWORK           Convert to decimal          @Z24LDRD 18774600
         MVC   PADALCDD,=XL8'F021202020202020' Edit number     @Z24LDRD 18774900
         ED    PADALCDD,$DWORK+4                into DD name   @Z24LDRD 18775200
         MVC   PADALCDD(3),=CL3'$PR'  Set PROCLIB constant     @Z24LDRD 18775500
         CLI   PADTYPE,PADTPROC    Really PROCLIB              @Z24LDRD 18775800
         JE    PRCNALC               Yes, go allocate          @Z24LDRD 18776100
         MVC   PADALCDD(3),=CL3'$SB'  Set SUBMITLIB constant   @Z24D156 18776400
         CLI   PADTYPE,PADTSBMT    SUBMITLIB PAD?              @Z24D156 18776700
         JE    PRCNALC               Yes, go allocate          @Z24LDRD 18777000
         MVC   PADALCDD(3),=CL3'$PL'  Set POLICYLIB constant   @S306943 18777300
         EJECT ,                                               @Z24LDRD 18777600
************************************************************** @Z24LDRD 18777900
*                                                            * @Z24LDRD 18778200
*        Get a SQD and $SUBIT the PROCALCS routine           * @Z24LDRD 18778500
*                                                            * @Z24LDRD 18778800
************************************************************** @Z24LDRD 18779100
         SPACE 1                                               @Z24LDRD 18779400
PRCNALC $CPOOL ACTION=GET,TYPE=SQD  Get storage for SQD        @Z24LDRD 18780000
         LR    R7,R1               Set SQD base address        @Z02P007 18800000
         MVC   SQDID,=CL4'SQD '    Set SQD identifier          @Z02P007 18810000
         MVI   SQDLEVEL,SQDVERSN   Set SQD version             @Z02P007 18820000
         EJECT ,                                               @Z02P007 18830000
        $SUBIT PROCALCS,SQDADDR=SQD,PARM0=(R5),PARM1=PAD,      @Z02P007C18840000
               UNCOND=YES,PRIORITY=HIGH,WAIT=YES  Make request @Z02P007 18850000
         LR    R2,R15              Save return code            @Z02P007 18860000
         L     R3,SQDRRTN          Save routine RC             @Z02P007 18870000
         SPACE 1                                               @Z02P007 18900000
         LTR   R2,R2               Did the $SUBIT work?        @Z02P007 18910000
         JNZ   PRCLRET4             No, return error to caller @Z02P007 18920000
         LTR   R3,R3               Did the PROCALCS work?      @Z02P007 18930000
         JNZ   PRCLRET8             No, return error to caller @Z02P007 18940000
         EJECT ,                                               @Z21LCNV 18940200
************************************************************** @Z21LCNV 18940800
*                                                            * @Z21LCNV 18941400
*        We successfully allocated the PROCLIB locally,      * @Z21LCNV 18942000
*        ensure all C/I address spaces allocated it before   * @Z21LCNV 18942600
*        declaring success.                                  * @Z21LCNV 18943200
*                                                            * @Z21LCNV 18943800
************************************************************** @Z21LCNV 18944400
         SPACE 1                                               @Z21LCNV 18945000
         LTR   R5,R5               Allocate request?           @Z21LCNV 18945600
         JZ    PRCLUNAL              No, process unallocate    @Z21LCNV 18946200
         CLI   PADTYPE,PADTPROC    PROCLIB allocation?         @Z24LDRD 18946400
         JNE   PRCLRET0              No, return to caller      @Z24LDRD 18946600
PRCALRTY CLC   CCTCICB,CCTZEROS    Any JES2 C/I addr spaces?   @Z21LCNV 18946800
         JE    PRCLRET0              No, return to caller      @Z21LCNV 18947400
         SPACE 1                                               @Z21LCNV 18948000
         USING PADA,R3             Est PADA addressability     @Z21LCNV 18950000
         SPACE 1                                               @Z21LCNV 18950400
         LAY   R3,PADCIALC         Get 1st PADA                @Z21LCNV 18951000
         CPYA  AR3,AR4               and ALET                  @Z21LCNV 18951600
         LHI   R2,$MAXCNVT         Get number of PADAs         @Z21LCNV 18952200
         LHI   R6,0                Not allocated PADAs         @Z21LCNV 18952800
         SPACE 1                                               @Z21LCNV 18953400
PRCPALOP LT    R14,PADACICB        PADA assigned?              @Z22D064 18953600
         JZ    PRCPANXT              No, get next              @Z22D064 18954000
         LAE   R14,0(R14,0)        Ensure AR14 is zero         @Z22D064 18954400
         TM    CCBSTAT-CICB(R14),CCBSTERM+CCBSEOM  Address     @Z23LCNVC18954600
                                     space going or gone?      @Z23LCNV 18954700
         JNZ   PRCPANXT              Yes, get next             @Z23LCNV 18954900
         TM    PADAFLG1,PADA1ALF   Allocation failed?          @Z21LCNV 18955200
         JO    PRCPAERR              Yes, fail request           @Z22DZ 18955800
         TM    PADAFLG1,PADA1ALC   PROCLIB allocated?          @Z21LCNV 18956400
         JO    PRCPANXT              Yes, get next PADA        @Z21LCNV 18957000
         AHI   R6,1                  No, count unallocated     @Z21LCNV 18957600
PRCPANXT LA    R3,PADA+PADALEN     Get next PADA               @Z21LCNV 18958200
         JCT   R2,PRCPALOP         Loop for all PADA           @Z21LCNV 18960000
         SPACE 1                                               @Z21LCNV 18960600
         LTR   R6,R6               Everyone allocated?         @Z21LCNV 18961200
         JZ    PRCLRET0              Yep, return success       @Z21LCNV 18961800
         SPACE 1                                               @Z21LCNV 18962400
        $WAIT  PROCLIB             Wait for PROCLIB            @Z21LCNV 18963000
         J     PRCALRTY            Check allocates again       @Z21LCNV 18963600
         SPACE 1                                               @Z21LCNV 18964200
         DROP  R3                  Drop PADA                   @Z21LCNV 18964800
         EJECT ,                                               @Z21LCNV 18965400
************************************************************** @Z21LCNV 18966000
*                                                            * @Z21LCNV 18966600
*        A JES2 C/I address space failed to allocate the     * @Z21LCNV 18967200
*        PROCLIB, mark it for deletion, and send it to all   * @Z21LCNV 18967800
*        JES2 C/I address spaces that did allocate it.       * @Z21LCNV 18968400
*                                                            * @Z21LCNV 18970000
************************************************************** @Z21LCNV 18970200
         SPACE 1                                               @Z21LCNV 18970800
PRCPAERR OI    PADFLAG1,PAD1DEL+PAD1CIFA  Ind delete and fail  @Z21LCNV 18971400
         SPACE 1                                               @Z21LCNV 18972000
         LAY   R3,PADCIALC         Get 1st PADA                @Z21LCNV 18972600
         CPYA  AR3,AR4               and ALET                  @Z21LCNV 18973200
         LHI   R2,$MAXCNVT         Get number of PADAs         @Z21LCNV 18973800
         LHI   R6,0                Not allocated PADAs         @Z21LCNV 18974400
         SPACE 1                                               @Z21LCNV 18975000
         USING PADA,R3             Est PADA addressability     @Z21LCNV 18975600
         USING CICB,R8             Est CICB addressability     @Z21LCNV 18976200
         USING ASEO,CCBODA         Est ASEO addressability     @Z21LCNV 18976800
         SPACE 1                                               @Z21LCNV 18977400
PRCUNLOP LT    R8,PADACICB         PADA assigned?              @Z21LCNV 18978000
         JE    PRCUNNXT              No, get next              @Z21LCNV 18980000
         TM    PADAFLG1,PADA1ALC   PROCLIB allocated?          @Z21LCNV 18980400
         JNO   PRCUNNXT              Yes, get next PADA        @Z21LCNV 18981000
         SPACE 1                                               @Z21LCNV 18981600
*------------------------------------------------------------* @Z21LCNV 18982200
*        PROCLIB (PAD) is allocated to C/I address space,    * @Z21LCNV 18982800
*        post it to cause unallocation.                      * @Z21LCNV 18983400
*------------------------------------------------------------* @Z21LCNV 18984000
         SPACE 1                                               @Z21LCNV 18984600
         ST    R4,CCBPAD           Set PAD to allocate         @Z21LCNV 18985200
         SPACE 1                                               @Z21LCNV 18985800
         OIL   CCBREQS,CCBRPROC,REF=CICB,  Ind process         @Z21LCNVC18986400
               WREGS=(R14,R15,R1)            PROCLIB requests  @Z21LCNV 18987000
         EJECT ,                                                 @Z22DZ 18987600
        $ARMODE OFF,SYSSTATE=SET   Exit AR mode for post         @Z24DI 18987900
         L     R3,ASEOASCB         Get address space ASCB      @Z21LCNV 18988200
         SPACE 1                                               @Z21LCNV 18990000
         POST  CCBWECB,0,          Post CI addr space work ECB @Z21LCNVC18990600
               ASCB=(3),           C/I address space ASCB      @Z21LCNVC18991200
               ERRET=PRAPSTER,     Error processing routine    @Z21LCNVC18991800
               ECBKEY=0,           Post ECB using key 0        @Z21LCNVC18992400
               LINKAGE=SYSTEM,     Use PC linkage              @Z21LCNVC18993000
               MF=(E,PRAPOST)      Pointer to the list form    @Z21LCNV 18993600
        $ARMODE ON,SYSSTATE=SET    Restore AR mode               @Z24DI 18993900
         SPACE 1                                               @Z21LCNV 18994200
         AHI   R6,1                  No, count unallocated     @Z21LCNV 18994800
PRCUNNXT LA    R3,PADA+PADALEN     Get next PADA               @Z21LCNV 18995400
         JCT   R2,PRCUNLOP         Loop for all PADA           @Z21LCNV 18996000
         SPACE 1                                               @Z21LCNV 18996600
         DROP  R8                  Drop PADA, CICB             @Z21LCNV 18997200
         EJECT ,                                               @Z21LCNV 18997800
*------------------------------------------------------------* @Z21LCNV 18998400
*        Once again loop through the PADAs ensuring all      * @Z21LCNV 19000000
*        unallocates done.                                   * @Z21LCNV 19000200
*------------------------------------------------------------* @Z21LCNV 19000800
         SPACE 1                                               @Z21LCNV 19001400
         LAY   R3,PADCIALC         Get 1st PADA                @Z21LCNV 19002000
         CPYA  AR3,AR4               and ALET                  @Z21LCNV 19002600
         LHI   R2,$MAXCNVT         Get number of PADAs         @Z21LCNV 19003200
         LHI   R6,0                Not allocated PADAs         @Z21LCNV 19003800
         SPACE 1                                               @Z21LCNV 19004400
PRCERLOP LT    R14,PADACICB        PADA assigned?              @Z22D064 19004800
         JZ    PRCERNXT              No, get next              @Z22D064 19005000
         LAE   R14,0(R14,0)        Ensure AR14 is zero         @Z22D064 19005200
         TM    CCBSTAT-CICB(R14),CCBSEOM  Address space gone?  @Z22D064 19005600
         JO    PRCERNXT              Yes, get next             @Z22D064 19005900
         TM    PADAFLG1,PADA1ALC   PROCLIB allocated?          @Z21LCNV 19006200
         JNO   PRCERNXT              No, get next PADA         @Z21LCNV 19006800
         AHI   R6,1                  No, count unallocated     @Z21LCNV 19007400
PRCERNXT LA    R3,PADA+PADALEN     Get next PADA               @Z21LCNV 19008000
         JCT   R2,PRCERLOP         Loop for all PADA           @Z21LCNV 19008600
         SPACE 1                                               @Z21LCNV 19010000
         LTR   R6,R6               Everyone unallocated?       @Z21LCNV 19010400
         JZ    PRCERUNA              Yep, unallocate locally   @Z21LCNV 19011000
         SPACE 1                                               @Z21LCNV 19011600
        $WAIT  PROCLIB             Wait for PROCLIB            @Z21LCNV 19012200
         J     PRCALRTY            Check allocates again       @Z21LCNV 19012800
         SPACE 1                                               @Z21LCNV 19013400
         DROP  R3                  Drop PADA                   @Z21LCNV 19014000
         EJECT ,                                               @Z21LCNV 19014600
*------------------------------------------------------------* @Z21LCNV 19015200
*        Unallocate the PROCLIB locally                      * @Z21LCNV 19015800
*------------------------------------------------------------* @Z21LCNV 19016400
         SPACE 1                                               @Z21LCNV 19017000
PRCERUNA MVC   SQDID,=CL4'SQD '    Set SQD identifier          @Z21LCNV 19017600
         MVI   SQDLEVEL,SQDVERSN   Set SQD version             @Z21LCNV 19018200
         SPACE 1                                               @Z21LCNV 19020000
        $SUBIT PROCALCS,SQDADDR=SQD,PARM0=0,PARM1=PAD,         @Z21LCNVC19020600
               UNCOND=YES,PRIORITY=HIGH,WAIT=YES  Make request @Z21LCNV 19021500
         J     PRCLRET8            Return error to caller      @Z21LCNV 19022400
         EJECT ,                                               @Z21LCNV 19023300
************************************************************** @Z21LCNV 19024200
*                                                            * @Z21LCNV 19025100
*        Unallocate call was successful, dechain and free    * @Z21LCNV 19026000
*        the PAD.                                            * @Z21LCNV 19026900
*                                                            * @Z21LCNV 19027800
************************************************************** @Z21LCNV 19028700
         SPACE 1                                               @Z02P007 19030000
PRCLUNAL CL    R4,PADDAD           Is the dad pad leaving?     @Z21LCNV 19060000
         JE    PRCLDDAD              Yes, make dad history     @Z02P007 19070000
         SPACE 1                                               @Z02P007 19080000
        $RUSE  RX=R5,USE=(DROP,ALLOC_IND)  Allocate flag       @Z02P007 19090000
         SPACE 1                                               @Z02P007 19100000
*------------------------------------------------------------* @Z02P007 19110000
*        Delete child PAD from DAD                           * @Z02P007 19120000
*------------------------------------------------------------* @Z02P007 19130000
         SPACE 1                                               @Z02P007 19140000
PREV     USING PAD,R3              Est previous PAD addr'blity @Z02P007 19150000
         SPACE 1                                               @Z02P007 19160000
         L     R3,PADDAD           Get DAD PAD                 @Z02P007 19170000
         CPYA  AR3,AR4               and ALET                  @Z21LCNV 19175000
         SPACE 1                                               @Z02P007 19180000
PRCLDALP CL    R4,PREV.PADALT      Is this our PAD?            @Z02P007 19190000
         JE    PRCLDAFA              Yes, dechain from DAD     @Z02P007 19200000
         ICM   R3,B'1111',PREV.PADALT  Get next ALT PAD        @Z02P007 19210000
         JNZ   PRCLDALP                Loop until done         @Z02P007 19220000
         J     PRCLRETS            Not found?  Just free PAD   @Z02P007 19230000
         SPACE 1                                               @Z02P007 19240000
PRCLDAFA MVC   PREV.PADALT,PADALT  Dechain PAD from DAD        @Z02P007 19250000
         J     PRCLRETS            Go return old PAD           @Z02P007 19260000
         EJECT ,                                               @Z24LDRD 19270000
*------------------------------------------------------------* @Z02P007 19280000
*        Delete DAD PAD from PAD chain                       * @Z02P007 19290000
*------------------------------------------------------------* @Z02P007 19300000
         SPACE 1                                               @Z02P007 19310000
PRCLDDAD CLI   PADTYPE,PADTPROC    PROCLIB PAD?                @Z24LDRD 19315000
         JNE   PRCLAJCL              No, check JCL             @Z24LDRD 19320000
         L     R3,$HCCT            Get HCCT address            @Z24LDRD 19322000
         LAE   R3,CCTPAD-HCCT-(PADPAD-PAD)(R3,0)  Get 0th PAD  @Z21LCNV 19325000
         J     PRCLDDLP            Go process chain            @Z24LDRD 19325200
         SPACE 1                                               @Z24LDRD 19325600
PRCLAJCL CLI   PADTYPE,PADTSBMT    SUBMITLIB PAD?              @Z24D156 19326000
         JNE   PRCLAPCY              No, must be Policy        @Z24LDRD 19326400
         L     R3,$SBMT            Get submit work area        @Z24LDRD 19326800
         LAY   R3,SBTDDLIB-SBMT-(PADPAD-PAD)(,R3)  Get 0th PAD @Z24LDRD 19327200
         LAE   R3,0(R3,0)          Ensure AR3 is zero          @Z24LDRD 19327600
         J     PRCLDDLP            Go process chain            @Z24LDRD 19328000
         SPACE 1                                               @Z24LDRD 19328400
PRCLAPCY LAE   R3,$POLCYDD-(PADPAD-PAD)  Get 0th PAD           @Z24LDRD 19328800
         SPACE 1                                               @Z02P007 19330000
PRCLDDLP CL    R4,PREV.PADPAD      Is this our PAD?            @Z02P007 19340000
         JE    PRCLDDFA              Yes, remove from chain    @Z24LDRD 19350000
         LT    R3,PREV.PADPAD -+   Get next PAD                @Z21LCNV 19360000
         CPYA  AR3,AR4         |     (Copy ALET)               @Z21LCNV 19365000
         JNZ   PRCLDDLP     ---+     Loop until done           @Z21LCNV 19370000
         J     PRCLRETS            Not found?  Just free PAD   @Z02P007 19380000
         SPACE 1                                               @Z02P007 19390000
PRCLDDFA MVC   PREV.PADPAD,PADPAD  Dechain PAD from chain      @Z02P007 19400000
         SPACE 1                                               @Z02P007 19410000
         DROP  PREV                Drop Previous PAD           @Z02P007 19420000
         EJECT ,                                               @Z02P007 19430000
*------------------------------------------------------------* @Z02P007 19440000
*        Free PAD storage                                    * @Z02P007 19450000
*------------------------------------------------------------* @Z02P007 19460000
         SPACE 1                                               @Z02P007 19470000
PRCLRETS LAE   R1,0(,R3)           Get previous PAD address    @Z21LCNV 19480000
        $STORE QREGS=(R1)          Save for caller             @Z21LCNV 19490000
         SPACE 1                                               @Z02P007 19500000
         $CPOOL ACTION=FREE,TYPE=PAD,CELL=PAD  Free PAD        @Z21LCNV 19560000
         EJECT ,                                               @Z02P007 19600000
************************************************************** @Z02P007 19610000
*                                                            * @Z02P007 19620000
*        Return to caller                                    * @Z02P007 19630000
*                                                            * @Z02P007 19640000
************************************************************** @Z02P007 19650000
         SPACE 1                                               @Z02P007 19660000
PRCLRET0 LHI   R8,0                Set good return code        @Z21LCNV 19670000
         J     PRCLRET             Go return to caller         @Z02P007 19680000
         SPACE 1                                               @Z02P007 19690000
PRCLRET4 LHI   R8,4                Set $SUBIT error RC         @Z21LCNV 19700000
         J     PRCLRET             Go return to caller         @Z02P007 19710000
         SPACE 1                                               @Z02P007 19720000
PRCLRET8 LHI   R8,8                Set allocation error RC     @Z21LCNV 19730000
         SPACE 1                                               @Z21LCNV 19731000
PRCLRET  LTR   R7,R7               Is there a SQD to free?     @Z21LCNV 19732000
         JZ    PRCLRTN               No, skip free             @Z21LCNV 19733000
         SPACE 1                                               @Z21LCNV 19734000
        $CPOOL ACTION=FREE,TYPE=SQD,CELL=SQD  Free the SQD     @Z21LCNV 19735000
         SPACE 1                                               @Z02P007 19740000
PRCLRTN $RETURN RC=(R8)            Return to caller            @Z21LCNV 19750000
         SPACE 1                                               @Z02P007 19760000
         SYSSTATE ASCENV=P         Back to primary mode        @Z21LCNV 19760400
         DROP  R4,R7,R10,R12       Drop PAD, SQD, HCCT, Local  @Z21LCNV 19760800
         SPACE 1                                               @Z21LCNV 19761200
         LTORG ,                                               @Z21LCNV 19761600
         EJECT ,                                               @Z21LCNV 19762000
************************************************************** @Z21LCNV 19762400
*                                                            * @Z21LCNV 19762800
*        PRAPSTER - POST error processing routine            * @Z21LCNV 19763200
*                                                            * @Z21LCNV 19763600
*   FUNCTION:                                                * @Z21LCNV 19764000
*                                                            * @Z21LCNV 19764400
*        This routine gets control when the post of the      * @Z21LCNV 19764800
*        JES2 C/I main task fails.  This routine will simply * @Z21LCNV 19765200
*        mark the ECB as posted.                             * @Z21LCNV 19765600
*                                                            * @Z21LCNV 19766000
*   LINKAGE:                                                 * @Z21LCNV 19766400
*                                                            * @Z21LCNV 19766800
*        Called from MVS POST under an SRB in address        * @Z21LCNV 19767200
*        space that issued the POST.                         * @Z21LCNV 19767600
*                                                            * @Z21LCNV 19768000
*   REGISTER USAGE (ENTRY/EXIT):                             * @Z21LCNV 19768400
*                                                            * @Z21LCNV 19768800
*    REG       VALUE ON ENTRY             VALUE ON EXIT      * @Z21LCNV 19769200
*                                                            * @Z21LCNV 19769600
*    R0        ECB address                Unchanged          * @Z21LCNV 19770000
*    R1        ASCB address (specified    Unchanged          * @Z21LCNV 19770400
*              on the POST macro)                            * @Z21LCNV 19770800
*    R2        Completion code from       Unchanged          * @Z21LCNV 19771200
*              post macro                                    * @Z21LCNV 19771600
*    R3        Completion code from       Unchanged          * @Z21LCNV 19772000
*              failing address space                         * @Z21LCNV 19772400
*    R4-R13    N/A                        Unchanged          * @Z21LCNV 19772800
*    R14       Return address             Unchanged          * @Z21LCNV 19773200
*    R15       Entry address              Unchanged          * @Z21LCNV 19773600
*                                                            * @Z21LCNV 19774000
************************************************************** @Z21LCNV 19774400
         SPACE 1                                               @Z21LCNV 19774800
         USING PRAPSTER,R12        Est local addressability    @Z21LCNV 19775200
         USING ECB,R4              Est ECB addressability      @Z21LCNV 19775600
         EJECT ,                                               @Z21LCNV 19776000
PRAPSTER BAKR  R14,0               Save callers registers      @Z21LCNV 19776400
         LR    R12,R15             Set local base              @Z21LCNV 19776800
         SPACE 1                                               @Z21LCNV 19777200
         LR    R4,R0               Set ECB address             @Z21LCNV 19777600
         ST    R2,ECBCC            Set completion code         @Z21LCNV 19778000
         OI    ECBCC,ECBPOST       Indicate posted             @Z21LCNV 19778400
         SPACE 1                                               @Z21LCNV 19778800
         PR    ,                   Return to caller            @Z21LCNV 19779200
         SPACE 1                                               @Z21LCNV 19779600
         DROP  R4,R12              Drop ECB, Local             @Z21LCNV 19780000
         EJECT ,                                               @Z21LCNV 19780400
************************************************************** @Z21LCNV 19780800
*                                                            * @Z21LCNV 19781200
*        PROCLIB allocate work area  (mapped over the $SQD   * @Z21LCNV 19781600
*        work area)                                          * @Z21LCNV 19782000
*                                                            * @Z21LCNV 19782400
************************************************************** @Z21LCNV 19782800
         SPACE 1                                               @Z21LCNV 19783200
PRAWORK  DSECT ,                   PROCLIB allocation workarea @Z21LCNV 19783600
         DS    XL(SQDLEN)          Work area used as SQD       @Z21LCNV 19784000
         SPACE 1                                               @Z21LCNV 19784400
         ORG   PRAWORK+8           Org over SQD                @Z21LCNV 19784800
         SPACE 1                                               @Z21LCNV 19785200
PRAENQMF ENQ   (),MF=L             ENQ list form               @Z21LCNV 19785600
PRAENQL  EQU   PRAENQMF,*-PRAENQMF List form equate            @Z21LCNV 19786000
         SPACE 1                                               @Z21LCNV 19786400
PRAPOST  POST  MF=L                Post list form              @Z21LCNV 19786800
         ORG   ,                                               @Z21LCNV 19787200
&J2SECTN &J2SECTT ,                Resume main CSECT           @Z21LCNV 19787600
         TITLE 'HASP JCL Conversion Sub-Task -- JES2 C/I Subtask MainliC19788000
               ne'                                             @Z21LCNV 19788400
**************************************************************          19790000
*                                                            *          19800000
*        HOSCNVT  -- HASP Converter/interpreter Subtask      * @Z21LCNV 19810000
*                                                            *          19820000
* FUNCTION:                                                  *          19830000
*                                                            *          19840000
*        This entry point is for the converter as run as a   *          19850000
*        subtask in the JES2 address space.  Control is      *          19860000
*        passed here from ATTACH processing in JES2.  It     * @Z21LCNV 19870000
*        calls service routines in HASCCNVS that sets up     * @Z21LCNV 19880000
*        and calls the MVS converter                         * @Z21LCNV 19890000
*                                                            *          19920000
* LINKAGE:                                                   *          19930000
*                                                            * @Z21LCNV 19940000
*        Attached via $DTEDYN.                               *          19950000
*                                                            *          19960000
* CALLERS:                                                   *          19970000
*                                                            * @Z21LCNV 19980000
*        HASPDYN                                             *          19990000
*                                                            *          20000000
* ENVIRONMENT:                                               *          20010000
*                                                            * @Z21LCNV 20020000
*        JES2 Subtask                                        *          20030000
*                                                            *          20040000
* RECOVERY:                                                  *          20050000
*                                                            * @Z21LCNV 20060000
*        An MVS ESTAE is established during subtask          *          20070000
*        initialization.  If recovery is required before     *          20080000
*        initialization has completed, the initialization    *          20090000
*        error bit in the DTE is set and $DTEDYN posted.  If *          20100000
*        a failure occurs once initialization has been       *          20110000
*        completed, an error return code is set in CIPARM    *          20120000
*        and the main task is posted.                        *          20130000
*                                                            *          20140000
* REGISTER USAGE (ENTRY/EXIT):                               *          20150000
*                                                            *          20160000
*    REG       VALUE ON ENTRY             VALUE ON EXIT      *          20170000
*                                                            *          20180000
*    R0        N/A                        Unknown            *          20190000
*    R1        DTE base address           Unknown            *          20200000
*    R2-R10    N/A                        Unchanged          *          20210000
*    R11       N/A                        Unchanged          *          20220000
*    R12       N/A                        Unchanged          *          20230000
*    R13       OS save area               Unchanged          *          20240000
*    R14       Return address             Unchanged          *          20250000
*    R15       Entry address              Zero               *          20260000
*                                                            *          20270000
**************************************************************          20280000
         SPACE 1                                                        20290000
         USING HCT,R11             ESTABLISH HCT ADDRESSABILITY    @136 20300000
         USING HOSCNVT,R12         ESTABLISH LOCAL ADDRESSABILITY  @136 20310000
         USING DTE,R13             ESTABLISH DTE ADDRESSABILITY    @136 20320000
        $ENVIRON SET,ENVIRON=SUBTASK  Subtask environment      @Z21LCNV 20330000
         SPACE 1                                                   @136 20340000
HOSCNVT  $ENTRY BASE=R12           HASP JCL CONVERSION SUB-TASK    @136 20350000
         SPACE 1                                                   @311 20360000
         LLGTR R12,R15             Set local base              @Z21LCNV 20370000
         LLGTR R13,R1              Set DTE base                @Z21LCNV 20380000
         LLGT  R11,DTEHCT          Get HCT address             @Z11LSSF 20390000
         LAM   AR0,AR15,$ZEROS     Ensure pure access regs     @Z07D039 20400000
         EJECT                                                   @R10AI 20410000
         LARL  R0,XCNVRA           Initialize                      @136 20420000
         ST    R0,DTEVRXAD          ESTAE                          @136 20430000
         LARL  R0,XCNVRTY            routine                       @136 20440000
         ST    R0,DTERTXAD            address                      @136 20450000
         LHI   R0,0                    vector                      @136 20460000
         ST    R0,DTEESXAD              table                      @136 20470000
         L     R2,$STABNDA         GET SUBTASK ESTAE RTN ADDRESS   @136 20480000
         LR    R3,R13              COPY DTE ADDRESS                @136 20490000
         EJECT                                                     @136 20500000
*********************************************************************** 20510000
*                                                                     * 20520000
*        E S T A B L I S H   E S T A E   E N V I R O N M E N T        * 20530000
*                                                                     * 20540000
*********************************************************************** 20550000
         SPACE 1                                                   @136 20560000
         MVC   DTEAWRKA(XCNVSTLN),XCNVABND  MOVE ESTAE PARM LIST   @136 20570000
         SPACE 1                                                   @136 20580000
         PUSH  ACONTROL,NOPRINT                                @R10LFP0 20590000
         ACONTROL FLAG(NOPAGE0)    ESTAEX uses R0 as base      @R10LFP0 20600000
         ESTAEX (2),PARAM=(3),RECORD=YES,  Establish recovery    @Z11AYC20610000
               TERM=YES,MF=(E,DTEAWRKA)     routine              @Z11AY 20620000
         POP   ACONTROL,NOPRINT                                @R10LFP0 20630000
         SPACE 1                                                   @136 20640000
         OI    DTEFLAG1,DTE1ACTV   SHOW SUBTASK ACTIVE             @136 20650000
         EJECT ,                                               @Z21LCNV 20660000
*------------------------------------------------------------* @Z21LCNV 20670000
*        Perform any specific code for a subtask in the      * @Z21LCNV 20680000
*        JES2 address space                                  * @Z21LCNV 20690000
*------------------------------------------------------------* @Z21LCNV 20700000
         SPACE 1                                               @Z21LCNV 20710000
         MVC   DCNVCIP,DTEPARM     Main task passed CIPARM     @Z21LCNV 20720000
         MVC   DCNVCIPL,$PSOTOK      and ALET from HCT         @Z21LCNV 20730000
         SPACE 1                                               @Z21LCNV 20740000
*------------------------------------------------------------* @Z21LCNV 20750000
*        The code that processes jobs will run in user       * @Z21LCNV 20760000
*        environment.  This implies that R11 is the HCCT     * @Z21LCNV 20770000
*        address, not the HCT.                               * @Z21LCNV 20780000
*------------------------------------------------------------* @Z21LCNV 20790000
         SPACE 1                                               @Z21LCNV 20800000
        $ENVIRON SET,ENVIRON=USER,SETR11=YES  USER environment @Z21LCNV 20810000
         SPACE 1                                               @Z21LCNV 20820000
         DROP  R11                 Drop HCT                    @Z21LCNV 20830000
         USING HCCT,R11            Est HCCT addressability     @Z21LCNV 20840000
         SPACE 1                                               @Z21LCNV 20850000
        $CALL  CNVSETUP,PARM=DTE,  Setup environment for C/I   @Z21LCNVC20860000
               ERRET=XCNVRET       Problem, shut down subtask  @Z21LCNV 20870000
         EJECT ,                                               @Z21LCNV 20880000
************************************************************** @Z21LCNV 20890000
*                                                            * @Z21LCNV 20895000
*        Wait for a job                                      * @Z21LCNV 20900000
*                                                            * @Z21LCNV 20905000
*        Note following code is nearly identical to code in  * @Z21LCNV 20910000
*        HASCCNVS for a converter subtask in the JES2CI      * @Z21LCNV 20915000
*        address space.  Any changes here should be made     * @Z21LCNV 20920000
*        there too.                                          * @Z21LCNV 20922000
*                                                            * @Z21LCNV 20925000
************************************************************** @Z21LCNV 20930000
         SPACE 1                                                        20940000
         USING CIPARM,R2           Est CIPARM addressability   @Z21LCNV 20950000
         USING CIWORK,R3           Est CIWORK addressability   @Z21LCNV 20960000
         SPACE 1                                               @Z21LCNV 20970000
        $ARMODE ON,INIT=CCTZEROS,  Enter AR mode               @Z21LCNVC20972000
               SYSSTATE=SET                                    @Z21LCNV 20974000
         L     R2,DCNVCIP          Get CIPARM work area        @Z21LCNV 20976000
         LAM   AR2,AR2,DCNVCIPL      and ALET                  @Z21LCNV 20978000
         L     R3,DCNVCIW          Get CIWORK address          @Z21LCNV 20980000
         SPACE 1                                               @Z21LCNV 20990000
XCNVWAIT TM    DTEFLAG1,DTE1TERM   SUBTASK SHUTDOWN REQUESTED...   @136 21020000
         JO    XCNVRET              YES, EXIT TO DELETE CONVERTER  @133 21030000
         TM    CIPFLG1,CIP1SHTD    C/I specific shutdown req?  @Z21LCNV 21032000
         JO    XCNVRET              Yes, perform shutdown      @Z21LCNV 21034000
         TM    CIPFLG1,CIP1CPRC    Close PROCLIB data sets?    @Z21LCNV 21036000
         JO    XCNVNWAT              Yes, skip wait            @Z21LCNV 21038000
         SPACE 1                                               @Z21LCNV 21040000
        $ARMODE OFF                Ensure in primary mode      @Z21LCNV 21045000
         SPACE 1                                               @Z21LCNV 21050000
         WAIT  ECB=DTEWECB         Wait for a job to process   @Z21LCNV 21055000
         XC    DTEWECB,DTEWECB     Ensure ECB is clear         @Z21LCNV 21060000
         SPACE 1                                               @Z21LCNV 21065000
        $ARMODE ON,INIT=CCTZEROS,  Enter AR mode               @Z21LCNVC21070000
               SYSSTATE=SET                                    @Z21LCNV 21075000
         EJECT ,                                               @Z21LCNV 21076000
XCNVNWAT L     R2,DCNVCIP          Get CIPARM work area        @Z21LCNV 21080000
         LAM   AR2,AR2,DCNVCIPL      and ALET                  @Z21LCNV 21085000
         SPACE 1                                                   @136 21090000
         TM    DTEFLAG1,DTE1TERM   SUBTASK SHUTDOWN REQUESTED...   @136 21100000
         JO    XCNVRET              YES, EXIT TO DELETE CONVERTER  @133 21110000
         TM    CIPFLG1,CIP1SHTD    C/I specific shutdown req?  @Z21LCNV 21111000
         JO    XCNVRET              Yes, perform shutdown      @Z21LCNV 21114000
         SPACE 1                                               @Z21LCNV 21120000
         TM    CIPFLG1,CIP1CPRC    Close PROCLIB data sets?    @Z21LCNV 21130000
         JNO   XCNVSKCP              No, skip PROCLIB close    @Z21LCNV 21140000
         SPACE 1                                               @Z21LCNV 21150000
        $CALL  COPNPROC,PARM0=CPROCLOS,  Request the current   @Z21LCNVC21160000
               PARM1=CIWORK                PROCLIB be closed   @Z21LCNV 21170000
         SPACE 1                                               @Z21LCNV 21180000
         NIL   CIPFLG1,FF-CIP1CPRC,  Reset PROCLIB close bit   @Z21LCNVC21185000
               REF=CIPARM,WREGS=(R14,R15,R1,R14)               @Z21LCNV 21190000
         EJECT ,                                               @Z21LCNV 21195000
XCNVSKCP CLC   CIPJQEOF,CCTZEROS   Is there a job to process?  @Z21LCNV 21200000
         JE    XCNVWAIT              No, go wait               @Z21LCNV 21210000
         SPACE 1                                               @Z21LCNV 21220000
        $CALL  CALLCI,PARM=DTE     Call C/I processing         @Z21LCNV 21230000
         SPACE 1                                               @Z21LCNV 21240000
         J     XCNVWAIT            Go wait for next job        @Z21LCNV 21250000
         TITLE 'HASP JCL Conversion Sub-Task -- Termination'            21260000
*********************************************************************** 21270000
*                                                                     * 21280000
*        Terminate HOSCNVT subtask                                    * 21290000
*                                                                     * 21300000
*********************************************************************** 21310000
         SPACE 1                                                        21320000
XCNVRET $ARMODE OFF,SYSSTATE=SET   Back to primary mode        @Z21LCNV 21325000
         SPACE 1                                               @Z21LCNV 21330000
        $CALL  CNVCLNUP,PARM=DTE   Clean up DTE                @Z21LCNV 21335000
         SPACE 1                                               @Z21LCNV 21340000
        $ENVIRON SET,ENVIRON=SUBTASK,  Termination runs in     @Z21LCNVC21342000
               SETR11=YES                SUBTASK environment   @Z21LCNV 21345000
         SPACE 1                                               @Z21LCNV 21350000
         DROP  R11                 Drop HCCT                   @Z21LCNV 21360000
         USING HCT,R11             Est HCT addressability      @Z21LCNV 21370000
         EJECT ,                                               @Z21LCNV 21530000
         ESTAEX 0                  Cancel ESTAE                @Z21LCNV 21810000
         SVC   3                   Then return to system                21820000
         SPACE 1                                               @Z21LCNV 21830000
         LTORG ,                                               @Z21LCNV 21840000
         SPACE 1                                               @Z21LCNV 21850000
         DROP  R3,R11,R12,R13      Drop CIWORK,HCT,Local,DTE   @Z21LCNV 21860000
         EJECT ,                                               @Z21LCNV 21861000
CPROCNOR EQU   0                   Normal processing           @Z21LCNV 21862000
CPROCLOS EQU   1                   Just close PROCLIB          @Z21LCNV 21863000
         SPACE 1                                               @Z21LCNV 21864000
XCNVABND ESTAEX ,CT,PURGE=NONE,ASYNCH=YES,TERM=NO,MF=L         @Z21LCNV 21865000
XCNVSTLN EQU   *-XCNVABND          Length of ESTAE parm list   @Z21LCNV 21866000
         TITLE 'HASP JCL Conversion Sub-Task -- ESTAE Support'     @136 21870000
*********************************************************************** 21880000
*                                                                     * 21890000
*        H O S C N V T   V R A   F O R M A T   R O U T I N E          * 21900000
*                                                                     * 21910000
*        FUNCTION:  PROVIDE SUBTASK DEPENDENT DATA IN THE SDWA        * 21920000
*                   VARIABLE RECORDING AREA.                          * 21930000
*                                                                     * 21940000
*        REGISTERS USED:       ENTRY             EXIT                 * 21950000
*                                                                     * 21960000
*                   R10     SDWA ADDRESS       UNCHANGED              * 21970000
*                   R11     HCT ADDRESS        UNCHANGED              * 21980000
*                   R13     DTE ADDRESS        UNCHANGED              * 21990000
*                   R14     RETURN ADDRESS     UNCHANGED              * 22000000
*                   R15     ENTRY ADDRESS      UNCHANGED              * 22010000
*                                                                     * 22020000
*********************************************************************** 22030000
         SPACE 1                                               @510P243 22040000
         USING CIWORK,R8           Est CIWORK addressability   @Z21LCNV 22050000
         USING JCT,R10             Est JCT addressability      @Z21LCNV 22060000
         USING HCT,R11             Est HCT addressability      @Z21LCNV 22070000
         USING XCNVRA,R12          PROVIDE TEMP ADDRESSABILITY @510P243 22080000
         USING DTE,R13             DTE addressability          @Z21LCNV 22090000
         SPACE 1                                               @510P243 22100000
XCNVRA   STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS      @510P243 22110000
         LR    R12,R15             SET LOCAL BASE REGISTER     @510P243 22120000
         L     R8,DCNVCIW          Get CIWORK address          @Z21LCNV 22130000
         SPACE 1                                               @510P243 22140000
         LR    R7,R10              SAVE SDWA ADDRESS           @510P243 22150000
         LT    R10,CIWJCTA           Get JCT address           @510P243 22160000
         JZ    XCNVRAND            BRANCH IF NONE              @510P243 22170000
         LA    R2,JCTJNAME         POINT TO JOB NAME           @510P243 22180000
         SPACE 1                                               @510P243 22190000
         VRADATA KEY=VRAJOB,DATA=(R2),LEN=L'JCTJNAME,                  C22200000
               SDWAREG=(R7),TYPE=(LEN,NOTEST)  COPY JOB NAME   @510P243 22210000
         EJECT                                                 @510P243 22220000
         LA    R2,JCTJOBID         POINT TO JOB ID             @510P243 22230000
         SPACE 1                                               @510P243 22240000
         VRADATA KEY=VRAEBC,DATA=(R2),LEN=L'JCTJOBID,                  C22250000
               SDWAREG=(R7),TYPE=(LEN,NOTEST)  COPY JOB NUMBER @510P243 22260000
         SPACE 1                                               @510P243 22270000
XCNVRAND LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS   @510P243 22280000
         BR    R14                 RETURN TO CALLER            @510P243 22290000
         SPACE 1                                               @Z13LIST 22300000
         DROP  ,                   Drop everything             @Z21LCNV 22310000
         SPACE 1                                               @Z13LIST 22320000
         LTORG ,                                               @Z13LIST 22330000
         TITLE 'HASP JCL Conversion Sub-Task - Recovery Services'      C22340000
                                                               @Z21LCNV 22350000
*********************************************************************** 22360000
*                                                                     * 22370000
*        H O S C N V T   S U B T A S K   R E T R Y   R O U T I N E    * 22380000
*                                                                     * 22390000
*        FUNCTION:  Call the common recovery service to        @Z21LCNV 22400000
*                   clean up the current job.                  @Z21LCNV 22410000
*                   INDICATE NO RESUME PROCESSING. HOSCNVT            * 22420000
*                   MUST BE REATTACHED.                               * 22430000
*                                                                     * 22440000
*        REGISTERS USED:        ENTRY             EXIT                * 22450000
*                                                                     * 22460000
*                   R1       ERA ADDRESS        UNCHANGED             * 22470000
*                   R10      SDWA ADDRESS       UNCHANGED             * 22480000
*                             OR ZEROS                                * 22490000
*                   R11      HCT ADDRESS        UNCHANGED             * 22500000
*                   R13      DTE ADDRESS        UNCHANGED             * 22510000
*                   R14      RETURN ADDRESS     UNCHANGED             * 22520000
*                   R15      ENTRY ADDRESS      UNCHANGED             * 22530000
*                                                                     * 22540000
*********************************************************************** 22550000
         SPACE 1                                                        22560000
         USING HCT,R11             Est HCT addressability      @Z21LCNV 22570000
         USING XCNVRTY,R12         Local addressability        @Z02LADR 22580000
         USING DTE,R13             DTE addressability          @Z02LADR 22590000
         USING ERA,R1              PROVIDE ERA ADDRESSABILITY      @136 22600000
         SPACE 1                                                   @130 22610000
XCNVRTY  BAKR  R14,0               Save callers registers      @Z21LCNV 22620000
         LR    R12,R15             Set local base              @Z02LADR 22630000
         SPACE 1                                                   @130 22640000
        $SETRP PERCOLATE           INDICATE NO RESUME PROCESSING   @136 22650000
         DROP  R1                  SUSPEND ERA ADDRESSABILITY      @136 22660000
         EJECT ,                                               @Z21LCNV 22670000
*------------------------------------------------------------* @Z21LCNV 22680000
*        Call common retry routine                           * @Z21LCNV 22690000
*------------------------------------------------------------* @Z21LCNV 22700000
         SPACE 1                                               @Z21LCNV 22710000
        $ENVIRON SET,ENVIRON=USER,SETR11=YES  USER environment @Z21LCNV 22720000
         SPACE 1                                               @Z21LCNV 22730000
         DROP  R11                 Drop HCT                    @Z21LCNV 22740000
         USING HCCT,R11            Est HCCT addressability     @Z21LCNV 22750000
         SPACE 1                                               @Z21LCNV 22760000
        $CALL  XCNRECOV,           Call common recovery        @Z21LCNVC22770000
               PARM=DTE              passing the DTE           @Z21LCNV 22780000
         SPACE 1                                               @Z21LCNV 22790000
        $ENVIRON SET,ENVIRON=SUBTASK,  Termination runs in     @Z21LCNVC22800000
               SETR11=YES                SUBTASK environment   @Z21LCNV 22810000
         SPACE 1                                               @Z21LCNV 22820000
         DROP  R11                 Drop HCCT                   @Z21LCNV 22830000
         USING HCT,R11             Est HCT addressability      @Z21LCNV 22840000
         SPACE 1                                               @Z21LCNV 22850000
         EREGG R15,R1              Restore callers registers   @Z21LCNV 22860000
         PR    ,                   Return to caller            @Z21LCNV 22870000
         SPACE 1                                               @Z21LCNV 22880000
         DROP  ,                   Drop everything             @Z21LCNV 22890000
         SPACE 1                                               @Z21LCNV 22900000
         LTORG ,                                               @Z21LCNV 22910000
         TITLE 'HASP JCL Conversion Module -- Module data area'         99980800
************************************************************** @R10LADR 99981600
*                                                            * @R10LADR 99982400
*        HASPCNVT data area.  This area is addressed via     * @R10LADR 99983200
*        R12 for all code in this module.                    * @R10LADR 99984000
*                                                            * @R10LADR 99984800
************************************************************** @R10LADR 99985600
         SPACE 1                                               @R10LADR 99986400
CNVTDATA LOCTR ,                   Place in data area          @R10LADR 99987200
         SPACE 1                                               @R10LADR 99988000
         LTORG ,                                               @R10LADR 99988800
         TITLE 'HASP JCL CONVERSION MODULE -- EPILOG ($MODEND)'    @133 99990000
        $MODEND ,                                                  @133 99991000
APARNUM  DC    CL8'NONE'           APAR NUMBER                          99999997
PTFNUM   DC    CL8'NONE'           PTF NUMBER                           99999998
         END   ,                   END OF HASPCNVT                      99999999
